"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[3103],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||a;return n?o.createElement(f,i(i({ref:t},c),{},{components:n})):o.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},93733:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return u}});var o=n(83117),r=n(80102),a=(n(67294),n(3905)),i=["components"],l={title:"Modules",description:"Extending the functionalities of nanos world Scripting API"},s=void 0,d={unversionedId:"core-concepts/modules",id:"version-latest/core-concepts/modules",title:"Modules",description:"Extending the functionalities of nanos world Scripting API",source:"@site/versioned_docs/version-latest/core-concepts/modules.md",sourceDirName:"core-concepts",slug:"/core-concepts/modules",permalink:"/docs/core-concepts/modules",draft:!1,editUrl:"https://github.com/nanos-world/docs/edit/master/versioned_docs/version-latest/core-concepts/modules.md",tags:[],version:"latest",lastUpdatedBy:"Gabriel T. Nardy",lastUpdatedAt:1649243394,formattedLastUpdatedAt:"4/6/2022",frontMatter:{title:"Modules",description:"Extending the functionalities of nanos world Scripting API"},sidebar:"version-latest/main",previous:{title:"Assets",permalink:"/docs/core-concepts/assets"},next:{title:"Server & Client Lifecycle",permalink:"/docs/core-concepts/server-and-client-lifecycle"}},c={},u=[{value:"Creating your own C module",id:"creating-your-own-c-module",level:2},{value:"First Steps",id:"first-steps",level:4},{value:"Understanding the example",id:"understanding-the-example",level:3},{value:"Compiling your C module",id:"compiling-your-c-module",level:3},{value:"Using your C module",id:"using-your-c-module",level:3}],p={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Extending the functionalities of nanos world Scripting API"),(0,a.kt)("p",null,"Modules allows you to extend the functionality of the nanos world scripting API on the server side. Currently only C modules are supported."),(0,a.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Be aware that this part of the scripting API is currently work in progress and may change at any time."))),(0,a.kt)("h2",{id:"creating-your-own-c-module"},"Creating your own C module"),(0,a.kt)("p",null,"It is also possible to you create your own C/C++ module and call it's functions from nanos world."),(0,a.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"This is an advanced procedure so instabilities and even crashes may occur."))),(0,a.kt)("p",null,"To create your own module, fist make sure you have ",(0,a.kt)("strong",{parentName:"p"},"Visual Studio")," installed with ",(0,a.kt)("strong",{parentName:"p"},"Desktop development with C++")," (and ",(0,a.kt)("strong",{parentName:"p"},"CMake"),") or any other C compiler on Linux."),(0,a.kt)("h4",{id:"first-steps"},"First Steps"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Then, clone our ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/nanos-world-modules/module-example"},"example module")," in your computer to get start with it."),(0,a.kt)("li",{parentName:"ol"},"After cloning, you will need to download it's submodules with ",(0,a.kt)("inlineCode",{parentName:"li"},"git submodule update --init --recursive")," - this will download the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/nanos-world/module-sdk/"},"module-sdk")," as a git submodule into deps/ folder automatically.")),(0,a.kt)("h3",{id:"understanding-the-example"},"Understanding the example"),(0,a.kt)("p",null,"The important file is under ",(0,a.kt)("inlineCode",{parentName:"p"},"src/example.cpp"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"reference",reference:!0},"https://github.com/nanos-world-modules/module-example/blob/main/src/example.cpp\n")),(0,a.kt)("h3",{id:"compiling-your-c-module"},"Compiling your C module"),(0,a.kt)("p",null,"To compile the example, follow the steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a folder called ",(0,a.kt)("inlineCode",{parentName:"li"},"build/"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"mkdir build"),"."),(0,a.kt)("li",{parentName:"ol"},"Enter the build folder: ",(0,a.kt)("inlineCode",{parentName:"li"},"cd build"),"."),(0,a.kt)("li",{parentName:"ol"},"Run ",(0,a.kt)("inlineCode",{parentName:"li"},"cmake .."),"."),(0,a.kt)("li",{parentName:"ol"},"Build it with ",(0,a.kt)("inlineCode",{parentName:"li"},"cmake --build . --config Release"))),(0,a.kt)("p",null,"And now you will have the dlls/libs in ",(0,a.kt)("inlineCode",{parentName:"p"},"build/Release")," folder."),(0,a.kt)("h3",{id:"using-your-c-module"},"Using your C module"),(0,a.kt)("p",null,"Now copy the ",(0,a.kt)("inlineCode",{parentName:"p"},".dll")," file into your nanos world ",(0,a.kt)("inlineCode",{parentName:"p"},"Server/Modules")," folder."),(0,a.kt)("p",null,"And in your Package, you can load and use it like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"-- Loads the module 'example'\nlocal example = require('example')\n\n-- Calls the module function 'test'\n-- Will print 'Hello World' on console\nPackage.Log(example.test())\n")))}m.isMDXComponent=!0}}]);