"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[3610],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=u(n),d=i,y=f["".concat(s,".").concat(d)]||f[d]||p[d]||a;return n?r.createElement(y,o(o({ref:t},l),{},{components:n})):r.createElement(y,o({ref:t},l))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},87469:function(e,t,n){n.d(t,{PZ:function(){return b},SM:function(){return c},Ut:function(){return g},YS:function(){return o},Yb:function(){return f},aj:function(){return m},p2:function(){return v},rt:function(){return h}});n(83117),n(80102),n(67294);var r=n(3905),i=n(80143),a=function(){return(0,i.zu)().path},o=function(e){var t=e.title,n=e.description,i=e.href,o=e.image_src;return(0,r.kt)("a",{class:"card-link",href:i.startsWith("http")?i:a()+"/"+i},(0,r.kt)("img",{src:o||"/img/docs/nanos-world-background.jpg"}),(0,r.kt)("h4",null,t),(0,r.kt)("p",null,n))},c=function(e){var t=e.children,n=e.href;return(0,r.kt)("a",{class:"reference-link",href:n.startsWith("http")?n:a()+"/"+n},t,(0,r.kt)("span",null,n))},s=function(e,t){return(0,r.kt)("a",{class:"authority-availability",href:a()+"/core-concepts/scripting/authority-concepts#methods-and-events-availability"},(0,r.kt)("img",{src:e,title:t}))},u=function(e){return(0,r.kt)("a",{href:a()+"/scripting-reference/glossary/basic-types#"+e.toLowerCase()},e)},l=function(e,t){return(0,r.kt)("a",{href:a()+"/scripting-reference/utility-classes/"+(t||e.toLowerCase())},e)},p=function(e,t){return(0,r.kt)("a",{href:a()+"/scripting-reference/classes/"+(t||e.toLowerCase())},e)},f=function(e){var t=e.children;return(0,r.kt)("a",{href:a()+"/scripting-reference/glossary/enums#"+t.toLowerCase(),title:t+" Enum (number)"},t)},d=function(e){return(0,r.kt)("a",{href:a()+"/core-concepts/assets#referencing-assets-in-scripting",title:"Asset Path (string)"},e)},y=function(e){return(0,r.kt)("a",{href:a()+"/scripting-reference/glossary/basic-types#specialpath",title:"Special Path (string)"},e)},m={AuthorityOnly:function(){return s("/img/scripting/authority-only.svg","authority-only - this can be called only on the side which spawned it!")},ServerOnly:function(){return s("/img/scripting/server-only.svg","server-only - this can be called only on server side!")},ClientOnly:function(){return s("/img/scripting/client-only.svg","client-only - this can be called only on client side!")},Both:function(){return s("/img/scripting/both.png","both-sides - this can be called on any side!")}},h={Number:function(){return u("number")},String:function(){return u("string")},Boolean:function(){return u("boolean")},Table:function(){return u("table")},Iterator:function(){return u("iterator")},Any:function(){return u("any")},Function:function(){return u("function")},Nil:function(){return u("nil")}},g={Vector:function(){return l("Vector")},Rotator:function(){return l("Rotator")},Color:function(){return l("Color")},Quat:function(){return l("Quat","quaternion")},Vector2D:function(){return l("Vector2D","vectortwod")}},b={Actor:function(){return p("Actor","base-classes/actor")},Paintable:function(){return p("Paintable","base-classes/paintable")},Pickable:function(){return p("Pickable","base-classes/pickable")},Billboard:function(){return p("Billboard")},Blueprint:function(){return p("Blueprint")},Canvas:function(){return p("Canvas")},Cable:function(){return p("Cable")},Character:function(){return p("Character")},Database:function(){return p("Database")},File:function(){return p("File")},Grenade:function(){return p("Grenade")},Melee:function(){return p("Melee")},Light:function(){return p("Light")},Particle:function(){return p("Particle")},Player:function(){return p("Player")},Prop:function(){return p("Prop")},Sound:function(){return p("Sound")},SceneCapture:function(){return p("SceneCapture","scene-capture")},StaticMesh:function(){return p("StaticMesh","static-mesh")},TextRender:function(){return p("TextRender","text-render")},Trigger:function(){return p("Trigger")},Vehicle:function(){return p("Vehicle")},Weapon:function(){return p("Weapon")},WebUI:function(){return p("WebUI")}},v={StaticMesh:function(){return d("StaticMesh Asset")},SkeletalMesh:function(){return d("SkeletalMesh Asset")},Animation:function(){return d("Animation Asset")},Particle:function(){return d("Particle Asset")},Material:function(){return d("Material Asset")},Map:function(){return d("Map Asset")},Blueprint:function(){return d("Blueprint Asset")},Sound:function(){return y("Sound Asset or Special Path")},Image:function(){return y("Image Special Path")},HTML:function(){return y("HTML Special Path")}}},81870:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return y},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return f}});var r=n(83117),i=n(80102),a=(n(67294),n(3905)),o=n(87469),c=["components"],s={title:"Entity Values",description:"How to store data in Entities accessible from anywhere",sidebar_position:4,tags:["scripting"]},u=void 0,l={unversionedId:"core-concepts/scripting/entity-values",id:"core-concepts/scripting/entity-values",title:"Entity Values",description:"How to store data in Entities accessible from anywhere",source:"@site/docs/core-concepts/scripting/entity-values.mdx",sourceDirName:"core-concepts/scripting",slug:"/core-concepts/scripting/entity-values",permalink:"/docs/next/core-concepts/scripting/entity-values",draft:!1,editUrl:"https://github.com/nanos-world/docs/edit/master/docs/core-concepts/scripting/entity-values.mdx",tags:[{label:"scripting",permalink:"/docs/next/tags/scripting"}],version:"current",lastUpdatedBy:"Gabriel T. Nardy",lastUpdatedAt:1652113101,formattedLastUpdatedAt:"May 9, 2022",sidebarPosition:4,frontMatter:{title:"Entity Values",description:"How to store data in Entities accessible from anywhere",sidebar_position:4,tags:["scripting"]},sidebar:"main",previous:{title:"Packages Communication",permalink:"/docs/next/core-concepts/scripting/communicating-between-packages"},next:{title:"User Interface",permalink:"/docs/next/core-concepts/scripting/user-interface"}},p={},f=[{value:"<code>SetValue</code>",id:"setvalue",level:2},{value:"<code>GetValue</code>",id:"getvalue",level:2}],d={toc:f};function y(e){var t=e.components,n=(0,i.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"How to store data in Entities accessible from anywhere"),(0,a.kt)("p",null,"In nanos world it is possible to store data on entities. Those values can be accessed by any Package and also you can determine if the value will be automatically synchronized with the Clients."),(0,a.kt)("p",null,"In ",(0,a.kt)(o.PZ.Actor,null)," page we can find the definitions of ",(0,a.kt)("inlineCode",{parentName:"p"},":SetValue()")," and ",(0,a.kt)("inlineCode",{parentName:"p"},":GetValue()")," methods. Also it is possible to store Values globally on ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/scripting-reference/static-classes/client"},"Client")," and ",(0,a.kt)("a",{parentName:"p",href:"/docs/next/scripting-reference/static-classes/server"},"Server")," Static Classes with the same methods!"),(0,a.kt)("h2",{id:"setvalue"},(0,a.kt)("inlineCode",{parentName:"h2"},"SetValue")),(0,a.kt)("p",null,"In any entity, you can use the method ",(0,a.kt)("inlineCode",{parentName:"p"},":SetValue(key, value, sync)")," to set any kind of value on that entity. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Server/Index.lua"',title:'"Server/Index.lua"'},"-- Sets a synchronized 'my_value' value\nmy_player:SetValue(\"my_value\", 100, true)\n")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"It is possible to store ",(0,a.kt)(o.rt.Any,null)," kind of value, except ",(0,a.kt)("inlineCode",{parentName:"p"},"functions"),".")),(0,a.kt)("p",null,"If you pass ",(0,a.kt)("inlineCode",{parentName:"p"},"sync")," as true, that value will be automatically synchronized with all clients. Note that ",(0,a.kt)("inlineCode",{parentName:"p"},"sync"),"is an optional parameter only available on the ",(0,a.kt)("strong",{parentName:"p"},"Server")," side."),(0,a.kt)("admonition",{title:"note",type:"info"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},"Client.SetValue()")," and ",(0,a.kt)("strong",{parentName:"p"},"Server.SetValue()")," won't have the last parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"sync"),". As the value will only exist on the side you are setting.")),(0,a.kt)("h2",{id:"getvalue"},(0,a.kt)("inlineCode",{parentName:"h2"},"GetValue")),(0,a.kt)("p",null,"After set, you can access any value from any entity using ",(0,a.kt)("inlineCode",{parentName:"p"},":GetValue(key, fallback)")," on any entity you want. If you set the value to be synchronized on Clients, you will be able to get the values on the Client side as well. You can pass an aditional parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"fallback")," which will be returned if the key doesn't exist!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"-- Gets 'my_value' value, or returns '0' if no value is set\nlocal my_value = my_player:GetValue(\"my_value\", 0)\n")),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Be aware that storing ",(0,a.kt)("strong",{parentName:"p"},"entities")," itself will not nullify the value if the entity is destroyed, so it is a good practice to validate if values with ",(0,a.kt)("inlineCode",{parentName:"p"},":IsValid()")," after retrieving them.")))}y.isMDXComponent=!0}}]);