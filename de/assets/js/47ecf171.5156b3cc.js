"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[7468],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return u}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),h=p(r),u=a,m=h["".concat(c,".").concat(u)]||h[u]||d[u]||o;return r?n.createElement(m,i(i({ref:t},l),{},{components:r})):n.createElement(m,i({ref:t},l))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},51287:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return v},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return h}});var n=r(83117),a=r(80102),o=(r(67294),r(3905)),i=r(83887),s=["components"],c={title:"\ud83d\udce6 Prop",description:"A Prop represents a Dynamic Mesh which can be spawned in the world, can be grabbed around by characters and have physics.",sidebar_position:0,tags:["class"]},p=void 0,l={unversionedId:"scripting-reference/classes/prop",id:"version-latest/scripting-reference/classes/prop",title:"\ud83d\udce6 Prop",description:"A Prop represents a Dynamic Mesh which can be spawned in the world, can be grabbed around by characters and have physics.",source:"@site/i18n/de/docusaurus-plugin-content-docs/version-latest/scripting-reference/classes/prop.mdx",sourceDirName:"scripting-reference/classes",slug:"/scripting-reference/classes/prop",permalink:"/de/docs/scripting-reference/classes/prop",draft:!1,editUrl:"https://github.com/nanos-world/docs/edit/master/versioned_docs/version-latest/scripting-reference/classes/prop.mdx",tags:[{label:"class",permalink:"/de/docs/tags/class"}],version:"latest",sidebarPosition:0,frontMatter:{title:"\ud83d\udce6 Prop",description:"A Prop represents a Dynamic Mesh which can be spawned in the world, can be grabbed around by characters and have physics.",sidebar_position:0,tags:["class"]},sidebar:"version-latest/main",previous:{title:"\ud83d\udc69\u200d\ud83d\udcbb Player",permalink:"/de/docs/scripting-reference/classes/player"},next:{title:"\ud83d\udcfd\ufe0f SceneCapture",permalink:"/de/docs/scripting-reference/classes/scene-capture"}},d={},h=[{value:"\ud83c\udf92 Examples",id:"-examples",level:2},{value:"\ud83c\udfd7\ufe0f Constructor",id:"\ufe0f-constructor",level:2},{value:"\ud83e\udda0 Functions",id:"-functions",level:2},{value:"\ud83d\ude80 Events",id:"-events",level:2}],u=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",t)}},m=u("HeaderDeclaration"),b=u("ConstructorDeclaration"),y=u("FunctionsDeclaration"),f=u("EventsDeclaration"),g={toc:h};function v(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(m,{class_data:i,image:"/img/docs/props.webp",mdxType:"HeaderDeclaration"}),(0,o.kt)("h2",{id:"-examples"},"\ud83c\udf92 Examples"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local my_prop = Prop(\n  Vector(-900, 185, 215),\n  Rotator(0, 90, 90),\n  "nanos-world::SM_Crate_07"\n)\n')),(0,o.kt)("h2",{id:"\ufe0f-constructor"},"\ud83c\udfd7\ufe0f Constructor"),(0,o.kt)(b,{class_data:i,mdxType:"ConstructorDeclaration"}),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If the Prop was spawned by the Client. It will have all interactions disabled (e.g. it will not be able to be grabbed by Characters).")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Props smaller than radius ",(0,o.kt)("strong",{parentName:"p"},"40")," units or very thin (any side smaller than ",(0,o.kt)("strong",{parentName:"p"},"20")," units) will have ",(0,o.kt)("strong",{parentName:"p"},"CCD")," (Continuous Collision Detection) enabled automatically to avoid falling through the floor or other objects. ",(0,o.kt)("em",{parentName:"p"},"This will slightly increase the performance cost of them!"))),(0,o.kt)("h2",{id:"-functions"},"\ud83e\udda0 Functions"),(0,o.kt)(y,{class_data:i,mdxType:"FunctionsDeclaration"}),(0,o.kt)("h2",{id:"-events"},"\ud83d\ude80 Events"),(0,o.kt)(f,{class_data:i,mdxType:"EventsDeclaration"}))}v.isMDXComponent=!0},83887:function(e){e.exports=JSON.parse('{"name":"Prop","description":"A Prop represents a Dynamic Mesh which can be spawned in the world, can be grabbed around by characters and have physics.","authority":"both","inheritance":["Actor","Paintable"],"constructor":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"StaticMeshPath","name":"asset","default":""},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto","description":"Setting <code>CollisionType.Auto</code> will make it automatically switch between <b>Normal</b> and <b>IgnoreOnlyPawn</b> if they are smaller than radius <b>40</b> units."},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"boolean","name":"is_grabbable","default":"true","description":"Props bigger than radius <b>200</b> units will have it off by default (even if setting it to <b>true</b>). This can be overridden with <code>:SetGrabbable(true)</code>."},{"type":"boolean","name":"force_no_ccd","default":"false","description":"Force CCD to not be used on small Props (may cause Props passing through objects if it\'s kinda small). It\'s smart to enable it on \'visual only\' props."}],"functions":[{"name":"SetGrabbable","description":"Sets ability to Characters to Grab this Prop","parameters":[{"type":"boolean","name":"is_grabbable","description":"If the Prop will be able to be grabbable or not"}],"authority":"server"},{"name":"SetPhysicsDamping","description":"Sets the Physics damping of this Prop","parameters":[{"type":"number","name":"linear_damping","description":""},{"type":"number","name":"angular_damping","description":""}],"authority":"authority"},{"name":"GetAssetName","description":"Gets the Asset name","return":[{"type":"string","description":"asset name"}],"authority":"both"},{"name":"GetHandler","description":"Gets the Character (if existing) which is holding this","return":[{"type":"Character?","description":"the character that holds the object"}],"authority":"both"},{"name":"IsGrabbable","description":"Gets ability to Grab this Prop","return":[{"type":"boolean"}],"authority":"both"}],"events":[{"name":"Grab","authority":"both","description":"Triggered when Character grabs a Prop","arguments":[{"type":"Prop","name":"self","description":"The prop which was Grabbed"},{"type":"Character","name":"character","description":"The new Grabber"}]},{"name":"Hit","authority":"both","description":"Triggered when this Prop hits something","arguments":[{"type":"Prop","name":"self","description":"The prop which has been hit"},{"type":"number","name":"impact_force","description":"The intensity of the Hit normalized by the Prop\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction it hits"},{"type":"Vector","name":"impact_location","description":"The world 3D location of the impact"},{"type":"Vector","name":"velocity","description":"The Prop velocity at the moment it hits"}]},{"name":"Interact","authority":"server","description":"When a Character interacts with this Prop (i.e. try to Grab it)","arguments":[{"type":"Prop","name":"self","description":"the object that undergoes an interaction"},{"type":"Character","name":"character","description":"the character who interacts with the object"}],"return":[{"type":"boolean","description":"Return false to prevent the interaction (i.e. prevent being grabbed)"}]},{"name":"TakeDamage","authority":"both","description":"When Prop takes Damage","arguments":[{"type":"Prop","name":"self","description":"the object that takes the damage"},{"type":"number","name":"damage","description":"amount of damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player?","name":"instigator","description":"The player which caused the damage"},{"type":"Actor?","name":"causer","description":"The object which caused the damage"}]},{"name":"UnGrab","authority":"both","description":"Triggered when this Prop is ungrabbed","arguments":[{"type":"Prop","name":"self","description":"The prop which has been ungrabbed"},{"type":"Character","name":"character","description":"The old Grabber"}]}]}')}}]);