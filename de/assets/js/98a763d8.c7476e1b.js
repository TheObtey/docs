"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[5639],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(g,i(i({ref:n},p),{},{components:t})):r.createElement(g,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},92354:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const o={title:"Paketkommunikation",description:"Alles, was Sie wissen m\xfcssen, um zwischen verschiedenen Paketen zu kommunizieren",sidebar_position:3,tags:["scripting"]},i=void 0,l={unversionedId:"core-concepts/scripting/communicating-between-packages",id:"core-concepts/scripting/communicating-between-packages",title:"Paketkommunikation",description:"Alles, was Sie wissen m\xfcssen, um zwischen verschiedenen Paketen zu kommunizieren",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/core-concepts/scripting/communicating-between-packages.md",sourceDirName:"core-concepts/scripting",slug:"/core-concepts/scripting/communicating-between-packages",permalink:"/de/docs/next/core-concepts/scripting/communicating-between-packages",draft:!1,editUrl:"https://crowdin.com/project/nanos-world-docs/de",tags:[{label:"scripting",permalink:"/de/docs/next/tags/scripting"}],version:"current",sidebarPosition:3,frontMatter:{title:"Paketkommunikation",description:"Alles, was Sie wissen m\xfcssen, um zwischen verschiedenen Paketen zu kommunizieren",sidebar_position:3,tags:["scripting"]},sidebar:"main",previous:{title:"Beh\xf6rdenkonzepte",permalink:"/de/docs/next/core-concepts/scripting/authority-concepts"},next:{title:"Entit\xe4tswerte",permalink:"/de/docs/next/core-concepts/scripting/entity-values"}},s={},c=[{value:"Eigene Ereignisse",id:"eigene-ereignisse",level:2},{value:"Kommunikation mit Paketen auf der gleichen Seite",id:"kommunikation-mit-paketen-auf-der-gleichen-seite",level:3},{value:"Daten werden \xfcber das Netzwerk gesendet",id:"daten-werden-\xfcber-das-netzwerk-gesendet",level:3},{value:"Exporting Variables Globally",id:"exporting-variables-globally",level:2},{value:"Exportieren einer Funktion",id:"exportieren-einer-funktion",level:3},{value:"Eine Exportierte Funktion aus einem anderen Paket aufrufen",id:"eine-exportierte-funktion-aus-einem-anderen-paket-aufrufen",level:3}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Alles, was Sie wissen m\xfcssen, um zwischen verschiedenen Paketen zu kommunizieren"),(0,a.kt)("p",null,"In nanos world there are 2 main ways which you can interact with other ",(0,a.kt)("strong",{parentName:"p"},"Packages"),". Auf dieser Seite werden wir Ihnen detailliert erkl\xe4ren, wie Sie dies tun k\xf6nnen."),(0,a.kt)("h2",{id:"eigene-ereignisse"},"Eigene Ereignisse"),(0,a.kt)("h3",{id:"kommunikation-mit-paketen-auf-der-gleichen-seite"},"Kommunikation mit Paketen auf der gleichen Seite"),(0,a.kt)("p",null,"Custom Events are the easier way to send or receive generic data or information to other packages:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="package-one/Server/Index.lua"',title:'"package-one/Server/Index.lua"'},'local my_parameter1 = 123\nlocal my_parameter2 = "halllo"\nlocal my_parameter3 = { important_stuff = "omg!" }\n\nEvents.Call("MyAwesomeEvent", my_parameter1, my_parameter2, my_parameter3)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="package-two/Server/Index.lua"',title:'"package-two/Server/Index.lua"'},'Events.Subscribe("MyAwesomeEvent", function(parameter1, parameter2, parameter3)\n    Console.Log("Received " .. parameter1) -- Received 123\n    Console.Log("Received " .. parameter2) -- Received hello there\n    Console.Log("Received " .. parameter3) -- Empfangene Tabelle\nend)\n')),(0,a.kt)("h3",{id:"daten-werden-\xfcber-das-netzwerk-gesendet"},"Daten werden \xfcber das Netzwerk gesendet"),(0,a.kt)("p",null,"Sending information through the network is not different from sending in the same side:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Server/Index.lua"',title:'"Server/Index.lua"'},'local my_parameter1 = "coole Daten aus dem Netzwerk"\n\n-- Rufe dieses Ereignis an alle Spieler\nEvents. roadcastRemote("GetThisFromServer", my_parameter1)\n\nlocal player_02 = GetPlayerSomehow()\n\n-- Oder rufen Sie dieses Ereignis an einen bestimmten Spieler\nEvents.CallRemote("GetThisFromServer", player_02, my_parameter1)\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Client/Index.lua"',title:'"Client/Index.lua"'},'Events.Subscribe("GetThisFromServer", function(parameter1, parameter2, parameter3)\n    Console.Log("Received " .. parameter1) -- Erhaltene coole Daten vom Netzwerk\nEnde)\n')),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"For more information and examples about using Custom Events, please refer to ",(0,a.kt)("a",{parentName:"p",href:"/de/docs/next/scripting-reference/static-classes/events"},"Events"),".")),(0,a.kt)("h2",{id:"exporting-variables-globally"},"Exporting Variables Globally"),(0,a.kt)("p",null,"Another way of communicating is using ",(0,a.kt)("inlineCode",{parentName:"p"},"Package.Export()")," method, it allows exposing variables (tables, functions, etc) globally so all other Packages can access it directly."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Unlike events, exported functions can return values to the caller. But exported functions are only available to the same side (Server or Client).")),(0,a.kt)("h3",{id:"exportieren-einer-funktion"},"Exportieren einer Funktion"),(0,a.kt)("p",null,"With that, you can export functions for example, like that:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="package-one/Server/Index.lua"',title:'"package-one/Server/Index.lua"'},'-- Definiert eine Funktion, die Sie exportieren wollen\nFunktion SpawnCoolWeapon(Position, Rotation)\n    lokale cool_weapon = Waff(Position oder Vector(), Rotation oder Rotator(), ...)\n    return cool_weapon\nend\n\n-- Exports the function to be called by other Packages\nPackage.Export("SpawnCoolWeapon", SpawnCoolWeapon)\n')),(0,a.kt)("p",null,"You can even export a whole table containing functions for example, to work as a library:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="package-one/Server/Index.lua"',title:'"package-one/Server/Index.lua"'},'-- Defines a table with functions which you want to export\nMyAwesomeLibrary = {\n    CoolMethod = function(a, b)\n        return a + b\n    end,\n    AnotherAwesomeImportantMethod = function(c, d)\n        return c * d\n    end\n}\n\n-- Exports the table to be accessed by other Packages\nPackage.Export("MyAwesomeLibrary", MyAwesomeLibrary)\n')),(0,a.kt)("h3",{id:"eine-exportierte-funktion-aus-einem-anderen-paket-aufrufen"},"Eine Exportierte Funktion aus einem anderen Paket aufrufen"),(0,a.kt)("p",null,"Now you can access that directly from other packages:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="package-two/Server/Index.lua"',title:'"package-two/Server/Index.lua"'},"-- Calls the exported function\nlocal cool_weapon = SpawnCoolWeapon(Vector(), Rotator())\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="package-two/Server/Index.lua"',title:'"package-two/Server/Index.lua"'},"-- Calls the exported table\nlocal awesome_result = MyAwesomeLibrary.CoolMethod(123, 456)\n")))}u.isMDXComponent=!0}}]);