"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[1448],{23397:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=n(85893),s=n(11151);const o={title:"Monster Truck",description:"How to create a Monster Truck using the Vehicle system",tags:["tutorial-example","scripting","assets"]},a=void 0,i={id:"getting-started/tutorials-and-examples/monster-truck",title:"Monster Truck",description:"How to create a Monster Truck using the Vehicle system",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/getting-started/tutorials-and-examples/monster-truck.md",sourceDirName:"getting-started/tutorials-and-examples",slug:"/getting-started/tutorials-and-examples/monster-truck",permalink:"/de/docs/next/getting-started/tutorials-and-examples/monster-truck",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/nanos-world-docs/de",tags:[{label:"tutorial-example",permalink:"/de/docs/next/tags/tutorial-example"},{label:"scripting",permalink:"/de/docs/next/tags/scripting"},{label:"assets",permalink:"/de/docs/next/tags/assets"}],version:"current",frontMatter:{title:"Monster Truck",description:"How to create a Monster Truck using the Vehicle system",tags:["tutorial-example","scripting","assets"]},sidebar:"main",previous:{title:"Hosting Server 4Free - Google Cloud",permalink:"/de/docs/next/getting-started/tutorials-and-examples/hosting-server-4free-gcp"},next:{title:"Name Tags",permalink:"/de/docs/next/getting-started/tutorials-and-examples/name-tags"}},c={},l=[];function d(e){const t={code:"code",img:"img",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"How to create a Monster Truck using the Vehicle system."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:n(11560).Z+"",width:"1673",height:"790"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-lua",metastring:'title="Server/Index.lua"',children:'-- Spawns a Pickup\nlocal vehicle = Vehicle(Vector(0, 0, 100), Rotator(), "nanos-world::SK_Pickup", 0, true, false, true, "nanos-world::A_Vehicle_Engine_10")\n\n-- Configures it\nvehicle:SetEngineSetup(4500)\nvehicle:SetSteeringWheelSetup(Vector(0, 27, 120), 24)\nvehicle:SetHeadlightsSetup(Vector(250, 0, 70))\n\n-- Adds 4 Static Mesh wheels attached to each mesh\'s Wheel Bone (those won\'t have collision and are visual only)\nvehicle:AddStaticMeshAttached("wheel_rear_left",   "nanos-world::SM_Tire_01", "Wheel_Rear_Left",   Vector(0, -35, 0), Rotator(0, -90, 0))\nvehicle:AddStaticMeshAttached("wheel_rear_right",  "nanos-world::SM_Tire_01", "Wheel_Rear_Right",  Vector(0,  45, 0), Rotator(0, -90, 0))\nvehicle:AddStaticMeshAttached("wheel_front_left",  "nanos-world::SM_Tire_01", "Wheel_Front_Left",  Vector(0, -35, 0), Rotator(0,  90, 0))\nvehicle:AddStaticMeshAttached("wheel_front_right", "nanos-world::SM_Tire_01", "Wheel_Front_Right", Vector(0,  45, 0), Rotator(0,  90, 0))\n\n-- Configures each "Physical" Wheel, note that as our Wheel Static Mesh has height of 160 and width 60, we configure the wheels to have radius\n-- of 80 and width 60, also because of SK_Pickup bones are not perfectly aligned, left wheels must be laterally offset a bit\nvehicle:SetWheel(0, "Wheel_Front_Left",  80, 60, 30, 20, 0.25, 2, 17, 1000, 0, 100, 10, 7, 1, 1500, 3000, true, Vector(0, -80, 0))\nvehicle:SetWheel(1, "Wheel_Front_Right", 80, 60, 30, 20, 0.25, 2, 17, 1000, 0, 100, 10, 7, 1, 1500, 3000, true, Vector(0,  90, 0))\nvehicle:SetWheel(2, "Wheel_Rear_Left",   80, 60, 30, 20, 0.25, 2, 17, 1000, 0, 100, 10, 7, 1, 1500, 3000, true, Vector(0, -80, 0))\nvehicle:SetWheel(3, "Wheel_Rear_Right",  80, 60, 30, 20, 0.25, 2, 17, 1000, 0, 100, 10, 7, 1, 1500, 3000, true, Vector(0,  90, 0))\n\n-- Adds only a Passenger and Driver door/seat\nvehicle:SetDoor(0, Vector(50, -75, 105), Vector( 8, -32.5,  95), Rotator(0, 0, 10), 70, -150)\nvehicle:SetDoor(1, Vector(50,  75, 105), Vector(25,    50,  90), Rotator(0, 0,  0), 70,  150)\n\n-- As we set AutoCreatePhysics = false on the constructor, we need to call this after configuring it (so if there is any player connected, he\n-- doesn\'t need to recreate the physics for each function called - improving the performance)\nvehicle:RecreatePhysics()\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},11560:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/monster-truck-9f27ed731e4e590c3952b95994873271.webp"},11151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>a});var r=n(67294);const s={},o=r.createContext(s);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);