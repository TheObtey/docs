"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[2060],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,y=u["".concat(c,".").concat(m)]||u[m]||d[m]||s;return r?n.createElement(y,i(i({ref:t},l),{},{components:r})):n.createElement(y,i({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<s;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3418:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var n=r(83117),a=r(80102),s=(r(67294),r(3905)),i=r(85598),o=["components"],c={title:"\ud83d\udcbb Server",description:"Server represents all Server controls in the Server side.",tags:["static-class"]},p=void 0,l={unversionedId:"scripting-reference/static-classes/server",id:"version-latest/scripting-reference/static-classes/server",title:"\ud83d\udcbb Server",description:"Server represents all Server controls in the Server side.",source:"@site/i18n/de/docusaurus-plugin-content-docs/version-latest/scripting-reference/static-classes/server.mdx",sourceDirName:"scripting-reference/static-classes",slug:"/scripting-reference/static-classes/server",permalink:"/de/docs/scripting-reference/static-classes/server",draft:!1,editUrl:"https://github.com/nanos-world/docs/edit/master/versioned_docs/version-latest/scripting-reference/static-classes/server.mdx",tags:[{label:"static-class",permalink:"/de/docs/tags/static-class"}],version:"latest",frontMatter:{title:"\ud83d\udcbb Server",description:"Server represents all Server controls in the Server side.",tags:["static-class"]},sidebar:"version-latest/main",previous:{title:"\ud83d\udce6 Package",permalink:"/de/docs/scripting-reference/static-classes/package"},next:{title:"\u23f1\ufe0f Timer",permalink:"/de/docs/scripting-reference/static-classes/timer"}},d={},u=[{value:"\ud83c\udf92 Examples",id:"-examples",level:2},{value:"\ud83d\uddff Static Functions",id:"-static-functions",level:2},{value:"\ud83d\ude80 Events",id:"-events",level:2}],m=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,s.kt)("div",t)}},y=m("HeaderDeclaration"),v=m("StaticFunctionsDeclaration"),h=m("EventsDeclaration"),f={toc:u};function g(e){var t=e.components,r=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(y,{class_data:i,is_static:!0,image:"/img/docs/server.webp",mdxType:"HeaderDeclaration"}),(0,s.kt)("h2",{id:"-examples"},"\ud83c\udf92 Examples"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Server/Index.lua"',title:'"Server/Index.lua"'},'-- prints "Server started" when the server is starting\nServer.Subscribe("Start", function()\n    Package.Log("Server started")\nend)\n\n-- prints "Server stopped" when the server stops / shutdown\nServer.Subscribe("Stop", function()\n    Package.Log("Server stopped")\nend)\n\n-- prints the delta time about every 33 ms\nServer.Subscribe("Tick", function(delta_time)\n    Package.Log("Tick: " .. delta_time)\nend)\n\n-- sends a chat message to everyone\nServer.BroadcastChatMessage("Welcome to the server!")\n')),(0,s.kt)("h2",{id:"-static-functions"},"\ud83d\uddff Static Functions"),(0,s.kt)(v,{class_data:i,mdxType:"StaticFunctionsDeclaration"}),(0,s.kt)("h2",{id:"-events"},"\ud83d\ude80 Events"),(0,s.kt)(h,{class_data:i,mdxType:"EventsDeclaration"}))}g.isMDXComponent=!0},85598:function(e){e.exports=JSON.parse('{"name":"Server","description":"Server represents all Server controls in the Server side.","authority":"server","static_functions":[{"name":"BroadcastChatMessage","description":"Sends a chat message to everyone","authority":"server","parameters":[{"type":"string","name":"message","description":"The message to send to everyone"}]},{"name":"ChangeMap","description":"Restarts the server in a new Map, restarts all packages and reconnects all players","authority":"server","parameters":[{"type":"string","name":"map_path","description":"The new map to load"}]},{"name":"ReloadPackage","description":"Reloads a Package","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package to reload"}]},{"name":"SendChatMessage","description":"Sends a chat message to Player only","authority":"server","parameters":[{"type":"Player","name":"player","description":"The player who receive the message"},{"type":"string","name":"message","description":"The message"}]},{"name":"SetDescription","description":"Sets the description of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"description","description":"The new description"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default_value":"false"}]},{"name":"SetLogo","description":"Sets the logo of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"logo_url","description":"The new logo"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default_value":"false"}]},{"name":"SetMaxPlayers","description":"Sets the maximum player slots of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"number","name":"max_players","description":"The maximum players"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default_value":"false"}]},{"name":"SetName","description":"Sets the name of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"name","description":"The new name"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default_value":"false"}]},{"name":"SetPassword","description":"Sets the password of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"password","description":"The new password"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default_value":"false"}]},{"name":"SetValue","description":"Sets a global value in the Server, which can be accessed from anywhere (server side)","authority":"server","parameters":[{"type":"string","name":"key","description":"Key"},{"type":"any","name":"value","description":"Value"}]},{"name":"GetValue","description":"Gets a value given a key","authority":"server","parameters":[{"type":"string","name":"key","description":"Key"},{"type":"any","name":"fallback","description":"Fallback Value if key doesn\'t exist"}]},{"name":"Stop","description":"Stops the server","authority":"server"},{"name":"Subscribe","description":"Subscribes for an Event","authority":"server","return":[{"type":"function","description":"the function callback itself"}],"parameters":[{"type":"string","name":"event_name","description":"The name of the Event"},{"type":"function","name":"function","description":"Callback function"}]},{"name":"UnloadPackage","description":"Unloads a Package","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package you want unload"}]},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The name of the Events"},{"type":"function","name":"function","description":"Callback function","default_value":"nil"}]},{"name":"GetMap","description":"Returns the current Map","authority":"server","return":[{"type":"string","description":"the current map"}]},{"name":"GetMapConfig","description":"Returns a list of the Custom Config of the current map (stored in the MAP_NAME.toml)","authority":"server","return":[{"type":"table","description":"a list of the Custom Config of the current map"}]},{"name":"GetMaps","description":"Returns a list of all Maps installed on the server","authority":"server","return":[{"type":"string[]","description":"a list of all Maps installed on the server"}]},{"name":"GetPackages","description":"Returns a list of Packages folder names available in the server, optionally returns only loaded and running packages","authority":"server","return":[{"type":"string[]","description":"a list of Packages folder names available in the server"}],"parameters":[{"type":"boolean","name":"only_loaded","description":"Set to true the function return only loaded and running packages","default_value":"true"}]},{"name":"GetVersion","description":"Returns the server version","authority":"server","return":[{"type":"string","description":"the server version"}]},{"name":"GetIP","description":"Returns the server Public IP","authority":"server","return":[{"type":"string","description":"the server Public IP"}]},{"name":"GetPort","description":"Returns the server Port","authority":"server","return":[{"type":"number","description":"the server Port"}]},{"name":"GetQueryPort","description":"Returns the server QueryPort","authority":"server","return":[{"type":"number","description":"the server QueryPort"}]},{"name":"GetMaxPlayers","description":"Returns the Max Players configured","authority":"server","return":[{"type":"number","description":"the max players configured"}]},{"name":"GetDescription","description":"Returns the Server Description","authority":"server","return":[{"type":"string","description":"the Server Description"}]},{"name":"GetTickRate","description":"Returns the Configured Tick Rate","authority":"server","return":[{"type":"number","description":"the server Tick Rate"}]},{"name":"IsAnnounced","description":"Returns if the Server is announced in the Master List","authority":"server","return":[{"type":"boolean","description":"if the Server is announced in the Master List"}]}],"events":[{"name":"Chat","description":"Called when a player types something in the chat","authority":"server","return":[{"type":"boolean","description":"Return false to do not send the message"}],"parameters":[{"type":"string","name":"text","description":"The message send by the player"},{"type":"Player","name":"player","description":"The player who send the message"}]},{"name":"Console","description":"Called when a console command is submitted","authority":"server","parameters":[{"type":"string","name":"text","description":"The console command"}]},{"name":"LogEntry","description":"Called when a Server log is received","authority":"server","parameters":[{"type":"string","name":"text","description":"The log"},{"type":"LogType","name":"type","description":"The log type"}]},{"name":"Start","description":"Server has been started","authority":"server"},{"name":"PlayerConnect","description":"Called when a player is attempting to connect to the server","authority":"server","parameters":[{"type":"string","name":"IP","description":"IP of the player"},{"type":"string","name":"player_account_ID","description":"Account ID of the player"},{"type":"string","name":"player_name","description":"Player name"},{"type":"string","name":"player_steam_ID","description":"SteamID of the player"}],"return":[{"type":"boolean","description":"Return false to do not allow the player to connect"}]},{"name":"Stop","description":"Server has been stopped","authority":"server"},{"name":"Tick","description":"Triggered every 33ms by default","description_long":"Triggered every 33ms by default<br/><br/>Caution: Only small operations should be performed here, otherwise this can lead to server lag and delays","authority":"server","parameters":[{"type":"number","name":"delta_time","description":""}]}]}')}}]);