"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[6200],{79322:(e,t,a)=>{a.d(t,{ad:()=>At,Z:()=>Wt,oh:()=>It,c3:()=>lt,p2:()=>ot,R6:()=>st,qz:()=>Tt,x3:()=>Lt,Nc:()=>Nt});a(87462);var n=a(67294),r=a(3905),i=a(1841),o=a.n(i),s=a(23612),l=a(73727),c=a(80143),p=a(87083),d=(a(72963),a(18846),a(87469)),h=a(6045),m=a(8082),u=a(51375),y=a(25767),f=a(85274),g=a(68088),b=a(22551),v=a(2627),_=a(89252),S=a(60080);const w=JSON.parse('{"name":"CharacterSimple","description":"CharacterSimple is a simpler Character implementation with basic Movement implementation. Aimed for custom NPCs or basic Pawns.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath|StaticMeshPath","name":"mesh"},{"type":"BlueprintPath","name":"custom_animation_blueprint","default":""},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"},{"type":"boolean","name":"gravity_enabled","default":"true"}]}],"functions":[{"authority":"authority","name":"PlayAnimation","description":"Plays an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"AnimationSlotType","name":"slot_type","default":"AnimationSlotType.FullBody"},{"type":"boolean","name":"loop_indefinitely","default":"false"},{"type":"float","name":"blend_in_time","default":"0.25"},{"type":"float","name":"blend_out_time","default":"0.25"},{"type":"float","name":"play_rate","default":"1.0"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group"}]},{"authority":"authority","name":"StopAnimation","description":"Stops an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_asset"}]},{"authority":"both","name":"AddSkeletalMeshAttached","description":"Spawns and Attaches a SkeletalMesh into this Character","description_long":"Spawns and Attaches a SkeletalMesh into this Character, the SkeletalMesh must have the same Skeletal used by the Character Mesh, and will follow all animations from it. Uses a custom ID to be used for removing it further.<br/><br/>For customizing the Materials specific of a SkeletalMeshAttached, please use the following syntax in the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset","default":""}]},{"authority":"both","name":"AddStaticMeshAttached","description":"Spawns and Attaches a StaticMesh into this Character","description_long":"Spawns and Attaches a StaticMesh into this Character in a Socket with relative Location and Rotation. Uses a custom ID to be used for removing it further<br/><br/>For customizing the Materials specific of a StaticMeshAttached, please use the following syntax as the <code>parameter_name</code> in the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":""},{"type":"string","name":"socket","default":""},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)"}]},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if existing, a SkeletalMesh from this Character given it\'s custom ID","parameters":[{"type":"string","name":"id"}]},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if existing, a StaticMesh from this Character given it\'s custom ID","parameters":[{"type":"string","name":"id"}]},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"RemoveAllSkeletalMeshesAttached","description":"Removes all SkeletalMeshes attached"},{"authority":"authority","name":"SetMesh","description":"Changes the Character Mesh on the fly","parameters":[{"type":"SkeletalMeshPath|StaticMeshPath","name":"mesh_asset"},{"type":"boolean","name":"adjust_capsule_size","description":"Auto adjust the capsule size based on the Mesh size"}]},{"authority":"both","name":"GetMesh","description":"Gets the Skeletal Mesh Asset","return":[{"type":"SkeletalMeshPath|StaticMeshPath"}]},{"authority":"both","name":"GetMovingTo","description":"Gets the Moving To location","return":[{"type":"Vector","description":"the moving to location or Vector(0, 0, 0) if not moving"}]},{"authority":"server","name":"MoveTo","description":"AI: Makes this Character to walk to the Location","description_long":"AI: Makes this Character to walk to the Location<br/><br/>Triggers event <a href=\'character#movecompleted\'>MoveCompleted</a>","parameters":[{"type":"Vector","name":"location"},{"type":"float","name":"acceptance_radius","default":"50"}]},{"authority":"server","name":"Follow","description":"AI: Makes this Character to follow another actor","description_long":"AI: Makes this Character to follow another actor<br/><br/>Triggers event <a href=\'character#movecompleted\'>MoveCompleted</a>","parameters":[{"type":"Actor","name":"actor","description":"Actor to follow"},{"type":"float","name":"acceptance_radius","default":"50","description":"Radius to consider success"},{"type":"boolean","name":"stop_on_succeed","default":"false","description":"Whether to stop when reaching the target"},{"type":"boolean","name":"stop_on_fail","default":"false","description":"Whether to stop when failed to reach the target"},{"type":"float","name":"update_rate","default":"0.25","description":"How often to recalculate the AI path"}]},{"authority":"server","name":"StopMovement","description":"AI: Stops the movement","description_long":"AI: Stops the movement<br/><br/>Triggers event [MoveCompleted](character#movecompleted)"},{"authority":"both","name":"GetPlayer","description":"Gets the possessing Player","return":[{"type":"Player?"}]},{"authority":"both","name":"GetControlRotation","description":"Gets the Control Rotation","return":[{"type":"Rotator"}]},{"authority":"both","name":"HideBone","description":"Hides a bone of this Character","description_long":"Hides a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","default":"","description":"Bone to hide"}]},{"authority":"both","name":"UnHideBone","description":"UnHide a bone of this Character","description_long":"UnHide a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","description":"Bone to unhide"}]},{"authority":"both","name":"IsBoneHidden","return":[{"type":"boolean","description":"if the bone is hidden"}],"description":"Gets if a bone is hidden","parameters":[{"type":"string","name":"bone_name","description":"Bone to check"}]},{"authority":"server","name":"Jump","description":"Triggers this Character to jump"},{"authority":"server","name":"SetJumpZVelocity","description":"Sets the velocity of the jump","parameters":[{"type":"integer","name":"velocity","description":"Default is 450"}]},{"authority":"server","name":"SetMaxAcceleration","description":"Sets the max acceleration","parameters":[{"type":"integer","name":"acceleration","description":"Default is 2048"}]},{"authority":"authority","name":"SetCapsuleSize","description":"Sets this Character\'s Capsule size","description_long":"Sets this Character\'s Capsule size (will affect Camera location and Character\'s collision)","parameters":[{"type":"integer","name":"radius","description":"Default is 42"},{"type":"integer","name":"half_height","description":"Default is 96"}]},{"authority":"server","name":"SetCanJump","description":"Sets if this Character is allowed to Jump","parameters":[{"type":"boolean","name":"can_jump"}]},{"authority":"server","name":"SetCanCrouch","description":"Sets if this Character is allowed to Crouch and to Prone","parameters":[{"type":"boolean","name":"can_crouch"}]},{"authority":"server","name":"SetBrakingSettings","description":"Sets the Movement Braking Settings of this Character","parameters":[{"type":"float","name":"ground_friction","default":"2"},{"type":"float","name":"braking_friction_factor","default":"2"},{"type":"integer","name":"braking_walking","default":"96"},{"type":"integer","name":"braking_flying","default":"3000"},{"type":"integer","name":"braking_swimming","default":"10"},{"type":"integer","name":"braking_falling","default":"0"}]},{"authority":"server","name":"SetSpringArmSettings","description":"Sets the Spring Arm Settings of this Character","parameters":[{"type":"Vector","name":"relative_location"},{"type":"float","name":"target_arm_length"},{"type":"Vector","name":"socket_offset"},{"type":"boolean","name":"enable_camera_lag"},{"type":"float","name":"camera_lag_speed"}]},{"authority":"server","name":"SetRotationSettings","description":"Sets the Rotation Settings of this Character","parameters":[{"type":"Rotator","name":"rotation_rate"},{"type":"boolean","name":"use_controller_desired_rotation"},{"type":"boolean","name":"orient_rotation_to_movement"}]},{"authority":"server","name":"SetSpeedSettings","description":"Sets the Speed Settings of this Character","parameters":[{"type":"integer","name":"max_walk_speed"},{"type":"integer","name":"max_walk_speed_crouched"}]},{"authority":"server","name":"SetPawnSettings","description":"Sets the Pawn Settings of this Character","parameters":[{"type":"boolean","name":"use_controller_rotation_pitch"},{"type":"boolean","name":"use_controller_rotation_yaw"},{"type":"boolean","name":"use_controller_rotation_roll"}]},{"authority":"server","name":"SetAnimationBlueprint","description":"Sets the Animation Blueprint of this Character","parameters":[{"type":"BlueprintPath","name":"custom_animation_blueprint"}]}],"events":[{"authority":"both","name":"Possess","description":"When Character is possessed","arguments":[{"type":"CharacterSimple","name":"self"},{"type":"Player","name":"possesser"}]},{"authority":"both","name":"UnPossess","description":"When Character is unpossessed","arguments":[{"type":"CharacterSimple","name":"self"},{"type":"Player","name":"old_possesser"}]}]}');var k=a(17516),C=a(16736),T=a(3898),A=a(81514),P=a(7832),M=a(95645),R=a(76662),D=a(38143),V=a(83887),G=a(39526),x=a(75938),E=a(19093),I=a(18259),N=a(12553),W=a(38019),L=a(98763),B=a(10747),F=a(8718),U=a(65930),O=a(9685),H=a(8461),z=a(45001),q=a(58752);const J=JSON.parse('{"name":"Assets","description":"Retrieve Assets Data from Asset Packs.","authority":"both","static_functions":[{"return":[{"type":"table[]","table_properties":[{"name":"Name","type":"string"},{"name":"Path","type":"string"},{"name":"Author","type":"string"},{"name":"Version","type":"string"}]}],"name":"GetAssetPacks","description":"Gets a list containing information about all loaded Asset Packs","authority":"both"},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetAnimations","description":"Gets a list containing all Animation Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetBlueprints","description":"Gets a list containing all Blueprints Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetMaps","description":"Gets a list containing all Map Asset Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetMaterials","description":"Gets a list containing all Materials Asset Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetParticles","description":"Gets a list containing all Particle Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetSounds","description":"Gets a list containing all Sound Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetSkeletalMeshes","description":"Gets a list containing all Skeletal Mesh Asset Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetStaticMeshes","description":"Gets a list containing all Static Mesh Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetOthers","description":"Gets a list containing all Other Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"Precache","description":"Manually adds an Asset to be loaded during the Player\'s loading screen","authority":"server","parameters":[{"type":"string","name":"asset_path","description":"The Asset Key"},{"type":"AssetType","name":"asset_type","description":"The Asset Type"}]}]}'),j=JSON.parse('{"name":"Chat","description":"Configure, send and intercept chat messages.","authority":"both","static_functions":[{"name":"AddMessage","description":"Adds a chat message which will display local only","authority":"client","parameters":[{"type":"string","name":"message","description":""}]},{"name":"SendMessage","description":"Sends a chat message to a Player only","authority":"server","parameters":[{"type":"Player","name":"player","description":"The player to receive the message"},{"type":"string","name":"message","description":"The message"}]},{"name":"SetConfiguration","description":"Configures the Chat visuals and position","authority":"client","parameters":[{"type":"Vector2D","name":"screen_location","description":"","default":"Vector(-25, 0)"},{"type":"Vector2D","name":"size","description":"","default":"Vector(600, 250)"},{"type":"Vector2D","name":"anchors_min","description":"","default":"Vector(1, 0.5)"},{"type":"Vector2D","name":"anchors_max","description":"","default":"Vector(1, 0.5)"},{"type":"Vector2D","name":"alignment","description":"","default":"Vector(1, 0.5)"},{"type":"boolean","name":"justify","description":"","default":"true"},{"type":"boolean","name":"show_scrollbar","description":"","default":"true"}]},{"name":"SetVisibility","description":"Sets if the Chat is visible or not","authority":"client","parameters":[{"type":"boolean","name":"is_visible","description":""}]},{"name":"Clear","description":"Clears all messages","authority":"client"},{"name":"BroadcastMessage","description":"Sends a chat message to all Players","authority":"server","parameters":[{"type":"string","name":"message","description":"The message to send to all Players"}]}],"events":[{"name":"PlayerSubmit","description":"Called when a player submits a message in the chat","authority":"both","return":[{"type":"boolean","description":"Return false to prevent the message from being sent"}],"arguments":[{"type":"string","name":"message","description":"The message sent by the player"},{"type":"Player","name":"player","description":"The player who sent the message - on client it will always be the localplayer"}]},{"name":"ChatEntry","description":"Called when a new Chat Message is received, this is also triggered when new messages are sent programatically","description_long":"Called when a new Chat Message is received, this is also triggered when new messages are sent programatically<br/><br/>This is useful for creating your own Chat interface while still use the built-in system","authority":"client","arguments":[{"type":"string","name":"message","description":"The message"},{"type":"Player?","name":"player","description":"The player who sent the message or <code>nil</code> if this was called on client side or was sent through code"}]},{"name":"Open","description":"When player opens the Chat","authority":"client"},{"name":"Close","description":"When player closes the Chat","authority":"client"}]}'),Y=JSON.parse('{"name":"Client","description":"Static Class present on Client side.","authority":"client","static_functions":[{"name":"CopyToClipboard","description":"Copies a text to Clipboard","authority":"client","parameters":[{"type":"string","name":"text"}]},{"name":"SetNearClipPlane","description":"Sets the Near Clip Plane","authority":"client","parameters":[{"type":"float","name":"near_clip_plane","description":""}]},{"name":"GetNearClipPlane","description":"Gets the Near Clip Plane value","authority":"client","return":[{"type":"float"}]},{"name":"SetDebugEnabled","description":"Enables/Disables Debug settings and Client Console to be used","authority":"client","parameters":[{"type":"boolean","name":"enable_debug","description":""}]},{"name":"SetHighlightColor","description":"Changes the Highlight Color for highlighted actors at a specific Index","description_long":"Changes the Highlight Color for highlighted actors at a specific Index. Multiply it by 5 (or more) for having a glowing effect.<br/><br/><code>HighlightMode.Always</code> will always be visible, even behind walls<br/><code>HighlightMode.OnlyHidden</code> will only be visible if behind a wall<br/><code>HighlightMode.OnlyVisible</code> will only be visible if not behind a wall<br/><br/>Note: You can only have 3 differents indexes (0, 1 or 2).","authority":"client","parameters":[{"type":"Color","name":"highlight_color","description":""},{"type":"integer","name":"index","description":""},{"type":"HighlightMode","name":"mode","description":"","default":"HighlightMode.Always"}]},{"name":"SetOutlineColor","description":"Changes the Outline Color for outlined actors at a specific Index","description_long":"Changes the Outline Color for outlined actors at a specific Index. Multiply it by 5 (or more) for having a glowing effect.<br/><br/>Note: You can only have 3 differents indexes (0, 1 or 2), and the default Outline color index used by the game is  <code>0</code> (when interacting with stuff).","authority":"client","parameters":[{"type":"Color","name":"outline_color","description":""},{"type":"integer","name":"index","description":"","default":"0"},{"type":"float","name":"thickness","description":"","default":"2"}]},{"name":"SetValue","description":"Sets a global value in the Client, which can be accessed from anywhere (client side)","description_long":"Sets a global value in the Client, which can be accessed from anywhere (client side)<br/><br/>Please refer to <a href=\\"https://docs.nanos.world/docs/next/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"client","parameters":[{"type":"string","name":"key","description":""},{"type":"any","name":"value","description":""}]},{"name":"Subscribe","description":"Subscribes for an Event","authority":"client","return":[{"type":"function","description":"the function callback itself"}],"parameters":[{"type":"string","name":"event_name","description":""},{"type":"function","name":"callback","description":""}]},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"client","parameters":[{"type":"string","name":"event_name","description":""},{"type":"function","name":"callback","description":"","default":"nil"}]},{"name":"GetLocalPlayer","description":"Gets the local Player","authority":"client","return":[{"type":"Player","description":"The local Player"}]},{"name":"GetFrameTime","description":"Gets the current Frame Time","authority":"client","return":[{"type":"float","description":"The Frame Time"}]},{"name":"GetTime","description":"Gets the Unix Epoch Time in milliseconds","authority":"client","return":[{"type":"integer","description":"the unix timestamp"}]},{"name":"GetMap","description":"Returns the current Map","authority":"client","return":[{"type":"string","description":"The current Map"}]},{"name":"GetPackages","description":"Returns a list of Packages folder names loaded and running in the client","authority":"client","return":[{"type":"string[]","description":"packages folder names"}]},{"name":"GetValue","description":"Gets a value given a key","authority":"client","return":[{"type":"any?","description":"the value"}],"parameters":[{"type":"string","name":"key","description":""},{"type":"any","name":"fallback","description":""}]}],"events":[{"name":"Tick","description":"Called Every Frame. Do not abuse","authority":"client","arguments":[{"type":"float","name":"delta_time","description":""}]},{"name":"SpawnLocalPlayer","description":"Called when the local player spawns (just after the game has loaded)","authority":"client","arguments":[{"type":"Player","name":"local_player","description":""}]},{"name":"WindowFocusChange","description":"Called when the game is focused/unfocused","authority":"client","arguments":[{"type":"boolean","name":"is_focused","description":"If it\'s focused"}]}]}'),K=JSON.parse('{"name":"Console","description":"Log messages on console.","authority":"both","static_functions":[{"name":"Log","description":"Logs and formats a message in the console, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}]},{"name":"Warn","description":"Logs an orange warning in the console, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}]},{"name":"Error","description":"Logs a red error in the console, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}]},{"name":"RegisterCommand","description":"Registers a new Console Command","authority":"both","parameters":[{"type":"string","name":"command","description":"The command"},{"type":"function","name":"callback","description":"The callback to be called when the command is inputted"},{"type":"string","name":"description","description":"The command description to display in the console"},{"type":"string[]","name":"parameters","description":"The list of supported parameters to display in the console"}]}],"events":[{"name":"PlayerSubmit","description":"Called when a console command is submitted","authority":"both","arguments":[{"type":"string","name":"text","description":""}]},{"name":"LogEntry","description":"Called when a log is received","authority":"both","arguments":[{"type":"string","name":"text","description":""},{"type":"LogType","name":"type","description":""}]},{"name":"Open","description":"When player opens the Console","authority":"client"},{"name":"Close","description":"When player closes the Console","authority":"client"}]}'),Z=JSON.parse('{"name":"Debug","description":"Draws Debug shapes in the world.","authority":"client","static_functions":[{"name":"DrawBox","description":"Draws a Debug box in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Vector","name":"extent","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"Color","name":"color","description":""},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawCoordinateSystem","description":"Draws a Debug coordinate system in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"float","name":"size","description":"","default_value":"100"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawCrosshairs","description":"Draws a Debug crosshair in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"float","name":"size","description":"","default":"100"},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawCylinder","description":"Draws a Debug cylinder in the world","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""},{"type":"float","name":"radius","description":""},{"type":"integer","name":"segments","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawDirectionalArrow","description":"Draws a Debug directional arrow in the world","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""},{"type":"float","name":"arrow_size","description":"","default":"100"},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawLine","description":"Draws a Debug Line in the World","authority":"client","parameters":[{"type":"Vector","name":"start_position","description":""},{"type":"Vector","name":"end_position","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawPoint","description":"Draws a Debug Point in the World","authority":"client","parameters":[{"type":"Vector","name":"start_position","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"size","description":"","default_value":"10"}]},{"name":"DrawSphere","description":"Draws a Debug sphere in the World","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"float","name":"radius","description":""},{"type":"integer","name":"segments","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawString","description":"Draws a Debug string in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"string","name":"text","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"boolean","name":"draw_shadow","description":"","default_value":"false"},{"type":"float","name":"font_scale","description":"","default_value":"1"}]}]}'),X=JSON.parse('{"name":"Discord","description":"Initialize and set Discord activity.","authority":"client","static_functions":[{"name":"Initialize","description":"Initializes the Discord Integration with your custom client_id","authority":"client","parameters":[{"type":"integer","name":"client_id","description":""}]},{"name":"SetActivity","description":"Communicates with Discord and sets a custom user status","authority":"client","parameters":[{"type":"string","name":"state","description":""},{"type":"string","name":"details","description":""},{"type":"string","name":"large_image","description":""},{"type":"string","name":"large_text","description":""},{"type":"string","name":"reset_time","description":"Whether or not to reset current activity elapsed time","default":"false"}]}]}'),Q=JSON.parse('{"name":"Events","description":"Subscribe for user-defined Events.","authority":"both","static_functions":[{"authority":"both","name":"Call","description":"Calls an Event which will be triggered in all Local Packages","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"client","name":"CallRemote","description":"Calls an Event if on Client which will be triggered in all Server Packages","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"server","name":"CallRemote","description":"Calls an Event if on Server which will be triggered in all Client\'s Packages of a specific Player","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"Player","name":"player","description":"The remote player to send this event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"server","name":"BroadcastRemote","description":"Calls an Event on Server which will be triggered in all Client\'s Packages of all Players","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"server","name":"BroadcastRemoteDimension","description":"Calls an Event on Server which will be triggered in all Client\'s Packages of all Players in that dimension","parameters":[{"type":"integer","name":"dimension","description":"The Dimension to send this event"},{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"both","return":[{"type":"function","description":"the subscribed callback itself"}],"name":"Subscribe","description":"Subscribes for an user-created event which will be triggered for only local called events","parameters":[{"type":"string","name":"event_name","description":"The Event Name to subscribe"},{"type":"function","name":"callback","description":"The callback function to execute"}]},{"authority":"both","return":[{"type":"function","description":"the subscribed callback itself"}],"name":"SubscribeRemote","description":"Subscribes for an user-created event which will be triggered for only remote called events","parameters":[{"type":"string","name":"event_name","description":"The Event Name to subscribe"},{"type":"function","name":"callback","description":"The callback function to execute"}]},{"authority":"both","name":"Unsubscribe","description":"Unsubscribes from all subscribed events in this Package with that event name, optionally passing the function to unsubscribe only that callback","parameters":[{"type":"string","name":"event_name","description":"The Event Name to unsubscribe"},{"type":"function","name":"callback","default":"nil","description":"The callback function to unsubscribe"}]}]}'),$=JSON.parse('{"name":"HTTP","description":"HTTP Requests Interface.","authority":"server","static_functions":[{"name":"RequestAsync","description":"Makes an asynchronous HTTP Request","description_long":"Makes an asynchronous HTTP Request.<br/><br/>The request will be made asynchronously and returned safetly in the same thread in the callback provided when it\'s done.<br/><br/><b>Note:</b> If a request is still running when unloading packages, the server will freeze until it\'s finished, then the package will unload.","authority":"server","parameters":[{"type":"string","name":"uri","description":"The main URI"},{"type":"string","name":"endpoint","default":"/","description":"The endpoint"},{"type":"string","name":"method","default":"GET","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\'>HTTP Method</a> to be used"},{"type":"string","name":"data","default":"","description":"Payload"},{"type":"string","name":"content_type","default":"application/json","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\'>Content Type</a> to be used"},{"type":"boolean","name":"compress","default":"false","description":"Whether or not to compress the content with gzip"},{"type":"table","name":"headers","default":"{}","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\'>Headers</a> to be used"},{"type":"function","name":"callback","default":"nil","description":"The result will be called in the format `function(status, data)`"}]},{"name":"Request","return":[{"type":"table","table_properties":[{"name":"Status","type":"integer"},{"name":"Data","type":"string"}]}],"description":"Makes a synchronous HTTP Request.<br/><br/>The request will be made synchronously and will freeze the server until it\'s done.","authority":"server","parameters":[{"type":"string","name":"uri","description":"The main URI"},{"type":"string","name":"endpoint","default":"/","description":"The endpoint"},{"type":"string","name":"method","default":"GET","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\'>HTTP Method</a> to be used"},{"type":"string","name":"data","default":"","description":"Payload"},{"type":"string","name":"content_type","default":"application/json","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\'>Content Type</a> to be used"},{"type":"boolean","name":"compress","default":"false","description":"Whether or not to compress the content with gzip"},{"type":"table","name":"headers","default":"{}","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\'>Headers</a> to be used"}]}]}'),ee=JSON.parse('{"name":"Input","description":"Create custom keybindings and retrieve input information.","authority":"client","static_functions":[{"authority":"client","name":"Bind","description":"Binds a function to an Input defined using <code>Register</code> or from the game","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"InputEvent","name":"input_event","description":"Which event to register (Released/Pressed)"},{"type":"function","name":"callback","description":"The function to trigger"}]},{"authority":"client","name":"Unbind","description":"Unbinds an Input function","description_long":"Unbinds all Input functions related to the given binding_name and input_event","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"InputEvent","name":"input_event","description":"Which event to register (Released/Pressed)"}]},{"authority":"client","name":"Register","description":"Registers a keybinding to a default key","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"string","name":"key_name"}]},{"authority":"client","name":"Unregister","description":"Unregisters a keybinding","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"string","name":"key_name"}]},{"authority":"client","name":"GetKeyIcon","description":"Gets the icon path of a key","parameters":[{"type":"string","name":"key_name"},{"type":"boolean","name":"dark_mode","default":"false"}],"return":[{"type":"string"}]},{"authority":"client","name":"GetKeyCode","description":"Gets the key code of a key","parameters":[{"type":"string","name":"key_name"}],"return":[{"type":"integer"}]},{"authority":"client","name":"GetModifierKeys","description":"Gets the currently pressed modifier keys","description_long":"Gets the currently pressed modifier keys.<br/>Use bit-wise operators like <code>modifier & KeyModifier.LeftShiftDown</code> to know if the left shift is pressed.","return":[{"type":"KeyModifier"}]},{"authority":"client","name":"GetMappedKeys","description":"Returns the keys bound to a keybinding","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"}],"return":[{"type":"string[]","description":"list of all keys"}]},{"authority":"client","name":"ResetBindings","description":"Resets all bound functions by this Package"},{"authority":"client","name":"GetScriptingKeyBindings","description":"Returns a table with all Scripting KeyBindings","return":[{"type":"table","description":"in the format <code>{ \\"[BINDING_NAME]\\" = { \\"[KEY_01]\\", \\"[KEY_02]\\", ... }, ... }</code>"}]},{"authority":"client","name":"GetGameKeyBindings","description":"Returns a table with all Game KeyBindings","return":[{"type":"table","description":"in the format <code>{ \\"[BINDING_NAME]\\" = { \\"[KEY_01]\\", \\"[KEY_02]\\", ... }, ... }</code>"}]},{"name":"SetInputEnabled","description":"Toggles Local Player input","authority":"client","parameters":[{"type":"boolean","name":"enable_input","description":""}]},{"name":"SetMouseEnabled","description":"Displays/Hides Mouse Cursor","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"InputKey","description":"Forces an Input Key event on Local Player","description_long":"Forces an Input Key event on Local Player<br/><br/>This won\'t trigger any Scripting event as it bypass internal validations","authority":"client","parameters":[{"type":"string","name":"key_name","description":"Key Name to input"},{"type":"InputEvent","name":"input_event","description":"Which Event to input"},{"type":"float","name":"amount_depressed","description":"The amount pressed","default":"1"}]},{"name":"IsKeyDown","description":"Returns if a key is being pressed","authority":"client","return":[{"type":"boolean","description":"if the key is pressed"}],"parameters":[{"type":"string","name":"key_name","description":""}]},{"name":"IsMouseEnabled","description":"","authority":"client","return":[{"type":"boolean","description":"if the mouse is visible"}]},{"name":"IsInputEnabled","description":"","authority":"client","return":[{"type":"boolean","description":"if the input is visible"}]}],"events":[{"name":"KeyDown","description":"A keyboard key is being pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"KeyPress","description":"A keyboard key has been pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"KeyUp","description":"A keyboard key has been released","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"MouseDown","description":"A mouse button has been pressed / is being pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":""},{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""}]},{"name":"MouseUp","description":"A mouse button has been released","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":""},{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""}]},{"name":"MouseEnable","description":"When mouse cursor is displayed/hidden","authority":"client","arguments":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"MouseMoveX","description":"Called when the mouse moves in the X axis","authority":"client","arguments":[{"type":"float","name":"delta","description":""},{"type":"float","name":"delta_time","description":""},{"type":"integer","name":"num_samples","description":""}]},{"name":"MouseMoveY","description":"Called when the mouse moves in the Y axis","authority":"client","arguments":[{"type":"float","name":"delta","description":""},{"type":"float","name":"delta_time","description":""},{"type":"integer","name":"num_samples","description":""}]},{"name":"MouseScroll","description":"Called when the mouse scrolls","authority":"client","arguments":[{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""},{"type":"float","name":"delta","description":""}]}]}'),te=JSON.parse('{"name":"Level","description":"Work with Unreal level in runtime.","authority":"client","static_functions":[{"authority":"client","name":"LoadStreamLevel","description":"Loads a Level in runtime","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"should_block_on_load","default":"false","description":"If this should be a blocking operation - the game will freeze"},{"type":"boolean","name":"make_visible_after_load","default":"true","description":"If this should be visible automatically after loaded"}]},{"authority":"client","name":"UnloadStreamLevel","description":"Unloads a Level in runtime","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"should_block_on_unload","default":"false","description":"If this should be a blocking operation - the game will freeze"}]},{"authority":"client","name":"SetStreamLevelVisibility","description":"Sets a Stream Level visibility","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"visibility","description":"If this level should be visible"}]},{"authority":"client","name":"GetStreamLevels","description":"Gets a list of all Stream Levels","return":[{"type":"table[]","description":"in the format <code>{ name, is_loaded, is_visible }</code>"}]},{"name":"CallLevelBlueprintEvent","description":"Calls a Level Blueprint custom event (which can be added when creating levels through Unreal Engine)","authority":"client","parameters":[{"type":"string","name":"event_name","description":""}]}],"events":[{"name":"StreamLevelLoad","authority":"client","description":"Called when a Stream Level is loaded","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelUnload","authority":"client","description":"Called when a Stream Level is unloaded","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelShow","authority":"client","description":"Called when a Stream Level is shown","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelHide","authority":"client","description":"Called when a Stream Level is hidden","arguments":[{"type":"string","name":"level_name"}]}]}'),ae=JSON.parse('{"name":"Navigation","description":"Creates a reachable path into navigable space.","authority":"client","static_functions":[{"name":"GetRandomReachablePointInRadius","description":"Finds random, reachable point in navigable space restricted to radius around origin","description_long":"Finds random, reachable point in navigable space restricted to radius around origin (only if map has a NavMesh)","authority":"client","return":[{"type":"Vector","description":"The random point"}],"parameters":[{"type":"Vector","name":"origin","description":""},{"type":"float","name":"radius","description":""}]},{"name":"GetRandomPointInNavigableRadius","description":"Finds random, point in navigable space restricted to Radius around Origin. Resulting location is not tested for reachability from the Origin","description_long":"Finds random, point in navigable space restricted to Radius around Origin. Resulting location is not tested for reachability from the Origin (only if map has a NavMesh)","authority":"client","return":[{"type":"Vector","description":"The random point"}],"parameters":[{"type":"Vector","name":"origin","description":""},{"type":"float","name":"radius","description":""}]},{"name":"FindPathToLocation","description":"Finds a Path given Start and End location","description_long":"Finds a Path given Start and End location (only if map has a NavMesh)","authority":"client","return":[{"type":"table","table_properties":[{"name":"IsValid","type":"boolean"},{"name":"IsPartial","type":"boolean"},{"name":"Length","type":"number"},{"name":"Cost","type":"number"},{"name":"PathPoints","type":"Vector[]"}]}],"parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""}]}]}'),ne=JSON.parse('{"name":"Package","description":"Class which represents the current Package","authority":"both","static_functions":[{"name":"Export","description":"Makes any variable available in the global scope","authority":"both","parameters":[{"type":"string","name":"variable_name","description":"Name of the variable to export"},{"type":"any","name":"value","description":"Value to be set in the global scope"}]},{"name":"Require","description":"Includes new .lua files","description_long":"Includes new .lua files<br/><br/>We currently support 5 searchers, which are looked in the following order:<br/><ol><li>Relative to <code>current-file-path/</code></li><li>Relative to <code>current-package/Client/</code> or <code>current-package/Server/</code> (depending on your side)</li><li>Relative to <code>current-package/Shared/</code></li><li>Relative to <code>current-package/</code></li><li>Relative to <code>Packages/</code></li></ol>","authority":"both","parameters":[{"type":"string","name":"script_file","description":"Path to the script file to require"}],"return":[{"type":"any","description":"Any return values from the included file"}]},{"name":"Subscribe","description":"Subscribes to an Event","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event to subscribe to"},{"type":"function","name":"callback","description":"Callback to run on the event occuring"}],"return":[{"type":"function","description":"The function callback"}]},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event to unsubscribe to"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to specifically unsubscribe to"}]},{"name":"SetPersistentData","description":"Sets a Persistent Value which will be saved to disk","authority":"both","parameters":[{"type":"string","name":"key","description":"Key to index data into"},{"type":"any","name":"value","description":"Value to set at the key"}]},{"name":"GetDirectories","description":"Gets a list of all directories in this package","description_long":"Gets a list of all files in this package, optionally with filters","authority":"both","parameters":[{"type":"string","name":"path_filter","default":"","description":"Path filter"}],"return":[{"type":"string[]","description":"List of directories"}]},{"name":"GetFiles","description":"Gets a list of all files in this package","description_long":"Gets a list of all files in this package, optionally with filters","authority":"both","parameters":[{"type":"string|table","name":"path_filter","default":"","description":"Path filter"},{"type":"string","name":"extension_filter","default":"","description":"Example : .lua"}],"return":[{"type":"string[]","description":"List of files"}]},{"name":"GetName","description":"Gives the package name","authority":"both","return":[{"type":"string","description":"The package name"}]},{"name":"GetPath","description":"Gives the package path","authority":"both","return":[{"type":"string","description":"The package path"}]},{"name":"GetVersion","description":"Gives the package version","authority":"both","return":[{"type":"string","description":"The package version"}]},{"name":"GetCompatibilityVersion","description":"Gives the package compatibility version","authority":"both","return":[{"type":"string","description":"The package compatibility version"}]},{"name":"GetPersistentData","description":"Gets the Persistent Value from the disk","description_large":"Gets a Persistent Value from the disk<br/>Pass no parameter to return the whole table, or a key to get a specific value","authority":"both","return":[{"type":"table","description":"Persistent values from disk"}],"parameters":[{"type":"string?","name":"key","default":"","description":"The key to get the data"}]}],"events":[{"name":"Load","authority":"both","description":"Called when this package is loaded","description_long":"Called when this package is loaded<br/><br/>This event is triggered differently depending on the situation:<br/><ul><li>When the <b>server starts</b> or you run <code>package reload all</code> the event triggers only after ALL packages are loaded.</li><li>In all other cases (<code>package load/reload</code> or <code>Package.Load/Reload</code>) the event is triggered immediately after the package is loaded/reloaded.</li></ul>"},{"name":"Unload","authority":"both","description":"Called when this package is unloaded"}]}'),re=JSON.parse('{"name":"PostProcess","authority":"client","description":"Interaction with Post Process effects.","static_functions":[{"authority":"client","name":"SetBloom","description":"Set Post Process Bloom Settings","parameters":[{"type":"float","name":"intensity","default":"0.675"},{"type":"float","name":"threshold","default":"-1"}]},{"authority":"client","name":"SetChromaticAberration","description":"Set Post Process Chromatic Abberation Settings","parameters":[{"type":"float","name":"intensity","default":"0"},{"type":"float","name":"start_offset","default":"0"}]},{"authority":"client","name":"SetImageEffects","description":"Set Post Process Image Effect Settings","parameters":[{"type":"float","name":"vignette_intensity","default":"0.6"},{"type":"float","name":"grain_jitter","default":"0"},{"type":"float","name":"grain_intensity","default":"0"}]},{"authority":"client","name":"SetExposure","description":"Set Post Process Exposure Settings","parameters":[{"type":"float","name":"exposure_compensation","default":"1"},{"type":"float","name":"min_ev100","default":"-10"},{"type":"float","name":"max_ev100","default":"20"},{"type":"float","name":"low_percent","default":"10"},{"type":"float","name":"high_percent","default":"90"}]},{"authority":"client","name":"SetFilm","description":"Set Post Process Film Settings","parameters":[{"type":"float","name":"slope","default":"0.8"},{"type":"float","name":"toe","default":"0.55"},{"type":"float","name":"shoulder","default":"0.26"},{"type":"float","name":"black_clip","default":"0"},{"type":"float","name":"white_clip","default":"0.3"}]},{"authority":"client","name":"SetGlobalSaturation","description":"Set Post Process Saturation Colors. Use Alpha for everall Saturation intensity","parameters":[{"type":"Color","name":"color"}]},{"authority":"client","name":"SetLookupTable","description":"Set Post Process Lookup Table Texture","parameters":[{"type":"ImagePath","name":"texture_path"}]},{"authority":"client","name":"SetMaterial","description":"Sets a Post Process Material","parameters":[{"type":"MaterialPath","name":"material_path","description":"The Material Asset to set as Post Process"}]},{"authority":"client","name":"RemoveMaterial","description":"Removes the current Post Process Material"},{"authority":"client","name":"SetSunAngle","description":"Sets the sun\'s angle (0-360)","parameters":[{"type":"float","name":"angle"}]}]}'),ie=JSON.parse('{"name":"Server","description":"Server represents all Server controls in the Server side.","authority":"server","static_functions":[{"name":"ChangeMap","description":"Restarts the server in a new Map, restarts all packages and reconnects all players","authority":"server","parameters":[{"type":"string","name":"map_path","description":"The new map to load"}]},{"name":"LoadPackage","description":"Loads a Package","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package to load"}],"return":[{"type":"boolean","description":"if the Package was loaded"}],"relations":{"functions":["ReloadPackage","UnloadPackage"]}},{"name":"ReloadPackage","description_long":"Reloads a Package<br/>Note: the package is effectively reloaded in the next server tick","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package to reload"}],"return":[{"type":"boolean","description":"if the Package was found"}],"relations":{"functions":["LoadPackage","UnloadPackage"]}},{"name":"UnloadPackage","description":"Unloads a Package","description_long":"Unloads a Package<br/>Note: the package is effectively unloaded in the next server tick","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package you want unload"}],"return":[{"type":"boolean","description":"if the Package was found"}],"relations":{"functions":["LoadPackage","ReloadPackage"]}},{"name":"SetDescription","description":"Sets the description of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"description","description":"The new description"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetLogo","description":"Sets the logo of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"logo_url","description":"The new logo"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetMaxPlayers","description":"Sets the maximum player slots of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"integer","name":"max_players","description":"The maximum players"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetName","description":"Sets the name of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"name","description":"The new name"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetPassword","description":"Sets the password of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"password","description":"The new password"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetValue","description":"Sets a global value in the Server, which can be accessed from anywhere (server side)","authority":"server","parameters":[{"type":"string","name":"key","description":"Key"},{"type":"any","name":"value","description":"Value"},{"name":"sync_on_client","type":"boolean","default":"false","description":"If enabled will sync this value through all clients, accessible through Client.GetValue() static class."}]},{"name":"GetValue","description":"Gets a value given a key","authority":"server","parameters":[{"type":"string","name":"key","description":"Key"},{"type":"any","name":"fallback","description":"Fallback Value if key doesn\'t exist"}]},{"name":"Unban","description":"Unbans a Player by it\'s account ID","authority":"server","parameters":[{"type":"string","name":"account_id","description":"nanos account ID"}]},{"name":"Stop","description":"Stops the server","authority":"server"},{"name":"Subscribe","description":"Subscribes for an Event","authority":"server","return":[{"type":"function","description":"the function callback itself"}],"parameters":[{"type":"string","name":"event_name","description":"The name of the Event"},{"type":"function","name":"function","description":"Callback function"}]},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The name of the Events"},{"type":"function","name":"function","description":"Callback function","default":"nil"}]},{"name":"GetMap","description":"Returns the current Map","authority":"server","return":[{"type":"string","description":"the current map"}]},{"name":"GetMapConfig","description":"Returns a list of the Custom Config of the current map (stored in the MAP_NAME.toml)","authority":"server","return":[{"type":"table","description":"a list of the Custom Config of the current map"}]},{"name":"GetMaps","description":"Returns a list of all Maps installed on the server","authority":"server","return":[{"type":"string[]","description":"a list of all Maps installed on the server"}]},{"name":"GetPackages","description":"Returns a list of Packages folder names available in the server, optionally returns only loaded and running packages","authority":"server","return":[{"type":"string[]","description":"a list of Packages folder names available in the server"}],"parameters":[{"type":"boolean","name":"only_loaded","description":"Set to true the function return only loaded and running packages","default":"true"}]},{"name":"GetVersion","description":"Returns the server version","authority":"server","return":[{"type":"string","description":"the server version"}]},{"name":"GetIP","description":"Returns the server Public IP","authority":"server","return":[{"type":"string","description":"the server Public IP"}]},{"name":"GetPort","description":"Returns the server Port","authority":"server","return":[{"type":"integer","description":"the server Port"}]},{"name":"GetQueryPort","description":"Returns the server QueryPort","authority":"server","return":[{"type":"integer","description":"the server QueryPort"}]},{"name":"GetMaxPlayers","description":"Returns the Max Players configured","authority":"server","return":[{"type":"integer","description":"the max players configured"}]},{"name":"GetDescription","description":"Returns the Server Description","authority":"server","return":[{"type":"string","description":"the Server Description"}]},{"name":"GetCustomSettings","description":"Returns the Server Custom Settings passed as parameter or New Game screen","authority":"server","return":[{"type":"table[]","description":"a list of the Custom Settings in the format (key = value)"}]},{"name":"GetTickRate","description":"Returns the Configured Tick Rate","authority":"server","return":[{"type":"integer","description":"the server Tick Rate"}]},{"name":"GetTime","description":"Gets the Unix Epoch Time in milliseconds","authority":"server","return":[{"type":"integer","description":"the unix timestamp"}]},{"name":"IsAnnounced","description":"Returns if the Server is announced in the Master List","authority":"server","return":[{"type":"boolean","description":"if the Server is announced in the Master List"}]}],"events":[{"name":"Start","description":"Server has been started","authority":"server"},{"name":"PlayerConnect","description":"Called when a player is attempting to connect to the server","authority":"server","arguments":[{"type":"string","name":"IP","description":"IP of the player"},{"type":"string","name":"player_account_ID","description":"Account ID of the player"},{"type":"string","name":"player_name","description":"Player name"},{"type":"string","name":"player_steam_ID","description":"SteamID of the player"}],"return":[{"type":"boolean","description":"Return false to do not allow the player to connect"}]},{"name":"Stop","description":"Server has been stopped","authority":"server"},{"name":"Tick","description":"Triggered every 33ms by default","description_long":"Triggered every 33ms by default<br/><br/>Caution: Only small operations should be performed here, otherwise this can lead to server lag and delays","authority":"server","arguments":[{"type":"float","name":"delta_time","description":""}]}]}'),oe=JSON.parse('{"name":"Sky","description":"Interact with built-in Sky & Weather system.","authority":"client","static_functions":[{"authority":"client","name":"Spawn","description":"Replaces all Sky/Sun actors with the Ultra Dynamic Sky Actor, to be able to use the functions from this page","description_long":"Replaces all Sky/Sun actors with the Ultra Dynamic Sky Actor, to be able to use the functions from this page. Internally this calls <code>Sky.DestroyAllSky()</code> automatically","parameters":[{"type":"boolean","name":"spawn_weather","default":"false","description":"Whether or not to spawn the Weather Actor (to be able to use Weather related methods)"}]},{"authority":"client","name":"DestroyAllSky","description":"Destroys all Directional Lights, Sky Lights, Exponential Height Fogs, Volumetric Clouds, Sky Atmosphere, Ultra Dynamic Sky Actors and all Actors with the <code>Sun</code> Actor Tag from the Level"},{"authority":"client","name":"SetCloudCoverage","description":"The amount of coverage for the cloud layer, from a clear sky to overcast","parameters":[{"type":"float","name":"cloud_coverage"}]},{"authority":"client","name":"SetFog","description":"The fogginess of the scene. The impact this has on fog density is scaled from the Fog Density category","parameters":[{"type":"float","name":"fog_percentage"}]},{"authority":"client","name":"SetContrast","description":"A simple contrast boost for the sky material. Cannot affect volumetric clouds","parameters":[{"type":"float","name":"contrast"}]},{"authority":"client","name":"SetOverallIntensity","description":"The overall brightness of the shader","parameters":[{"type":"float","name":"intensity"}]},{"authority":"client","name":"SetNightBrightness","description":"Can be used to scale the brightness of the sky and lighting, at night","parameters":[{"type":"float","name":"brightness"}]},{"authority":"client","name":"SetAnimateTimeOfDay","description":"Sets whether or not to animate the time of day","parameters":[{"type":"boolean","name":"animate","description":"Whether or not to animate the time of day"},{"type":"float?","name":"day_length","default":"30.0","description":"The time (in minutes) from sunrise to sunset"},{"type":"float?","name":"night_length","default":"15.0","description":"The time (in minutes) from sunset to sunrise"}]},{"authority":"client","name":"SetTimeOfDay","description":"Sets the current time","parameters":[{"type":"integer","name":"hours"},{"type":"integer","name":"minutes"}]},{"authority":"client","name":"GetTimeOfDay","description":"Gets the current time","return":[{"type":"integer","description":"hours"},{"type":"integer","description":"minutes"},{"type":"integer","description":"seconds"}]},{"authority":"client","name":"IsSpawned","description":"Returns if the Ultra Dynamic Sky was spawned","parameters":[{"type":"boolean","name":"including_weather","description":"if to check for Weather Actor too"}],"return":[{"type":"boolean"}]},{"authority":"client","name":"GetWeather","description":"Gets the current weather","return":[{"type":"WeatherType"}]},{"authority":"client","name":"ChangeWeather","description":"Gets the current time","parameters":[{"type":"WeatherType","name":"weather","description":"weather to change"},{"type":"float","name":"transition_time","description":"fade time to completely change to new weather"}]}]}'),se=JSON.parse('{"name":"Steam","description":"Interact with Steam APIs.","authority":"client","static_functions":[{"name":"SetRichPresence","description":"Sets Steam Rich Presence text","authority":"client","parameters":[{"type":"string","name":"text","description":""}]}]}'),le=JSON.parse('{"name":"Timer","description":"Execute code at specified time intervals.","authority":"both","static_functions":[{"name":"SetTimeout","authority":"both","description":"Executes a function, after waiting a specified number of milliseconds","parameters":[{"type":"function","name":"callback","description":"The callback that will be executed"},{"type":"integer","name":"milliseconds","default":"0","description":"The time in milliseconds to wait before executing the function"},{"type":"any","name":"parameters...","default":"nil","description":"Additional parameters to pass to the function"}],"return":[{"type":"integer","description":"the timeout_id"}]},{"name":"SetInterval","authority":"both","description":"Same as SetTimeout(), but repeats the execution of the function continuously","parameters":[{"type":"function","name":"callback","description":"The callback that will be executed.<br/>Return false to stop it from being called."},{"type":"integer","name":"milliseconds","default":"0","description":"The time in milliseconds the timer should delay in between executions of the specified function"},{"type":"any","name":"parameters...","default":"nil","description":"Additional parameters to pass to the function"}],"return":[{"type":"integer","description":"the interval_id"}]},{"name":"ClearTimeout","authority":"both","description":"Stops the execution of the function specified in SetTimeout()","parameters":[{"type":"integer","name":"timeout_id","description":"The ID value returned by SetTimeout() is used as the parameter for this method"}]},{"name":"ClearInterval","authority":"both","description":"Stops the execution of the function specified in SetInterval()","parameters":[{"type":"integer","name":"interval_id","description":"The ID value returned by SetInterval() is used as the parameter for this method"}]},{"name":"Bind","authority":"both","description":"Binds a Timer to any Actor. The timer will be automatically cleared when the Actor is destroyed","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"},{"type":"Actor","name":"actor","description":"Actor to be bound"}]},{"name":"IsValid","authority":"both","description":"Checks if a Timer is currently active or waiting to be triggered","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"boolean","name":"is_valid"}]},{"name":"GetElapsedTime","authority":"both","description":"Returns the time elapsed since the last tick","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"float","name":"elapsed_time"}]},{"name":"GetRemainingTime","authority":"both","description":"Returns the time remaining to the next tick","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"float","name":"remaining_time"}]},{"name":"Pause","authority":"both","description":"Pauses the Timer","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]},{"name":"Resume","authority":"both","description":"Resumes the Timer","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]},{"name":"ResetElapsedTime","authority":"both","description":"Resets a Timer to start from beginning","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]}]}'),ce=JSON.parse('{"name":"Trace","description":"Trace a ray against the world and get collided objects information.","authority":"client","static_functions":[{"name":"LineSingle","description":"Trace a ray against the world and returns a table with the first blocking hit information","description_long":"Trace a ray against the world and returns a table with the first blocking hit information<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.","authority":"client","return":[{"type":"table","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the ray"},{"type":"Vector","name":"end_location","description":"End location of the ray"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitily pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"LineMulti","description":"Trace a ray against the world using object types and return overlapping hits and then first blocking hit","description_long":"Trace a ray against the world using object types and return overlapping hits and then first blocking hit<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.<br/><br/>Results are sorted, so a blocking hit (if found) will be the last element of the array<br/><br/>Only the single closest blocking result will be generated, no tests will be done after that","authority":"client","return":[{"type":"table[]","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the ray"},{"type":"Vector","name":"end_location","description":"End location of the ray"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitily pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]}]}'),pe=JSON.parse('{"name":"Viewport","description":"Work with screen properties and effects.","authority":"client","static_functions":[{"name":"ProjectWorldToScreen","description":"Transforms a 3D world-space vector into 2D screen coordinates","authority":"client","parameters":[{"type":"Vector","name":"world_position","description":"World 3D position"}],"return":[{"type":"Vector2D"}]},{"name":"DeprojectScreenToWorld","description":"Transforms a 2D screen coordinates into 3D world-space location","authority":"client","parameters":[{"type":"Vector2D","name":"screen_position","description":"Screen position"}],"return":[{"type":"table","table_properties":[{"name":"Position","type":"Vector"},{"name":"Direction","type":"Vector"}]}]},{"name":"SetHardwareCursor","description":"Loads and sets a hardware cursor in the game from a PNG image","authority":"client","parameters":[{"type":"CursorType","name":"cursor_shape","description":""},{"type":"ImagePath","name":"cursor_path","description":"a PNG image relative to Assets/"},{"type":"Vector2D","name":"hotspot","description":"","default":"Vector(0, 0)"}]},{"name":"GetViewportSize","description":"Gets the size of viewport","authority":"client","return":[{"type":"Vector2D","description":"The size of viewport"}]},{"name":"SetMousePosition","description":"Sets the mouse position","authority":"client","parameters":[{"type":"Vector2D","name":"new_position","description":""}]},{"name":"GetMousePosition","description":"Gets the current mouse screen location","authority":"client","return":[{"type":"Vector2D","description":"The current mouse screen location"}]},{"name":"SetCrosshairEnabled","description":"Enables/Disables the Crosshair","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"SetBloodScreenEnabled","description":"Enables/Disables the Blood Screen effect","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"SetBloodScreenIntensity","description":"Manually sets the Blood Screen intensity","description_long":"If you want the Blood Screen to do not be overridden, disable it with <code>Client.SetBloodScreenEnabled(false)</code> before","authority":"client","parameters":[{"type":"float","name":"intensity","description":"From 0.0 to 1.0"}]}],"events":[{"name":"Resize","description":"Called when the screen is resized","authority":"client","arguments":[{"type":"Vector2D","name":"new_size","description":"New new screen size"}]}]}'),de=JSON.parse('{"name":"JSON","description":"JSON library.","static_functions":[{"name":"stringify","description":"Returns a string representing value encoded in JSON","return":[{"type":"string","description":"the table in JSON"}],"parameters":[{"type":"table","name":"value","description":"the table that will become JSON"}]},{"name":"parse","description":"Returns a value representing the decoded JSON string","return":[{"type":"any","description":"the json in table"}],"parameters":[{"type":"string","name":"value","description":"the JSON that will become a table"}]}]}'),he=JSON.parse('{"name":"NanosMath","description":"A table containing useful and aux Math functions.","static_functions":[{"name":"Round","description":"Rounds a number","return":[{"type":"number","description":"the rounded number"}],"parameters":[{"type":"number","name":"value","description":"The number to be rounded"}]},{"name":"Clamp","description":"Clamps a number","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"},{"type":"number","name":"min","description":"The min value"},{"type":"number","name":"max","description":"The max value"}]},{"name":"ClampAxis","description":"Clamps an angle to the range of [0, 360]","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"}]},{"name":"NormalizeAxis","description":"Clamps an angle to the range of [-180, 180]","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"}]},{"name":"RelativeTo","description":"Calculates the location and rotation relative to an actor","return":[{"type":"Vector","description":"the location relative to the actor"},{"type":"Rotator","description":"the rotation relative to the actor"}],"parameters":[{"type":"Vector","name":"location","description":"The location of the new system"},{"type":"Rotator","name":"rotation","description":"The rotation of the new system"},{"type":"Actor","name":"actor","description":"The actor to be translated to the new system"}]},{"name":"FInterpTo","description":"Interpolate number from Current to Target","return":[{"type":"number"}],"parameters":[{"type":"number","name":"current"},{"type":"number","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"RInterpTo","description":"Interpolate Rotator from Current to Target","return":[{"type":"Rotator"}],"parameters":[{"type":"Rotator","name":"current"},{"type":"Rotator","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"RInterpConstantTo","description":"Interpolate Rotator from Current to Target with a constant step","return":[{"type":"Rotator"}],"parameters":[{"type":"Rotator","name":"current"},{"type":"Rotator","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"VInterpTo","description":"Interpolate Vector from Current to Target","return":[{"type":"Vector"}],"parameters":[{"type":"Vector","name":"current"},{"type":"Vector","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"VInterpConstantTo","description":"Interpolate Vector from Current to Target with a constant step","return":[{"type":"Vector"}],"parameters":[{"type":"Vector","name":"current"},{"type":"Vector","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]}]}'),me=JSON.parse('{"name":"NanosUtils","description":"A table containing useful and aux functions.","static_functions":[{"name":"IsEntityValid","description":"Returns if an entity is valid","return":[{"type":"boolean","description":"if the entity is valid"}],"parameters":[{"type":"any","name":"entity","description":"Entity to verify"}]},{"name":"Dump","description":"Dumps a table into a readable text","return":[{"type":"string","description":"the table as readable text"}],"parameters":[{"type":"table","name":"table","description":"Table to dump"}]},{"name":"Benchmark","description":"Benchmarks a function performance","description_long":"Benchmarks a function performance, outputs in the console the elapsed time","parameters":[{"type":"string","name":"name","description":"Benchmark name to output"},{"type":"number","name":"amount","description":"Amount of times to loop"},{"type":"function","name":"func","description":"The function to call"},{"type":"any","name":"args...","description":"The arguments of the function to call"}]},{"name":"FormatString","description":"A better string.format","description_long":"A better string.format. replace {num} by the corresponding vararg in a string<br/><br/>Example: <code>NanosUtils.FormatString(\\"Hello {2} I\'m {1}\\", \\"a noob\\", \\"world!\\") -- \\"Hello world! I\'m a noob\\"</code>","return":[{"type":"string","description":"the final text with the arguments"}],"parameters":[{"type":"string","name":"text","description":"Text to format"},{"type":"any","name":"args...","description":"The arguments to replace"}]},{"name":"ShallowCopyTable","description":"Performs a shallow copy of a table","return":[{"type":"table","description":"the copied table"}],"parameters":[{"type":"table","name":"table","description":"The table to shallow copy"}]}]}'),ue=JSON.parse('{"name":"Entity","description":"<b>Entity</b> is the base for all Classes, and all those entities share the same <b>Methods</b> and <b>Events</b> described in this page.","static_functions":[{"name":"GetAll","description":"Returns a table containing all Entities of the class this is called on","authority":"both","return":[{"type":"Entity[]","description":"Copy of table containing all Entities"}]},{"name":"GetByIndex","description":"Returns a specific Entity of this class at an index","authority":"both","parameters":[{"type":"integer","name":"index","description":"The index of the Entity"}],"return":[{"type":"Entity","description":"Entity at index"}]},{"name":"GetCount","description":"Returns how many Entities of this class exist","authority":"both","return":[{"type":"integer","description":"Number of Entities of this class"}]},{"name":"GetPairs","description":"Returns an iterator with all Entities of this class to be used with <code>pairs()</code>","description_long":"Returns an iterator with all Entities of this class to be used with <code>pairs()</code>. This is a more performant method than <code>GetAll()</code>, as it will return the iterator to access the Entities directly instead of creating and returning a copy of the Entities table.<br><br><b>Note:</b> Destroying Entities from inside a <code>GetPairs()</code> loop will cause the iterable to change size during the process. If you want to loop-and-destroy, please use <code>GetAll()</code>.","authority":"both","return":[{"type":"iterator","description":"Iterator with all Entities of this class"}]},{"name":"Inherit","description":"Inherits this class with the <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"string","name":"name","description":"The name of the new Class"},{"type":"table?","name":"custom_values","description":"An optional table with custom values to be set in the inherited class table"}],"return":[{"type":"table","description":"The new Class table"}]},{"name":"GetInheritedClasses","description":"Gets a list of all directly inherited classes from this Class created with the <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"boolean","default":"false","name":"recursively","description":"Returns all inherited children"}],"return":[{"type":"table[]","description":"All children Classes"}]},{"name":"GetParentClass","description":"Gets the parent class if this Class was created with the <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","return":[{"type":"table?","description":"The parent class"}]},{"name":"IsChildOf","description":"Gets if this Class is child of another class if this Class was created with the <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"table","name":"class","description":"The other class to check"}],"return":[{"type":"boolean"}]},{"name":"Subscribe","description":"Subscribes to an <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/events-guide\'>Event</a> for all entities of this Class","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"SubscribeRemote","description":"Subscribes to a custom event called from server","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"Unsubscribe","description":"Unsubscribes all callbacks from this <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/events-guide\'>Event</a> in this Class within this Package, or only the callback passed","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to unsubscribe from"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to unsubscribe"}]}],"functions":[{"name":"GetID","description":"Gets the universal network ID of this Entity (same on both client and server)","authority":"both","return":[{"type":"integer"}]},{"name":"GetClass","description":"Gets the class of this entity","authority":"both","return":[{"type":"table"}]},{"name":"IsA","description":"Recursively checks if this entity is <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>inherited</a> from a Class","authority":"both","parameters":[{"type":"table","name":"class","description":"The Class"}],"return":[{"type":"boolean"}]},{"name":"Subscribe","description":"Subscribes to an <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/events-guide\'>Event</a> on this specific entity","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"SubscribeRemote","description":"Subscribes to a custom event called from server on this specific entity","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"Unsubscribe","description":"Unsubscribes all callbacks from this <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/events-guide\'>Event</a> in this Entity within this Package, or only the callback passed","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to unsubscribe from"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to unsubscribe"}]},{"name":"SetValue","description":"Sets a <a href=\'https://docs.nanos.world/docs/core-concepts/scripting/entity-values\'>Value</a> in this Entity","description_long":"Sets a value in this Entity, which can be accessed by any package (optionally sync on clients if called from server)<br><br>Please refer to <a href=\\"https://docs.nanos.world/docs/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"both","parameters":[{"type":"string","name":"key"},{"type":"any","name":"value"},{"type":"boolean","name":"sync_on_clients","default":"false","description":"Server side parameter, if enabled will sync this value with all clients"}]},{"name":"GetValue","description":"Gets a <a href=\'https://docs.nanos.world/docs/core-concepts/scripting/entity-values\'>Value</a> stored on this Entity at the given key","description_long":"Gets a <a href=\'https://docs.nanos.world/docs/core-concepts/scripting/entity-values\'>Value</a> stored on this Entity at the given key. Please refer to <a href=\\"https://docs.nanos.world/docs/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"both","parameters":[{"type":"string","name":"key"},{"type":"any","name":"fallback","description":"Fallback value if key doesn\'t exist"}],"return":[{"type":"any","description":"Value at key or fallback if key doesn\'t exist"}]},{"name":"Destroy","description":"Destroys this Entity","authority":"authority"},{"name":"IsValid","description":"Returns true if this Entity is valid (i.e. wasn\'t destroyed and points to a valid Entity)","authority":"both","return":[{"type":"boolean"}]},{"name":"CallRemoteEvent","description":"Calls a custom remote event directly on this entity to a specific Player","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"Player","name":"player","description":"The remote player to send this event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"name":"CallRemoteEvent","description":"Calls a custom remote event directly on this entity","authority":"client","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"name":"BroadcastRemoteEvent","description":"Calls a custom remote event directly on this entity to all Players","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]}],"events":[{"authority":"both","name":"Spawn","description":"Triggered when an Entity is spawned/created","arguments":[{"type":"Entity","name":"self","description":"The Entity that was spawned"}]},{"authority":"both","name":"Destroy","description":"Triggered when an Entity is destroyed","arguments":[{"type":"Entity","name":"self","description":"The Entity which that was destroyed"}]},{"authority":"both","name":"ValueChange","description":"Triggered when an Entity has a value changed with <code>:SetValue()</code>","arguments":[{"type":"Entity","name":"self","description":"The Entity that just had a value changed"},{"type":"string","name":"key","description":"The key used"},{"type":"any","name":"value","description":"The value that was set"}]},{"authority":"both","name":"ClassRegister","description":"Triggered when a new Class is registered with the <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","arguments":[{"type":"table","name":"class","description":"The inherited Class"}]}]}'),ye=JSON.parse('{"name":"Actor","description":"An <b>Actor</b> is an object which can be spawned and destroyed through Lua.<br>Actors support 3D transformations such as translation (location), rotation, and scale.<br><br>An <b>Actor</b> is the base for several entities, and all those entities share the same <b>Methods</b> and <b>Events</b> described in this page.","functions":[{"name":"AddImpulse","description":"Applies a force in world world to this Actor","description_long":"Applies a force in world world to this Actor (the force is applied client side, by, in most cases, the player closest to this Actor)","authority":"network-authority","parameters":[{"type":"Vector","name":"force"},{"type":"boolean","name":"velocity_change","default":"false","description":"Whether to ignore mass"}]},{"name":"AttachTo","description":"Attaches this Actor to any other Actor, optionally at a specific bone","description_long":"<p>Attaches this Actor to any other Actor, optionally at a specific bone</p><ul><li><code>AttachmentRule.KeepRelative</code> will keep the current relative position/rotation if already attached.</li><li><code>AttachmentRule.KeepWorld</code> will calculate the new relative position/rotation so the Actor stays at the same position after being attached.</li><li><code>AttachmentRule.SnapToTarget</code> will set the Actor to the same position/rotation as <code>other_actor</code> (or at the bone location) and reset its relative position/rotation to zero.</li></ul><p>Setting <code>lifespan_when_detached</code> to <code>0</code> will automatically destroy this actor when detached, setting it to <code>10</code> will destroy this after 10 seconds when detached.</p>","authority":"authority","parameters":[{"type":"Actor","name":"other","description":"Other actor to attach"},{"type":"AttachmentRule","name":"attachment_rule","default":"SnapToTarget","description":"How to attach"},{"type":"string","name":"bone_name","default":"","description":"Which bone to attach to"},{"type":"float","name":"lifespan_when_detached","default":"-1","description":"Seconds before destroying this Actor when detached"},{"type":"boolean","name":"use_absolute_rotation","default":"false","description":"Whether to force attached object to use absolute rotation (will not follow parent)"}]},{"name":"Detach","description":"Detaches this Actor from AttachedTo Actor","authority":"authority"},{"name":"SetCollision","description":"Sets this Actor\'s collision type","authority":"authority","parameters":[{"type":"CollisionType","name":"collision_type"}]},{"name":"SetDimension","description":"Sets this Actor\'s Dimension","authority":"server","parameters":[{"type":"integer","name":"dimension"}]},{"name":"SetForce","description":"Adds a permanent force to this Actor, set to Vector(0, 0, 0) to cancel","authority":"network-authority","parameters":[{"type":"Vector","name":"force"},{"type":"boolean","name":"is_local","default":"true","description":"Whether to apply the force in local space"}]},{"name":"SetGravityEnabled","description":"Sets whether gravity is enabled on this Actor","authority":"authority","parameters":[{"type":"boolean","name":"is_enabled"}]},{"name":"SetVisibility","description":"Sets whether the actor is visible or not","authority":"both","parameters":[{"type":"boolean","name":"is_visible"}]},{"name":"SetHighlightEnabled","description":"Sets whether the highlight is enabled on this Actor, and which highlight index to use","description_long":"Sets whether the highlight is enabled on this Actor, and which highlight index to use. This will apply the hight on every attached entity too","authority":"client","parameters":[{"type":"boolean","name":"is_enabled"},{"type":"integer","name":"index","default":"0","description":"Index to use (should be <code>0</code>, <code>1</code or <code>2</code>)"}]},{"name":"SetOutlineEnabled","description":"Sets whether the outline is enabled on this Actor, and which outline index to use","description_long":"Sets whether the outline is enabled on this Actor, and which outline index to use. This will apply the outline on every attached entity too","authority":"client","parameters":[{"type":"boolean","name":"is_enabled"},{"type":"integer","name":"index","default":"0","description":"Index to use (should be <code>0</code>, <code>1</code or <code>2</code>)"}]},{"name":"SetLifeSpan","description":"Sets the time (in seconds) before this Actor is destroyed. After this time has passed, the actor will be automatically destroyed.","authority":"authority","parameters":[{"type":"float","name":"seconds","description":"Seconds before being destroyed"}]},{"name":"SetLocation","description":"Sets this Actor\'s location in the game world","authority":"authority","parameters":[{"type":"Vector","name":"location"}]},{"name":"SetRotation","description":"Sets this Actor\'s rotation in the game world","authority":"authority","parameters":[{"type":"Rotator","name":"rotation"}]},{"name":"SetRelativeLocation","description":"Sets this Actor\'s relative location in local space (only if this actor is attached)","authority":"authority","parameters":[{"type":"Vector","name":"relative_location"}]},{"name":"SetRelativeRotation","description":"Sets this Actor\'s relative rotation in local space (only if this actor is attached)","authority":"authority","parameters":[{"type":"Rotator","name":"relative_rotation"}]},{"name":"SetScale","description":"Sets this Actor\'s scale","authority":"authority","parameters":[{"type":"Vector","name":"scale"}]},{"name":"SetNetworkAuthority","description":"Sets the Player to have network authority over this Actor","description_long":"Sets the Player to have network authority over this Actor. This Player will be manually assigned to handle this Actor\'s physics and share its location with other clients. The authority assignment will still be overridden by the game automatically<br><br>Please refer to <a href=\\"https://docs.nanos.world/docs/core-concepts/scripting/authority-concepts#network-authority\\">Network Authority</a> for more information","authority":"server","parameters":[{"type":"Player","name":"player","default":"nil","description":"New player which will assume the Network Authority of this Actor"}]},{"name":"SetNetworkAuthorityAutoDistributed","description":"Sets if this Actor will auto distribute the network authority betwen players","description_long":"Sets if this Actor will auto distribute the network authority betwen players when idle<br><br>Please refer to <a href=\\"https://docs.nanos.world/docs/core-concepts/scripting/authority-concepts#network-authority\\">Network Authority</a> for more information","authority":"server","parameters":[{"type":"boolean","name":"auto_distribute","description":"If this Actor will be auto network distributed"}]},{"name":"TranslateTo","description":"Smoothly moves this actor to a location over a certain time","authority":"network-authority","parameters":[{"type":"Vector","name":"location"},{"type":"float","name":"time","description":"Time to interpolate from current location to target location"},{"type":"float","name":"exp","default":"0","description":"Exponent used to smooth interpolation. Use <code>0</code> for linear movement"}]},{"name":"RotateTo","description":"Smoothly rotates this actor to an angle over a certain time","authority":"network-authority","parameters":[{"type":"Rotator","name":"rotation"},{"type":"float","name":"time","description":"Time to interpolate from current location to target location"},{"type":"float","name":"exp","default":"0","description":"Exponent used to smooth interpolation. Use <code>0</code> for linear movement"}]},{"name":"IsBeingDestroyed","description":"Returns true if this Actor is being destroyed","description_long":"Returns true if this Actor is being destroyed.<br>You can check this inside events like <code>Drop</code> to see if a Pickable is being dropped because it\'s going to be destroyed","authority":"both","return":[{"type":"boolean"}]},{"name":"IsVisible","description":"Returns true if this Actor is visible","authority":"both","return":[{"type":"boolean"}]},{"name":"IsGravityEnabled","description":"Returns true if gravity is enabled on this Actor","authority":"both","return":[{"type":"boolean"}]},{"name":"IsInWater","description":"Returns true if this Actor is in water","authority":"both","return":[{"type":"boolean"}]},{"name":"IsNetworkDistributed","description":"Returns true if this Actor is currently network distributed","description_long":"Returns true if this Actor is currently network distributed. Only actors being network distributed can have their network authority set<br>Entities have NetworkDistributed automatically disabled when: Attached, Possessed, Grabbed, Picked Up or Driving","authority":"both","return":[{"type":"boolean"}]},{"name":"GetAttachedEntities","description":"Gets all Actors attached to this Actor","authority":"both","return":[{"type":"Actor[]"}]},{"name":"GetAttachedTo","description":"Gets the Actor this Actor is attached to","authority":"both","return":[{"type":"Actor?"}]},{"name":"GetBounds","description":"Gets this Actor\'s bounds","authority":"client","return":[{"type":"table","table_properties":[{"name":"Origin","type":"Vector"},{"name":"BoxExtent","type":"Vector"},{"name":"SphereRadius","type":"float"}]}]},{"name":"GetCollision","description":"Gets this Actor\'s collision type","authority":"both","return":[{"type":"CollisionType"}]},{"name":"GetLocation","description":"Gets this Actor\'s location in the game world","authority":"both","return":[{"type":"Vector"}]},{"name":"GetRelativeLocation","description":"Gets this Actor\'s Relative Location if it\'s attached","authority":"both","return":[{"type":"Vector"}]},{"name":"GetNetworkAuthority","description":"Gets this Actor\'s Network Authority Player","authority":"server","return":[{"type":"Player?"}]},{"name":"GetRotation","description":"Gets this Actor\'s angle in the game world","authority":"both","return":[{"type":"Rotator"}]},{"name":"GetRelativeRotation","description":"Gets this Actor\'s Relative Rotation if it\'s attached","authority":"both","return":[{"type":"Rotator"}]},{"name":"GetForce","description":"Gets this Actor\'s force (set by <code>SetForce()</code>)","authority":"both","return":[{"type":"Vector"}]},{"name":"GetDimension","description":"Gets this Actor\'s dimension","authority":"both","return":[{"type":"integer"}]},{"name":"HasNetworkAuthority","description":"Returns true if the local Player is currently the Network Authority of this Actor","authority":"client","return":[{"type":"boolean"}]},{"name":"HasAuthority","description":"Gets if this Actor was spawned by the client side","authority":"client","return":[{"type":"boolean","description":"false if it was spawned by the Server or true if it was spawned by the client"}]},{"name":"GetScale","description":"Gets this Actor\'s scale","authority":"both","return":[{"type":"Vector"}]},{"name":"GetVelocity","description":"Gets this Actor\'s current velocity","authority":"both","return":[{"type":"Vector"}]},{"name":"AddActorTag","description":"Adds an Unreal Actor Tag to this Actor","authority":"client","parameters":[{"type":"string","name":"tag"}]},{"name":"RemoveActorTag","description":"Removes an Unreal Actor Tag from this Actor","authority":"client","parameters":[{"type":"string","name":"tag"}]},{"name":"GetActorTags","description":"Gets all Unreal Actor Tags on this Actor","authority":"client","return":[{"type":"string[]"}]},{"name":"WasRecentlyRendered","description":"Gets if this Actor was recently rendered on screen","authority":"client","return":[{"type":"boolean"}]},{"name":"GetDistanceFromCamera","description":"Gets the distance of this Actor from the Camera","authority":"client","return":[{"type":"float"}]},{"name":"GetScreenPercentage","description":"Gets the percentage of this Actor size in the screen","authority":"client","return":[{"type":"float"}]}],"events":[{"authority":"server","name":"DimensionChange","description":"Triggered when an Actor changes it\'s dimension","arguments":[{"name":"self","type":"Actor"},{"name":"old_dimension","type":"integer"},{"name":"new_dimension","type":"integer"}]}]}'),fe=JSON.parse('{"name":"Pickable","description":"<b>Pickables</b> are special Actors which can be <b>grabbed</b>, <b>held</b> and <b>used</b> by Characters.","functions":[{"authority":"both","name":"AddSkeletalMeshAttached","description":"Attaches a Skeletal Mesh as master pose to this entity","description_long":"Spawns and attaches a SkeletalMesh to this Pickable, the SkeletalMesh must have the same skeleton used by this Actor\'s mesh, and will follow all animations from it. Uses a custom ID to be used for removing it later.<br><br>For customizing the Materials specific to a mesh attached with this function, use the following syntax as the <code>parameter_name</code> in the <a href=\\"https://docs.nanos.world/docs/scripting-reference/classes/base-classes/paintable\\">Base Paintable</a> methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where <code>[ATTACHABLE_ID]</code> is the ID of the Attachable, and <code>[PARAMETER_NAME]</code> is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Unique ID to assign to the SkeletalMesh"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_path","description":"Path to SkeletalMesh asset to attach"}]},{"authority":"both","name":"AddStaticMeshAttached","description":"Attaches a Static Mesh to this entity","description_long":"Spawns and attaches a StaticMesh to this Pickable in a Socket with a relative location and rotation. Uses a custom ID to be used for removing it later<br><br>For customizing the Materials specific to a mesh attached with this function, use the following syntax as the <code>parameter_name</code> in the <a href=\\"https://docs.nanos.world/docs/scripting-reference/classes/base-classes/paintable\\">Base Paintable</a> methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where <code>[ATTACHABLE_ID]</code> is the ID of the Attachable, and <code>[PARAMETER_NAME]</code> is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Unique ID to assign to the StaticMesh"},{"type":"StaticMeshPath","name":"static_mesh_path","description":"Path to StaticMesh asset to attach"},{"type":"string","name":"socket","default":"","description":"Bone socket to attach to"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)","description":"Relative location"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Relative rotation"}]},{"authority":"server","name":"PullUse","description":"Pulls the usage of this Pickable (will start firing if this is a weapon)","parameters":[{"type":"float","name":"release_use_after","default":"-1","description":"Time in seconds to automatically release the usage (-1 will not release, 0 will release one tick after)"}]},{"authority":"server","name":"ReleaseUse","description":"Releases the usage of this Pickable (will stop firing if this is a weapon)"},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if it exists, a SkeletalMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the SkeletalMesh to remove"}]},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if it exists, a StaticMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh to remove"}]},{"authority":"server","name":"SetAttachmentSettings","description":"Sets the Attachment Settings for this Pickable (how it attaches to the Character when Picking up)","parameters":[{"type":"Vector","name":"relative_location","description":"Location relative to the Socket"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Rotation relative to the Socket"},{"type":"string","name":"socket","default":"hand_r_socket","description":"Character Socket to attach to when picked up"}]},{"authority":"server","name":"SetCrosshairMaterial","description":"Sets the crosshair material for this Pickable","parameters":[{"type":"MaterialPath","name":"material_asset","description":"Asset path to the crosshair material"}]},{"authority":"server","name":"SetPickable","description":"Sets if this Pickable can be picked up from ground by the player","parameters":[{"type":"boolean","name":"is_pickable"}]},{"authority":"both","name":"GetMesh","description":"Gets the name of the asset this Pickable uses","return":[{"type":"SkeletalMeshPath"}]},{"authority":"both","name":"GetHandler","description":"Gets the Character, if it exists, that\'s holding this Pickable","return":[{"type":"Character?"}]}],"events":[{"authority":"both","name":"Drop","description":"When a Character drops this Pickable","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has been dropped"},{"type":"Character","name":"character","description":"The Character that dropped it"},{"type":"boolean","name":"was_triggered_by_player","description":"If the Player actively pressed the Drop binding to drop"}]},{"authority":"both","name":"Hit","description":"When this Pickable hits something","arguments":[{"type":"Pickable","name":"self","description":"The Actor that was hit"},{"type":"float","name":"impact_force","description":"The intensity of the hit normalized by the Pickable\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction of the hit"},{"type":"Vector","name":"impact_location","description":"The world space location of the impact"},{"type":"Vector","name":"velocity","description":"The Pickable\'s velocity at the moment it hit"}]},{"authority":"server","name":"Interact","description":"Triggered when a Character interacts with this Pickable (i.e. tries to pick it up)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable that just got interacted with"},{"type":"Character","name":"character","description":"The Character that interacted with it"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent the interaction"}]},{"authority":"both","name":"PickUp","description":"Triggered When a Character picks this up","arguments":[{"type":"Pickable","name":"self","description":"The Pickable that just got picked up"},{"type":"Character","name":"character","description":"The Character that picked it up"}]},{"authority":"both","name":"PullUse","description":"Triggered when a Character presses the use button for this Pickable (i.e. clicks left mouse button with this equipped)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has just been used"},{"type":"Character","name":"character","description":"The Character that used it"}]},{"authority":"both","name":"ReleaseUse","description":"Triggered when a Character releases the use button for this Pickable (i.e. releases left mouse button with this equipped)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has just stopped being used"},{"type":"Character","name":"character","description":"The Character that stopped using it"}]}]}'),ge=JSON.parse('{"name":"Paintable","description":"Base class for all Paintable entities. This class provides customization for materials, exposing common functions to allow you to set custom material parameters, including loading textures from disk.","functions":[{"authority":"both","name":"SetMaterial","description":"Sets the material at the specified index of this Actor","parameters":[{"type":"MaterialPath","name":"material_path","description":"The new Material to apply"},{"type":"integer","name":"index","default":"-1","description":"The index to apply<br/>-1 means all indices"}]},{"authority":"client","name":"SetMaterialFromCanvas","description":"Sets the material at the specified index of this Actor to a Canvas object","parameters":[{"type":"Canvas","name":"canvas","description":"The Canvas object to use as a materia"},{"type":"integer","name":"index","default":"-1","description":"The index to apply<br/>-1 means all indices"}]},{"authority":"client","name":"SetMaterialFromSceneCapture","description":"Sets the material at the specified index of this Actor to a SceneCapture object","parameters":[{"type":"SceneCapture","name":"scene_capture","description":"The SceneCapture object to use as a material"},{"type":"integer","name":"index","default":"-1","description":"The index to apply<br/>-1 means all indices"}]},{"authority":"client","name":"SetMaterialFromWebUI","description":"Sets the material at the specified index of this Actor to a WebUI object","parameters":[{"type":"WebUI","name":"webui","description":"The WebUI object to use as a material"},{"type":"integer","name":"index","default":"-1","description":"The index to apply<br/>-1 means all indices"}]},{"authority":"both","name":"ResetMaterial","description":"Resets the material from the specified index to the original one","parameters":[{"type":"integer","name":"index","default":"-1","description":"The index to apply<br/>-1 means all indices"}]},{"authority":"both","name":"SetMaterialColorParameter","description":"Sets a Color parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"Color","name":"color","description":"The value to set"}]},{"authority":"both","name":"SetMaterialScalarParameter","description":"Sets a Scalar parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"float","name":"scalar","description":"The value to set"}]},{"authority":"both","name":"SetMaterialTextureParameter","description":"Sets a texture parameter in this Actor\'s material to an image on disk","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"ImagePath","name":"texture_path","description":"The path to the texture"}]},{"authority":"both","name":"SetMaterialVectorParameter","description":"Sets a Vector parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"Vector","name":"vector","description":"The value to set"}]},{"authority":"both","name":"SetPhysicalMaterial","description":"Overrides this Actor\'s Physical Material with a new one","parameters":[{"type":"MaterialPath","name":"physical_material_path","description":"The Physical Material to override"}]}]}'),be=JSON.parse('{"name":"Billboard","description":"A Billboard is a 2D Material that will be rendered always facing the camera.","authority":"client","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"MaterialPath","name":"material_asset","default":""},{"type":"Vector2D","name":"size","default":"Vector2D(32, 32)"},{"type":"boolean","name":"size_in_screen_space","default":"false","description":"Size is in Screen or World Space"}]}]}'),ve=JSON.parse('{"name":"Blueprint","description":"A Blueprint Class allows spawning any Unreal Blueprint Actor in nanos world.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"BlueprintPath","name":"blueprint_asset","default":""}]}],"functions":[{"name":"CallBlueprintEvent","return":[{"type":"any","description":"The event return values"}],"description":"Calls a Blueprint Event or Function","description_long":"Calls a Blueprint Event or Function<br/>Returns all Function return values on <strong>Client Side</strong>","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event or Function name"},{"type":"any","name":"arguments...","default":"nil","description":"Sequence of arguments to pass to the event"}]},{"name":"BindBlueprintEventDispatcher","description":"Assigns and Binds a Blueprint Event Dispatcher","authority":"client","parameters":[{"type":"string","name":"dispatcher_name","description":"Event Dispatcher name"},{"type":"function","name":"callback","description":"Callback function to call (the first argument is the blueprint itself)"}]},{"name":"SetBlueprintPropertyValue","description":"Sets a Blueprint Property/Variable value directly","authority":"client","parameters":[{"type":"string","name":"property_name"},{"type":"any","name":"value"}]},{"name":"GetBlueprintPropertyValue","description":"Gets a Blueprint Property/Variable value","authority":"client","return":[{"type":"any","description":"the value"}],"parameters":[{"type":"string","name":"property_name"}]}]}'),_e=JSON.parse('{"name":"Cable","description":"A Cable represents a Physics Constraint which joins two Actors with a rope-like visual representation between them.","authority":"server","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"boolean","name":"enable_visuals","default":"true","description":"Toggles the cable visuals"}]}],"functions":[{"authority":"server","name":"AttachStartTo","description":"Attached the beginning of this cable to another Actor at a specific bone or relative location","parameters":[{"type":"Actor","name":"other"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"string","name":"bone_name","default":""}]},{"authority":"server","name":"AttachEndTo","description":"Attached the end of this cable to another Actor at a specific bone or relative location","parameters":[{"type":"Actor","name":"other"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"string","name":"bone_name","default":""}]},{"authority":"server","name":"DetachEnd","description":"Detaches the End of this Cable"},{"authority":"server","name":"DetachStart","description":"Detaches the Start of this Cable"},{"authority":"both","name":"SetCableSettings","description":"Set the overall settings for this cable (visuals only)","parameters":[{"type":"float","name":"length","description":"Rest length of the cable. Default is 100"},{"type":"integer","name":"num_segments","description":"How many segments the cable has. Default is 10"},{"type":"integer","name":"solver_iterations","description":"The number of solver iterations controls how \'stiff\' the cable is. Default is 0"}]},{"authority":"both","name":"SetForces","description":"Set the forces the cable has applied (visuals only)","parameters":[{"type":"Vector","name":"force","description":"Force vector (world space) applied to all particles in cable. Default is Vector(0, 0, 0)"},{"type":"float","name":"gravity_scale","default":"1","description":"Scaling applied to world gravity affecting this cable. Default is 1"}]},{"authority":"server","name":"SetAngularLimits","description":"Sets the Physics Angular Limits of this cable","parameters":[{"type":"ConstraintMotion","name":"swing_1_motion","description":"Indicates whether the Swing1 limit is used"},{"type":"ConstraintMotion","name":"swing_2_motion","description":"Indicates whether the Swing2 limit is used"},{"type":"ConstraintMotion","name":"twist_motion","description":"Indicates whether the Twist limit is used"},{"type":"float","name":"swing_1_limit","default":"0","description":"Angle of movement along the XY plane. This defines the first symmetric angle of the cone"},{"type":"float","name":"swing_2_limit","default":"0","description":"Angle of movement along the XZ plane. This defines the second symmetric angle of the cone"},{"type":"float","name":"twist_limit","default":"0","description":"Symmetric angle of roll along the X-axis"}]},{"authority":"server","name":"SetLinearLimits","description":"Sets the Physics Linear Limits of this cable","description_long":"Sets the Physics Linear Limits of this cable. If use_soft_constraint is enabled, then stiffness and damping will be used, otherwise restitution will be used.","parameters":[{"type":"ConstraintMotion","name":"x_motion","description":"Indicates the linear constraint applied along the X-axis. Free implies no constraint at all. Locked implies no movement along X is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"ConstraintMotion","name":"y_motion","description":"Indicates the linear constraint applied along the Y-axis. Free implies no constraint at all. Locked implies no movement along Y is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"ConstraintMotion","name":"z_motion","description":"Indicates the linear constraint applied along theZX-axis. Free implies no constraint at all. Locked implies no movement along Z is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"float","name":"limit","default":"0","description":"The distance allowed between between the two joint reference frames. Distance applies on all axes enabled (one axis means line, two axes implies circle, three axes implies sphere)"},{"type":"float","name":"restitution","default":"0","description":"Controls the amount of bounce when the constraint is violated. A restitution value of 1 will bounce back with the same velocity the limit was hit. A value of 0 will stop dead"},{"type":"boolean","name":"use_soft_constraint","default":"false","description":"Whether we want to use a soft constraint (spring)"},{"type":"float","name":"stiffness","default":"0","description":"Stiffness of the soft constraint. Only used when Soft Constraint is on"},{"type":"float","name":"damping","default":"0","description":"Damping of the soft constraint. Only used when Soft Constraint is on"}]},{"authority":"both","name":"SetRenderingSettings","description":"Set the rendering settings of this cable (visuals only)","parameters":[{"type":"float","name":"width","description":"How wide the cable geometry is. Default is 6"},{"type":"integer","name":"num_sides","description":"Number of sides of the cable geometry. Default is 4"},{"type":"integer","name":"tile_material","description":"How many times to repeat the material along the length of the cable. Default is 1"}]},{"authority":"both","name":"GetAttachedStartTo","description":"Gets the Actor attached to Start","return":[{"type":"Actor","description":"the Actor or nil"}]},{"authority":"both","name":"GetAttachedEndTo","description":"Gets the Actor attached to End","return":[{"type":"Actor","description":"the Actor or nil"}]}]}'),Se=JSON.parse('{"name":"Canvas","description":"Canvas is an entity which you can draw onto it.","authority":"client","constructors":[{"description":"Default Constructor","parameters":[{"type":"boolean","name":"is_visible","default":"true","description":"Whether to draw it on screen"},{"type":"Color","name":"clear_color","default":"Color.TRANSPARENT","description":"Color to clear with (background color)"},{"type":"float","name":"auto_repaint_rate","default":"-1","description":"Rate to auto repaint (call Update event), pass 0 for every frame, -1 to disable"},{"type":"boolean","name":"should_clear_before_update","default":"true","description":"Whether to clear with Clear Color before updates"},{"type":"boolean","name":"auto_resize","default":"true","description":"Auto resize with screen\'s size"},{"type":"integer","name":"width","default":"0","description":"If not using auto_resize"},{"type":"integer","name":"height","default":"0","description":"If not using auto_resize"}]}],"functions":[{"authority":"client","name":"DrawBox","description":"Draws an unfilled box on the Canvas","description_long":"Draws an unfilled box on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"float","name":"thickness"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawLine","description":"Draws a line on the Canvas","description_long":"Draws a line on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"Vector2D","name":"screen_position_a"},{"type":"Vector2D","name":"screen_position_b"},{"type":"float","name":"thickness"},{"type":"Color","name":"render_color"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterial","description":"Draws a Material on the Canvas","description_long":"Draws a Material on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"MaterialPath","name":"material_path"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterialFromWebUI","description":"Draws a WebUI on the Canvas","description_long":"Draws a WebUI on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"WebUI","name":"webui_entity"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterialFromSceneCapture","description":"Draws a SceneCapture on the Canvas","description_long":"Draws a SceneCapture on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"SceneCapture","name":"scenecapture_entity"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawText","description":"Draws a Text on the Canvas","description_long":"Draws a Text on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/>Shadow and Outline won\'t work properly with Transparent <code>clear_color</code>","parameters":[{"type":"string","name":"text"},{"type":"Vector2D","name":"screen_position"},{"type":"FontType","name":"font_type","default":"FontType.Roboto"},{"type":"integer","name":"font_size","default":"12"},{"type":"Color","name":"text_color","default":"Color.WHITE"},{"type":"float","name":"kerning","default":"0"},{"type":"boolean","name":"center_x","default":"false"},{"type":"boolean","name":"center_y","default":"false"},{"type":"Color","name":"shadow_color","default":"Color.TRANSPARENT"},{"type":"Vector2D","name":"shadow_offset","default":"Vector2D(1, 1)"},{"type":"boolean","name":"outlined","default":"false"},{"type":"Color","name":"outline_color","default":"Color.BLACK"}]},{"authority":"client","name":"DrawTexture","description":"Draws a Texture on the Canvas","description_long":"Draws a Texture on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"}]},{"authority":"client","name":"DrawPolygon","description":"Draws a N-Polygon on the Canvas","description_long":"Draws a N-Polygon on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path","description":"Pass empty to use default white Texture"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"radius","default":"Vector2D(1, 1)"},{"type":"integer","name":"number_of_sides","default":"3"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawRect","description":"Draws a filled Rect on the Canvas","description_long":"Draws a fille Rect on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path","description":"Pass empty to use default white Texture"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"SetAutoRepaintRate","description":"Sets the repaint rate","description_long":"Sets it to -1 to stop auto repainting or 0 to repaint every frame","parameters":[{"type":"boolean","name":"auto_repaint_rate"}]},{"authority":"client","name":"SetVisibility","description":"Sets if it\'s visible on screen","parameters":[{"type":"boolean","name":"visible"}]},{"authority":"client","name":"Repaint","description":"Forces the repaint","description_long":"Forces the repaint, this will trigger Update event"},{"authority":"client","name":"Clear","description":"Clear the Canvas with a specific Color","parameters":[{"type":"Color","name":"clear_color"}]}],"events":[{"name":"Update","authority":"client","description":"Called when the Canvas needs to be painted<br/><br/>You can only call <code>:Draw...()</code> methods from inside this event","arguments":[{"name":"self","type":"Canvas"},{"name":"width","type":"integer"},{"name":"height","type":"integer"}]}]}'),we=JSON.parse('{"name":"Character","description":"Characters represents Actors which can be possessed, can move and interact with world. They are the default Skeletal Mesh Character built for nanos world.","authority":"server","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath","name":"skeletal_mesh"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"integer","name":"max_health","default":"100","description":"Current / Max Health"},{"type":"SoundPath","name":"death_sound","default":"nanos-world::A_Male_01_Death","description":"Played when Character dies"},{"type":"SoundPath","name":"pain_sound","default":"nanos-world::A_Male_01_Pain","description":"Played when Character takes damage"}]}],"functions":[{"authority":"server","name":"ApplyDamage","return":[{"type":"integer","description":"the damage applied"}],"description":"Do damage to a character","description_long":"Do damage to a character, will trigger all related events and apply modified damage based on bone. Also will apply impulse if it\'s a heavy explosion","parameters":[{"type":"integer","name":"damage"},{"type":"string","name":"bone_name","default":""},{"type":"DamageType","name":"damage_type","default":"DamageType.Shot"},{"type":"Vector","name":"from_direction","default":"Vector(0, 0, 0)"},{"type":"Player","name":"instigator","default":"nil","description":"The player which caused the damage"},{"type":"any","name":"causer","default":"nil","description":"The object which caused the damage"}]},{"authority":"both","name":"AddSkeletalMeshAttached","description":"Spawns and Attaches a SkeletalMesh into this Character","description_long":"Spawns and Attaches a SkeletalMesh into this Character, the SkeletalMesh must have the same Skeletal used by the Character Mesh, and will follow all animations from it. Uses a custom ID to be used for removing it further.<br/><br/>For customizing the Materials specific of a SkeletalMeshAttached, please use the following syntax in the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset","default":""}]},{"authority":"both","name":"AddStaticMeshAttached","description":"Spawns and Attaches a StaticMesh into this Character","description_long":"Spawns and Attaches a StaticMesh into this Character in a Socket with relative Location and Rotation. Uses a custom ID to be used for removing it further<br/><br/>For customizing the Materials specific of a StaticMeshAttached, please use the following syntax as the <code>parameter_name</code> in the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":""},{"type":"string","name":"socket","default":""},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)"}]},{"authority":"server","name":"Drop","description":"Drops any Pickable the Character is holding","parameters":[]},{"authority":"server","name":"EnterVehicle","description":"Enters the Vehicle at Seat (0 - Driver)","parameters":[{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat","default":"0"}]},{"authority":"server","name":"GrabProp","description":"Gives a Prop to the Character","parameters":[{"type":"Prop","name":"prop"}]},{"authority":"both","name":"HideBone","description":"Hides a bone of this Character","description_long":"Hides a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","default":"","description":"Bone to hide"}]},{"authority":"both","name":"UnHideBone","description":"UnHide a bone of this Character","description_long":"UnHide a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","description":"Bone to unhide"}]},{"authority":"both","name":"IsBoneHidden","return":[{"type":"boolean","description":"if the bone is hidden"}],"description":"Gets if a bone is hidden","parameters":[{"type":"string","name":"bone_name","description":"Bone to check"}]},{"authority":"server","name":"Jump","description":"Triggers this Character to jump"},{"authority":"server","name":"LeaveVehicle","description":"Leaves the current Vehicle"},{"authority":"server","name":"LookAt","description":"AI: Tries to make this Character to look at Location","parameters":[{"type":"Vector","name":"location","description":"World location to look"}]},{"authority":"server","name":"MoveTo","description":"AI: Makes this Character to walk to the Location","description_long":"AI: Makes this Character to walk to the Location<br/><br/>Triggers event <a href=\'character#movecompleted\'>MoveCompleted</a>","parameters":[{"type":"Vector","name":"location"},{"type":"float","name":"acceptance_radius","default":"50"}]},{"authority":"server","name":"Follow","description":"AI: Makes this Character to follow another actor","description_long":"AI: Makes this Character to follow another actor<br/><br/>Triggers event <a href=\'character#movecompleted\'>MoveCompleted</a>","parameters":[{"type":"Actor","name":"actor","description":"Actor to follow"},{"type":"float","name":"acceptance_radius","default":"50","description":"Radius to consider success"},{"type":"boolean","name":"stop_on_succeed","default":"false","description":"Whether to stop when reaching the target"},{"type":"boolean","name":"stop_on_fail","default":"false","description":"Whether to stop when failed to reach the target"},{"type":"float","name":"update_rate","default":"0.25","description":"How often to recalculate the AI path"}]},{"authority":"server","name":"StopMovement","description":"AI: Stops the movement","description_long":"AI: Stops the movement<br/><br/>Triggers event [MoveCompleted](character#movecompleted)"},{"authority":"server","name":"PickUp","description":"Gives a Melee/Grenade/Weapon (Pickable) to the Character","parameters":[{"type":"Pickable","name":"pickable"}]},{"authority":"server","name":"PlayAnimation","description":"Plays an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"AnimationSlotType","name":"slot_type","default":"AnimationSlotType.FullBody"},{"type":"boolean","name":"loop_indefinitely","default":"false"},{"type":"float","name":"blend_in_time","default":"0.25"},{"type":"float","name":"blend_out_time","default":"0.25"},{"type":"float","name":"play_rate","default":"1.0"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group"}]},{"authority":"server","name":"StopAnimation","description":"Stops an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_asset"}]},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if existing, a SkeletalMesh from this Character given it\'s custom ID","parameters":[{"type":"string","name":"id"}]},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if existing, a StaticMesh from this Character given it\'s custom ID","parameters":[{"type":"string","name":"id"}]},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"RemoveAllSkeletalMeshesAttached","description":"Removes all SkeletalMeshes attached"},{"authority":"server","name":"Respawn","description":"Respawns the Character, fullying it\'s Health and moving it to it\'s Initial Location","parameters":[{"type":"Vector","name":"location","default":"initial location","description":"If not passed will use the initial location passed when the Character spawned"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"}]},{"authority":"server","name":"SetAnimationIdleWalkRunStanding","description":"Sets the Blend Space (2D) Animation for Standing","description_long":"Sets the Blend Space (2D) Animation for Standing<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"Animation","name":"blend_space_path"},{"type":"boolean","name":"enable_turn_in_place","default":"false"}]},{"authority":"server","name":"SetAnimationIdleWalkRunCrouching","description":"Sets the Blend Space (2D) Animation for Crouching<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"Animation","name":"blend_space_path"},{"type":"boolean","name":"enable_turn_in_place","default":"false"}]},{"authority":"server","name":"SetAnimationIdleWalkRunProning","description":"Sets the Blend Space (2D) Animation for Proning<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"Animation","name":"blend_space_path"}]},{"authority":"server","name":"SetAnimationsTransitionStandingCrouching","description":"Sets the Transition Animation between Standing and Crouching","parameters":[{"type":"Animation","name":"standing_to_crouching"},{"type":"Animation","name":"crouching_to_standing"}]},{"authority":"server","name":"SetAnimationsTransitionCrouchingProning","description":"Sets the Transition Animation between Crouching and Proning","parameters":[{"type":"Animation","name":"crouching_to_proning"},{"type":"Animation","name":"pronng_to_crouching"}]},{"authority":"server","name":"SetAccelerationSettings","description":"Sets the Movement Max Acceleration of this Character","parameters":[{"type":"integer","name":"walking","default":"768"},{"type":"integer","name":"parachuting","default":"512"},{"type":"integer","name":"skydiving","default":"768"},{"type":"integer","name":"falling","default":"128"},{"type":"integer","name":"swimming","default":"256"},{"type":"integer","name":"swimming_surface","default":"256"},{"type":"integer","name":"flying","default":"1024"}]},{"authority":"server","name":"SetBrakingSettings","description":"Sets the Movement Braking Settings of this Character","parameters":[{"type":"float","name":"ground_friction","default":"2"},{"type":"float","name":"braking_friction_factor","default":"2"},{"type":"integer","name":"braking_walking","default":"96"},{"type":"integer","name":"braking_flying","default":"3000"},{"type":"integer","name":"braking_swimming","default":"10"},{"type":"integer","name":"braking_falling","default":"0"}]},{"authority":"server","name":"SetCameraMode","description":"Sets the Camera Mode","description_long":"Sets the Camera Mode (i.e. Only TPS, FPS or if allow both)<br/><br/>Using FPSOnly CameraMode on AI will lock his body rotation (when using LookAt)","parameters":[{"type":"CameraMode","name":"camera_mode"}]},{"authority":"client","name":"SetCameraOffset","description":"Sets the Camera Offset (only affects TPS)","parameters":[{"type":"Vector","name":"camera_offset"}]},{"authority":"server","name":"SetCanCrouch","description":"Sets if this Character is allowed to Crouch and to Prone","parameters":[{"type":"boolean","name":"can_crouch"}]},{"authority":"server","name":"SetCanAim","description":"Sets if this Character is allowed to Aim","parameters":[{"type":"boolean","name":"can_aim"}]},{"authority":"server","name":"SetCanDrop","description":"Sets if this Character is allowed to Drop the Picked up item","parameters":[{"type":"boolean","name":"can_drop"}]},{"authority":"server","name":"SetCanJump","description":"Sets if this Character is allowed to Jump","parameters":[{"type":"boolean","name":"can_jump"}]},{"authority":"server","name":"SetCanDive","description":"Sets if this Character is allowed to Dive","parameters":[{"type":"boolean","name":"can_dive"}]},{"authority":"server","name":"SetCanSprint","description":"Sets if this Character is allowed to Sprint","parameters":[{"type":"boolean","name":"can_sprint"}]},{"authority":"server","name":"SetCanGrabProps","description":"Sets if this Character is allowed to Grab any Prop","parameters":[{"type":"boolean","name":"can_grab_props"}]},{"authority":"server","name":"SetCanPickupPickables","description":"Sets if this Character is allowed to Pick up any Pickable (Weapon, Grenade, Melee...)","parameters":[{"type":"boolean","name":"can_pickup"}]},{"authority":"server","name":"SetCanPunch","description":"Sets if this Character is allowed to Punch","parameters":[{"type":"boolean","name":"can_punch"}]},{"authority":"server","name":"SetCanDeployParachute","description":"Sets if this Character is allowed to deploy the Parachute","parameters":[{"type":"boolean","name":"can_deploy_parachute"}]},{"authority":"server","name":"SetCapsuleSize","description":"Sets this Character\'s Capsule size","description_long":"Sets this Character\'s Capsule size (will affect Camera location and Character\'s collision)","parameters":[{"type":"integer","name":"radius","description":"Default is 42"},{"type":"integer","name":"half_height","description":"Default is 96"}]},{"authority":"server","name":"SetDamageMultiplier","description":"Changes how much damage this character takes on specific bones","parameters":[{"type":"string","name":"bone_name"},{"type":"float","name":"multiplier"}]},{"authority":"server","name":"SetDeathSound","description":"Changes the Death sound when Character dies","parameters":[{"type":"string","name":"sound_asset"}]},{"authority":"server","name":"SetFallDamageTaken","description":"Set the Fall Damage multiplier taken when falling from High places","description_long":"Set the Fall Damage multiplier taken when falling from High places.<br/><br/>Setting to 0 will make the Character to do not take any damage","parameters":[{"type":"integer","name":"damage","description":"Default is 10"}]},{"authority":"server","name":"SetFlyingMode","description":"Sets the Flying Mode","parameters":[{"type":"boolean","name":"flying_mode"}]},{"authority":"server","name":"SetFOVMultiplier","description":"Sets the Field of View multiplier","parameters":[{"type":"float","name":"multiplier"}]},{"authority":"server","name":"SetHighFallingTime","description":"Sets time to transition to HighFalling state","description_long":"Sets time elapsed until automatically transition to HighFalling state (from SmallFalling) in seconds<br/><br/>Set it to -1 to never enter HighFalling time and consequently do not ragdoll when falling","parameters":[{"type":"float","name":"time","description":"Default is 1 second"}]},{"authority":"server","name":"SetGaitMode","description":"Sets the Gait Mode","parameters":[{"type":"GaitMode","name":"mode"}]},{"authority":"server","name":"SetGravityScale","description":"Changes the Gravity Scale","description_long":"Changes the Gravity Scale of this Character (can be negative)","parameters":[{"type":"float","name":"scale"}]},{"authority":"server","name":"SetHealth","description":"Sets the Health of this Character","description_long":"Sets the Health of this Character. You can only call it on alive characters (call Respawn first)","parameters":[{"type":"integer","name":"new_health"}]},{"authority":"server","name":"SetImpactDamageTaken","description":"Set the Impact Damage taken when being roamed by things","description_long":"Set the Impact Damage taken when being roamed by things.<br/><br/>Setting to 0 will make the Character to do not take damage or enter ragdoll mode","parameters":[{"type":"integer","name":"damage","description":"Default is 10"}]},{"authority":"server","name":"SetInvulnerable","description":"Sets if the Character can receive any damage","parameters":[{"type":"boolean","name":"is_invulnerable"}]},{"authority":"server","name":"SetJumpZVelocity","description":"Sets the velocity of the jump","parameters":[{"type":"integer","name":"velocity","description":"Default is 450"}]},{"authority":"server","name":"SetMaxHealth","description":"Sets the MaxHealth of this Character","parameters":[{"type":"integer","name":"new_max_health"}]},{"authority":"server","name":"SetMesh","description":"Changes the Character Mesh on the fly","parameters":[{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset"}]},{"authority":"both","name":"SetMorphTarget","description":"Set Morph Target with Name and Value","parameters":[{"type":"string","name":"name","description":"Morph Target Name"},{"type":"float","name":"value"}]},{"authority":"both","name":"GetMorphTarget","description":"Returns the value of a Morph Target","return":[{"type":"float","description":"value of the Morph Target"}],"parameters":[{"type":"string","name":"name","description":"Morph Target Name"}]},{"authority":"both","name":"ClearMorphTargets","description":"Clear all Morph Target that are set to this Mesh"},{"authority":"client","name":"GetAllMorphTargetNames","description":"Returns a table with all morph targets available","return":[{"type":"string[]","description":"table with all morph targets available"}]},{"authority":"both","name":"SetPhysicalAnimationSettings","description":"Applies the physical animation settings to the body given","parameters":[{"type":"string","name":"bone","description":"The body we will be driving"},{"type":"boolean","name":"include_self","description":"Whether to modify the given body"},{"type":"boolean","name":"is_local_simulation","description":"Whether the drive targets are in world space or local"},{"type":"float","name":"orientation_strength","default":"0","description":"The strength used to correct orientation error"},{"type":"float","name":"angular_velocity_strength","default":"0","description":"The strength used to correct angular velocity error"},{"type":"float","name":"position_strength","default":"0","description":"The strength used to correct linear position error. Only used for non-local simulation"},{"type":"float","name":"velocity_strength","default":"0","description":"The strength used to correct linear velocity error. Only used for non-local simulation"},{"type":"float","name":"max_linear_force","default":"0","description":"The max force used to correct linear errors"},{"type":"float","name":"max_angular_force","default":"0","description":"The max force used to correct angular errors"}]},{"authority":"both","name":"ResetPhysicalAnimationSettings","description":"Resets all Physical Animation settings"},{"authority":"server","name":"SetInputEnabled","description":"Enables/Disables Character\'s Input","parameters":[{"type":"boolean","name":"is_enabled"}]},{"authority":"server","name":"SetParachuteTexture","description":"Changes the Parachute Texture","parameters":[{"type":"ImagePath","name":"texture"}]},{"authority":"server","name":"SetPainSound","description":"Changes the Pain sound when Character takes damage","parameters":[{"type":"SoundPath","name":"sound_asset"}]},{"authority":"server","name":"SetPunchDamage","description":"Set the Punch Damage this Character will apply on others","parameters":[{"type":"integer","name":"damage","description":"Default is 15"}]},{"authority":"server","name":"SetRagdollMode","description":"Sets Character Ragdoll Mode","parameters":[{"type":"boolean","name":"ragdoll_enabled"}]},{"authority":"server","name":"SetSimulatePhysics","description":"Sets the Character Capsule to simulate physics","parameters":[{"type":"boolean","name":"simulate_physics"}]},{"authority":"server","name":"SetSpeedMultiplier","description":"Sets all speed multiplier","parameters":[{"type":"float","name":"multiplier","description":"1 is normal"}]},{"authority":"server","name":"SetStanceMode","description":"Sets the Stance Mode","parameters":[{"type":"StanceMode","name":"mode"}]},{"authority":"server","name":"SetTeam","description":"Sets a Team which will disable damaging same Team Members","parameters":[{"type":"integer","name":"team","description":"0 is neutral and default"}]},{"authority":"network-authority","name":"SetViewMode","description":"Sets the View Mode","parameters":[{"type":"ViewMode","name":"view_mode"}]},{"authority":"network-authority","name":"SetWeaponAimMode","description":"Sets the Weapon\'s Aim Mode","parameters":[{"type":"AimMode","name":"aim_mode"}]},{"authority":"server","name":"UnGrabProp","description":"UnGrabs/Drops the Prop the Character is holding"},{"authority":"both","name":"IsInRagdollMode","description":"Gets if Character is in ragdoll mode","return":[{"type":"boolean"}]},{"authority":"both","name":"IsInvulnerable","description":"Gets if is invulnerable","return":[{"type":"boolean"}]},{"authority":"both","name":"IsMovementEnabled","description":"Gets if has movement enabled","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCameraMode","description":"Gets the camera mode","return":[{"type":"CameraMode"}]},{"authority":"both","name":"GetCanDrop","description":"Gets if can drop","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanPunch","description":"Gets if can punch","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanAim","description":"Gets if can aim","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanCrouch","description":"Gets if can crouch","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanSprint","description":"Gets if can sprint","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanGrabProps","description":"Gets if can grab props","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanPickupPickables","description":"Gets if can pickup Pickables (Weapons, Melee, Grenade...)","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCapsuleSize","description":"Gets the Capsule Size","return":[{"type":"table","table_properties":[{"name":"Radius","type":"integer"},{"name":"HalfHeight","type":"integer"}]}]},{"authority":"client","name":"GetBoneTransform","description":"Gets a Bone Transform in world space given a bone name","return":[{"type":"table","table_properties":[{"name":"Location","type":"Vector"},{"name":"Rotation","type":"Rotator"}]}],"parameters":[{"name":"bone_name","type":"string"}]},{"authority":"both","name":"GetControlRotation","description":"Gets the Control Rotation","return":[{"type":"Rotator"}]},{"authority":"both","name":"GetDamageMultiplier","description":"Gets the Damage Multiplier of a bone","return":[{"type":"float","description":"the damage multiplier of the bone"}],"parameters":[{"name":"bone_name","type":"string"}]},{"authority":"both","name":"GetFallDamageTaken","description":"Gets the Fall Damage","return":[{"type":"integer"}]},{"authority":"both","name":"GetFallingMode","description":"Gets the FallingMode","return":[{"type":"FallingMode"}]},{"authority":"both","name":"GetFlyingMode","description":"Gets if it\'s in Flying mode","return":[{"type":"boolean"}]},{"authority":"both","name":"GetGaitMode","description":"Gets the GaitMode","return":[{"type":"GaitMode"}]},{"authority":"both","name":"GetGrabbedProp","description":"Gets the Grabbed Prop","return":[{"type":"Prop?"}]},{"authority":"both","name":"GetGravityScale","description":"Gets the gravity scale","return":[{"type":"float"}]},{"authority":"both","name":"GetHealth","description":"Gets the current health","return":[{"type":"integer"}]},{"authority":"both","name":"GetImpactDamageTaken","description":"Gets the impact damage taken","return":[{"type":"integer"}]},{"authority":"both","name":"GetJumpZVelocity","description":"Gets the Jump Z Velocity","return":[{"type":"integer"}]},{"authority":"both","name":"GetMaxHealth","description":"Gets the Max Health","return":[{"type":"integer"}]},{"authority":"both","name":"GetMesh","description":"Gets the Skeletal Mesh Asset","return":[{"type":"SkeletalMeshPath"}]},{"authority":"both","name":"GetMovingTo","description":"Gets the Moving To location","return":[{"type":"Vector","description":"the moving to location or Vector(0, 0, 0) if not moving"}]},{"authority":"both","name":"GetPicked","description":"Gets the Pickable if picking up","return":[{"type":"Pickable?"}]},{"authority":"both","name":"GetPlayer","description":"Gets the possessing Player","return":[{"type":"Player?"}]},{"authority":"both","name":"GetPunchDamage","description":"Gets the punch damage","return":[{"type":"integer"}]},{"authority":"both","name":"GetSpeedMultiplier","description":"Gets the speed multiplier","return":[{"type":"float"}]},{"authority":"both","name":"GetStanceMode","description":"Gets the Stance Mode","return":[{"type":"StanceMode"}]},{"authority":"both","name":"GetSwimmingMode","description":"Gets the Swimming Mode","return":[{"type":"SwimmingMode"}]},{"authority":"both","name":"GetTeam","description":"Gets the Team","return":[{"type":"integer"}]},{"authority":"both","name":"GetVehicle","description":"Gets the entered Vehicle","return":[{"type":"Vehicle?"}]},{"authority":"both","name":"GetViewMode","description":"Gets the View Mode","return":[{"type":"ViewMode"}]},{"authority":"both","name":"GetWeaponAimMode","description":"Gets the Weapon Aim Mode","return":[{"type":"AimMode"}]}],"events":[{"authority":"client","name":"AnimationBeginNotify","description":"When an Animation Montage Notify begins","arguments":[{"type":"Character","name":"self"},{"type":"string","name":"notify_name"}]},{"authority":"client","name":"AnimationEndNotify","description":"When an Animation Montage Notify ends","arguments":[{"type":"Character","name":"self"},{"type":"string","name":"notify_name"}]},{"name":"Attack","authority":"both","description":"Triggered when the Character effectively attacks with a Melee","arguments":[{"name":"self","type":"Character"},{"name":"melee","type":"Melee"}]},{"authority":"both","name":"Death","description":"When Character Dies","arguments":[{"type":"Character","name":"self"},{"type":"integer","name":"last_damage_taken"},{"type":"string","name":"last_bone_damaged"},{"type":"DamageType","name":"damage_type_reason"},{"type":"Vector","name":"hit_from_direction"},{"type":"Player?","name":"instigator"},{"type":"Actor?","name":"causer","description":"The object which caused the damage"}]},{"authority":"both","name":"Drop","description":"When Character drops the currently picked up Pickable","arguments":[{"type":"Character","name":"self"},{"type":"Pickable","name":"object"},{"type":"boolean","name":"triggered_by_player"}]},{"authority":"both","name":"EnterVehicle","description":"When Character enters a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat_index"}]},{"authority":"server","name":"AttemptEnterVehicle","description":"Triggered when a Character attempts to enter a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat_index"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"FallingModeChange","description":"Called when FallingMode changes","arguments":[{"type":"Character","name":"self"},{"type":"FallingMode","name":"old_state"},{"type":"FallingMode","name":"new_state"}]},{"authority":"both","name":"Fire","description":"When Character fires a Weapon","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"}]},{"authority":"both","name":"GaitModeChange","description":"Called when GaitMode changes","arguments":[{"type":"Character","name":"self"},{"type":"GaitMode","name":"old_state"},{"type":"GaitMode","name":"new_state"}]},{"authority":"both","name":"GrabProp","description":"When Character grabs up a Prop","arguments":[{"type":"Character","name":"self"},{"type":"Prop","name":"prop"}]},{"authority":"both","name":"HealthChange","description":"When Character has it\'s Health changed, or because took damage or manually set through scripting or respawning","arguments":[{"type":"Character","name":"self"},{"type":"integer","name":"old_health"},{"type":"integer","name":"new_health"}]},{"authority":"both","name":"Highlight","description":"When Character highlights/looks at a Prop or a Pickable","arguments":[{"type":"Character","name":"self"},{"type":"boolean","name":"is_highlighted","description":"Whether the object is being highlighted or not"},{"type":"Prop|Pickable","name":"object"}]},{"authority":"server","name":"Interact","description":"Triggered when a Character interacts with a Prop or Pickable","arguments":[{"type":"Character","name":"self"},{"type":"Prop|Pickable","name":"object"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"LeaveVehicle","description":"When Character leaves a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"}]},{"authority":"server","name":"AttemptLeaveVehicle","description":"Triggered when this Character attempts to leave a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"MoveComplete","description":"Called when AI reaches it\'s destination, or when it fails","arguments":[{"type":"Character","name":"self"},{"type":"boolean","name":"succeeded"}]},{"authority":"both","name":"PickUp","description":"When Character picks up anything","arguments":[{"type":"Character","name":"self"},{"type":"Pickable","name":"object"}]},{"authority":"both","name":"Possess","description":"When Character is possessed","arguments":[{"type":"Character","name":"self"},{"type":"Player","name":"possesser"}]},{"authority":"both","name":"Punch","description":"When Character punches","arguments":[{"type":"Character","name":"self"}]},{"authority":"both","name":"RagdollModeChange","description":"When Character enters or leaves ragdoll","arguments":[{"type":"Character","name":"self"},{"type":"boolean","name":"old_state"},{"type":"boolean","name":"new_state"}]},{"authority":"both","name":"AttemptReload","description":"Triggered when this Character attempts to reload","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"Reload","description":"When Character reloads a weapon","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"},{"type":"integer","name":"ammo_to_reload"}]},{"authority":"both","name":"Respawn","description":"When Character Respawns","arguments":[{"type":"Character","name":"self"}]},{"authority":"both","name":"StanceModeChange","description":"Called when StanceMode changes","arguments":[{"type":"Character","name":"self"},{"type":"StanceMode","name":"old_state"},{"type":"StanceMode","name":"new_state"}]},{"authority":"both","name":"SwimmingModeChange","description":"Called when Swimming Mode changes","arguments":[{"type":"Character","name":"self"},{"type":"SwimmingMode","name":"old_state"},{"type":"SwimmingMode","name":"new_state"}]},{"authority":"both","name":"TakeDamage","description":"Triggered when this Character takes damage","arguments":[{"type":"Character","name":"self"},{"type":"integer","name":"damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player","name":"instigator","description":"The player which caused the damage"},{"type":"any","name":"causer","description":"The object which caused the damage"}],"return":[{"type":"boolean","description":"Return <code>false</code> to cancel the damage (will still display animations, particles and apply impact forces)"}]},{"authority":"both","name":"UnGrabProp","description":"When Character drops a Prop","arguments":[{"type":"Character","name":"self"},{"type":"Prop","name":"prop"}]},{"authority":"both","name":"UnPossess","description":"When Character is unpossessed","arguments":[{"type":"Character","name":"self"},{"type":"Player","name":"old_possesser"}]},{"authority":"both","name":"ViewModeChange","description":"When Character changes it\'s View Mode","arguments":[{"type":"Character","name":"self"},{"type":"ViewMode","name":"old_state"},{"type":"ViewMode","name":"new_state"}]},{"authority":"both","name":"WeaponAimModeChange","description":"Called when Weapon Aim Mode changes","arguments":[{"type":"Character","name":"self"},{"type":"AimMode","name":"old_state"},{"type":"AimMode","name":"new_state"}]},{"authority":"both","name":"PullUse","description":"Triggered when a Character presses the use button for a Pickable (i.e. clicks left mouse button with this equipped)","arguments":[{"type":"Character","name":"self","description":"The Character that used it"},{"type":"Pickable","name":"pickable","description":"The Pickable which has just been used"}]},{"authority":"both","name":"ReleaseUse","description":"Triggered when a Character releases the use button for a Pickable (i.e. releases left mouse button with this equipped)","arguments":[{"type":"Character","name":"self","description":"The Character that stopped using it"},{"type":"Pickable","name":"pickable","description":"The Pickable which has just stopped being used"}]}]}'),ke=JSON.parse('{"name":"CharacterSimple","description":"CharacterSimple is a simpler Character implementation with basic Movement implementation. Aimed for custom NPCs or basic Pawns.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath|StaticMeshPath","name":"mesh"},{"type":"BlueprintPath","name":"custom_animation_blueprint","default":""},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"},{"type":"boolean","name":"gravity_enabled","default":"true"}]}],"functions":[{"authority":"authority","name":"PlayAnimation","description":"Plays an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"AnimationSlotType","name":"slot_type","default":"AnimationSlotType.FullBody"},{"type":"boolean","name":"loop_indefinitely","default":"false"},{"type":"float","name":"blend_in_time","default":"0.25"},{"type":"float","name":"blend_out_time","default":"0.25"},{"type":"float","name":"play_rate","default":"1.0"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group"}]},{"authority":"authority","name":"StopAnimation","description":"Stops an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_asset"}]},{"authority":"both","name":"AddSkeletalMeshAttached","description":"Spawns and Attaches a SkeletalMesh into this Character","description_long":"Spawns and Attaches a SkeletalMesh into this Character, the SkeletalMesh must have the same Skeletal used by the Character Mesh, and will follow all animations from it. Uses a custom ID to be used for removing it further.<br/><br/>For customizing the Materials specific of a SkeletalMeshAttached, please use the following syntax in the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset","default":""}]},{"authority":"both","name":"AddStaticMeshAttached","description":"Spawns and Attaches a StaticMesh into this Character","description_long":"Spawns and Attaches a StaticMesh into this Character in a Socket with relative Location and Rotation. Uses a custom ID to be used for removing it further<br/><br/>For customizing the Materials specific of a StaticMeshAttached, please use the following syntax as the <code>parameter_name</code> in the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":""},{"type":"string","name":"socket","default":""},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)"}]},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if existing, a SkeletalMesh from this Character given it\'s custom ID","parameters":[{"type":"string","name":"id"}]},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if existing, a StaticMesh from this Character given it\'s custom ID","parameters":[{"type":"string","name":"id"}]},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"RemoveAllSkeletalMeshesAttached","description":"Removes all SkeletalMeshes attached"},{"authority":"authority","name":"SetMesh","description":"Changes the Character Mesh on the fly","parameters":[{"type":"SkeletalMeshPath|StaticMeshPath","name":"mesh_asset"},{"type":"boolean","name":"adjust_capsule_size","description":"Auto adjust the capsule size based on the Mesh size"}]},{"authority":"both","name":"GetMesh","description":"Gets the Skeletal Mesh Asset","return":[{"type":"SkeletalMeshPath|StaticMeshPath"}]},{"authority":"both","name":"GetMovingTo","description":"Gets the Moving To location","return":[{"type":"Vector","description":"the moving to location or Vector(0, 0, 0) if not moving"}]},{"authority":"server","name":"MoveTo","description":"AI: Makes this Character to walk to the Location","description_long":"AI: Makes this Character to walk to the Location<br/><br/>Triggers event <a href=\'character#movecompleted\'>MoveCompleted</a>","parameters":[{"type":"Vector","name":"location"},{"type":"float","name":"acceptance_radius","default":"50"}]},{"authority":"server","name":"Follow","description":"AI: Makes this Character to follow another actor","description_long":"AI: Makes this Character to follow another actor<br/><br/>Triggers event <a href=\'character#movecompleted\'>MoveCompleted</a>","parameters":[{"type":"Actor","name":"actor","description":"Actor to follow"},{"type":"float","name":"acceptance_radius","default":"50","description":"Radius to consider success"},{"type":"boolean","name":"stop_on_succeed","default":"false","description":"Whether to stop when reaching the target"},{"type":"boolean","name":"stop_on_fail","default":"false","description":"Whether to stop when failed to reach the target"},{"type":"float","name":"update_rate","default":"0.25","description":"How often to recalculate the AI path"}]},{"authority":"server","name":"StopMovement","description":"AI: Stops the movement","description_long":"AI: Stops the movement<br/><br/>Triggers event [MoveCompleted](character#movecompleted)"},{"authority":"both","name":"GetPlayer","description":"Gets the possessing Player","return":[{"type":"Player?"}]},{"authority":"both","name":"GetControlRotation","description":"Gets the Control Rotation","return":[{"type":"Rotator"}]},{"authority":"both","name":"HideBone","description":"Hides a bone of this Character","description_long":"Hides a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","default":"","description":"Bone to hide"}]},{"authority":"both","name":"UnHideBone","description":"UnHide a bone of this Character","description_long":"UnHide a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","description":"Bone to unhide"}]},{"authority":"both","name":"IsBoneHidden","return":[{"type":"boolean","description":"if the bone is hidden"}],"description":"Gets if a bone is hidden","parameters":[{"type":"string","name":"bone_name","description":"Bone to check"}]},{"authority":"server","name":"Jump","description":"Triggers this Character to jump"},{"authority":"server","name":"SetJumpZVelocity","description":"Sets the velocity of the jump","parameters":[{"type":"integer","name":"velocity","description":"Default is 450"}]},{"authority":"server","name":"SetMaxAcceleration","description":"Sets the max acceleration","parameters":[{"type":"integer","name":"acceleration","description":"Default is 2048"}]},{"authority":"authority","name":"SetCapsuleSize","description":"Sets this Character\'s Capsule size","description_long":"Sets this Character\'s Capsule size (will affect Camera location and Character\'s collision)","parameters":[{"type":"integer","name":"radius","description":"Default is 42"},{"type":"integer","name":"half_height","description":"Default is 96"}]},{"authority":"server","name":"SetCanJump","description":"Sets if this Character is allowed to Jump","parameters":[{"type":"boolean","name":"can_jump"}]},{"authority":"server","name":"SetCanCrouch","description":"Sets if this Character is allowed to Crouch and to Prone","parameters":[{"type":"boolean","name":"can_crouch"}]},{"authority":"server","name":"SetBrakingSettings","description":"Sets the Movement Braking Settings of this Character","parameters":[{"type":"float","name":"ground_friction","default":"2"},{"type":"float","name":"braking_friction_factor","default":"2"},{"type":"integer","name":"braking_walking","default":"96"},{"type":"integer","name":"braking_flying","default":"3000"},{"type":"integer","name":"braking_swimming","default":"10"},{"type":"integer","name":"braking_falling","default":"0"}]},{"authority":"server","name":"SetSpringArmSettings","description":"Sets the Spring Arm Settings of this Character","parameters":[{"type":"Vector","name":"relative_location"},{"type":"float","name":"target_arm_length"},{"type":"Vector","name":"socket_offset"},{"type":"boolean","name":"enable_camera_lag"},{"type":"float","name":"camera_lag_speed"}]},{"authority":"server","name":"SetRotationSettings","description":"Sets the Rotation Settings of this Character","parameters":[{"type":"Rotator","name":"rotation_rate"},{"type":"boolean","name":"use_controller_desired_rotation"},{"type":"boolean","name":"orient_rotation_to_movement"}]},{"authority":"server","name":"SetPawnSettings","description":"Sets the Pawn Settings of this Character","parameters":[{"type":"boolean","name":"use_controller_rotation_pitch"},{"type":"boolean","name":"use_controller_rotation_yaw"},{"type":"boolean","name":"use_controller_rotation_roll"}]},{"authority":"server","name":"SetAnimationBlueprint","description":"Sets the Animation Blueprint of this Character","parameters":[{"type":"BlueprintPath","name":"custom_animation_blueprint"}]}],"events":[{"authority":"both","name":"Possess","description":"When Character is possessed","arguments":[{"type":"CharacterSimple","name":"self"},{"type":"Player","name":"possesser"}]},{"authority":"both","name":"UnPossess","description":"When Character is unpossessed","arguments":[{"type":"CharacterSimple","name":"self"},{"type":"Player","name":"old_possesser"}]}]}'),Ce=JSON.parse('{"name":"Database","description":"The Database entity provides programmers a way to access SQL databases easily through scripting.","authority":"server","constructors":[{"description":"Default Constructor","parameters":[{"type":"DatabaseEngine","name":"database_engine","description":"Database Engine"},{"type":"string","name":"connection_string","description":"<a href=\'#connection-string\'>Connection String</a> used to create and connect to the database"},{"type":"integer","name":"pool_size","default":"10","description":"Size of the connection pool when calling several queries simultaneously"}]}],"functions":[{"name":"Close","authority":"server","description":"Closes the Database"},{"name":"ExecuteAsync","authority":"server","description":"Execute a query asyncronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"function","name":"callback","default":"nil","description":"Callback in the format (rows_affected, error)"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}]},{"name":"Execute","authority":"server","description":"Execute a query syncronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}],"return":[{"type":"integer","description":"affected rows"},{"type":"string","description":"error (if any)"}]},{"name":"SelectAsync","authority":"server","description":"Execute a select query asyncronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"function","name":"callback","default":"nil","description":"Callback in the format (rows: table[], error: string?)"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}]},{"name":"Select","authority":"server","description":"Selects a query syncronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}],"return":[{"type":"table[]","description":"rows fetched"},{"type":"string","description":"error (if any)"}]}]}'),Te=JSON.parse('{"name":"Decal","description":"Decals are Materials that are projected onto meshes in your level, including Static Meshes and Skeletal Meshes.","authority":"client","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"MaterialPath","name":"material_asset","description":"Material Asset"},{"type":"Vector","name":"size","default":"Vector(128, 256, 256)","description":"Size of the Decal"},{"type":"float","name":"lifespan","default":"60","description":"Time until automatically destroyed in seconds"},{"type":"float","name":"fade_screen_size","default":"0.01","description":"Size percentage in screen to fade out"}]}]}'),Ae=JSON.parse('{"name":"File","description":"A File represents an entry to a system file.","authority":"server","constructors":[{"description":"Default Constructor","parameters":[{"type":"string","name":"file_path","description":"Path relative to server executable"},{"type":"boolean","name":"truncate","default":"false","description":"Whether or not to clear the file upon opening it"}]}],"functions":[{"name":"Close","authority":"server","description":"Closes the file and destroys the entity"},{"name":"Flush","authority":"server","description":"Flushes content to the file"},{"return":[{"type":"boolean","description":"if is EOF"}],"authority":"server","name":"IsEOF","description":"Checks if the file status is End of File"},{"return":[{"type":"boolean","description":"if status is Bad"}],"authority":"server","name":"IsBad","description":"Checks if the file status is Bad"},{"return":[{"type":"boolean","description":"if status is Good"}],"authority":"server","name":"IsGood","description":"Checks if the file status is Good"},{"return":[{"type":"boolean","description":"if last operation failed"}],"authority":"server","name":"HasFailed","description":"Checks if the last operation has Failed"},{"return":[{"type":"string","description":"file data"}],"authority":"server","name":"Read","description":"Reads characters from the File and returns it. Also moves the file pointer to the latest read position. Pass 0 to read the whole file","parameters":[{"type":"integer","name":"length","default":"0","description":"Length to be read from file"}]},{"authority":"server","name":"ReadAsync","description":"Reads characters from the File asynchronously.","parameters":[{"type":"integer","name":"length","description":"Length to be read from file"},{"type":"function","name":"callback","description":"Callback with the file read"}]},{"return":[{"type":"string","description":"file line data"}],"authority":"server","name":"ReadLine","description":"Reads and returns the next file line"},{"return":[{"type":"table","description":"parsed table"}],"authority":"server","name":"ReadJSON","description":"Reads the whole file as a JSON and returns it."},{"authority":"server","name":"ReadJSONAsync","description":"Reads the whole file as a JSON and returns it asynchronously.","parameters":[{"type":"function","name":"callback","description":"Callback with the file read"}]},{"name":"Seek","authority":"server","description":"Sets the file pointer to a specific position","parameters":[{"type":"integer","name":"position","description":"Position to offset the file pointer"}]},{"return":[{"type":"integer","description":"file size"}],"authority":"server","name":"Size","description":"Returns the size of the file"},{"name":"Skip","authority":"server","description":"Skips n (amount) positions from the current file pointer position","parameters":[{"type":"integer","name":"amount","description":"Amount to offset the file pointer"}]},{"return":[{"type":"integer","description":"current file pointer position"}],"authority":"server","name":"Tell","description":"Returns the current file pointer position"},{"name":"Write","authority":"server","description":"Writes the Data at the current position of the file","parameters":[{"type":"string","name":"data","description":"Data to write to the file"}]}],"static_functions":[{"type":"integer","name":"Time","return":[{"type":"integer","description":"the last update time in unix time"}],"description":"Returns when a file was last modified in Unix time","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to file"}]},{"type":"boolean","name":"CreateDirectory","return":[{"type":"boolean","description":"if succeeded"}],"description":"Creates a Directory (for every folder passed)","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to folder"}]},{"name":"Remove","return":[{"type":"integer","description":"amount of files deleted"}],"description":"Deletes a folder or file","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to file or folder"}]},{"name":"Exists","return":[{"type":"boolean","description":"if exists"}],"description":"Verifies if a entry exists in the file system","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to file or folder"}]},{"name":"IsDirectory","return":[{"type":"boolean","description":"if is a directory"}],"description":"Checks if a path is a directory","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to folder"}]},{"name":"IsRegularFile","return":[{"type":"boolean","description":"if is a regular file"}],"description":"Checks if a path is a file","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to filey"}]}]}'),Pe=JSON.parse('{"name":"Grenade","description":"Grenades are Pickables which Characters can grab and throw. It explodes after X seconds after thrown, causing damage around.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":"nanos-world::SM_Grenade_G67"},{"type":"ParticlePath","name":"explosion_particles","default":"nanos-world::P_Grenade_Special"},{"type":"SoundPath","name":"explosion_sound","default":"nanos-world::A_Explosion_Large"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"},{"type":"boolean","name":"gravity_enabled","default":"true"}]}],"functions":[{"authority":"server","name":"Explode","description":"Forces this grenade to Explode"},{"authority":"server","name":"SetDamage","description":"Sets Damage parameters of this Grenade","parameters":[{"type":"integer","name":"base_damage","default":"90","description":"Max damage when inner radius"},{"type":"integer","name":"minimum_damage","default":"0","description":"Min damage when outer radius"},{"type":"integer","name":"damage_inner_radius","default":"200","description":"Radius which damage will be 100%"},{"type":"integer","name":"damage_outer_radius","default":"1000","description":"Radius which damage will be interpoled through falloff"},{"type":"float","name":"damage_falloff","default":"1","description":"Lerp function between Max and Min damage"}]},{"authority":"server","name":"SetTimeToExplode","description":"Set Time until Explosion after thrown","parameters":[{"type":"float","name":"time","description":"Time in seconds"}]},{"authority":"server","name":"SetThrowForce","description":"Set Impulse applied when throwing","parameters":[{"type":"integer","name":"force"}]},{"authority":"both","name":"GetBaseDamage","description":"Damage at Inner Radius","return":[{"type":"float"}]},{"authority":"both","name":"GetDamageFalloff","description":"Radius which BaseDamage will apply proportionally","return":[{"type":"float"}]},{"authority":"both","name":"GetDamageInnerRadius","description":"Radius which MinimumDamage will apply","return":[{"type":"float"}]},{"authority":"both","name":"GetDamageOuterRadius","description":"Radius which BaseDamage will apply","return":[{"type":"float"}]},{"authority":"both","name":"GetMinimumDamage","description":"Damage at Outer Radius","return":[{"type":"float"}]},{"authority":"both","name":"GetTimeToExplode","description":"Time until Explosion","return":[{"type":"float"}]},{"authority":"both","name":"GetThrowForce","description":"Impulse applied when throwing","return":[{"type":"float"}]}],"events":[{"name":"Explode","authority":"both","description":"Triggered when the grenade has exploded","arguments":[{"name":"self","type":"Grenade","description":"The grenade which exploded"}]},{"name":"Throw","authority":"both","description":"Triggered when the grenade has been thrown","arguments":[{"name":"self","type":"Grenade","description":"The grenade which exploded"},{"name":"handler","type":"Character","description":"The Character which has thrown it"}]}]}'),Me=JSON.parse('{"name":"Light","description":"A Light represents a Lighting source.","authority":"both","inheritance":["Entity","Actor"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)","description":"Relevant only for Rect and Spot LightTypes"},{"type":"Color","name":"color","default":"Color(1, 1, 1)"},{"type":"LightType","name":"light_type","default":"LightType.Point"},{"type":"float","name":"intensity","default":"30"},{"type":"float","name":"attenuation_radius","default":"250"},{"type":"float","name":"cone_angle","default":"44","description":"Relevant only for Spot LightType"},{"type":"float","name":"inner_cone_angle_percent","default":"0","description":"Inner Cone Angle Percent (Relevant only for Spot LightType) (0-1)"},{"type":"float","name":"max_daw_distance","default":"5000","description":"Max Draw Distance (Good for performance) - 0 for infinite"},{"type":"boolean","name":"use_inverse_squared_falloff","default":"true","description":"Whether to use physically based inverse squared distance falloff, where Attenuation Radius is only clamping the light\'s contribution. (Spot and Point types only)"},{"type":"boolean","name":"cast_shadows","default":"true"},{"type":"boolean","name":"visible","default":"true"}]}],"functions":[{"name":"SetColor","description":"Sets the light color","authority":"both","parameters":[{"type":"Color","name":"color","description":"The light color"}]},{"name":"SetTextureLightProfile","description":"Sets the light Texture Profile","authority":"both","parameters":[{"type":"LightProfile","name":"light_profile","description":"The Light Profile to use"}]},{"name":"SetCastShadows","authority":"both","parameters":[{"type":"boolean","name":"is_shadows_enabled"}]},{"name":"SetIntensity","authority":"both","parameters":[{"type":"float","name":"intensity"}]},{"name":"SetAttenuationRadius","authority":"both","parameters":[{"type":"float","name":"attenuation_radius"}]},{"name":"GetCastShadows","authority":"both","return":[{"type":"boolean"}]},{"name":"GetIntensity","authority":"both","return":[{"type":"float"}]},{"name":"GetAttenuationRadius","authority":"both","return":[{"type":"float"}]},{"name":"GetColor","authority":"both","return":[{"type":"Color"}]}]}'),Re=JSON.parse('{"name":"Melee","description":"A Melee represents an Entity which can be Pickable by a Character and can be used to melee attack, Charactes can hold it with hands with pre-defined handling modes.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"StaticMeshPath","name":"asset","default":""},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"HandlingMode","name":"handling_mode","default":"HandlingMode.Torch"},{"type":"MaterialPath","name":"crosshair_material","default":""},{"type":"boolean","name":"can_use","default":"true"}]}],"functions":[{"authority":"server","name":"AddAnimationCharacterUse","description":"Sets an Animation when attacking","description_long":"Sets an Animation when attacking<br/><br/>You can add more than one animation, which will be selected randomly when attacking","parameters":[{"type":"AnimationPath","name":"asset_path","description":"The Animation used when attacking"},{"type":"float","name":"play_rate","description":"The Animation Play Rate"},{"type":"AnimationSlotType","name":"slot_Type","description":"Whether to play it on upper body or full body"}]},{"authority":"server","name":"ClearAnimationsCharacterUse","description":"Clears the Character Attack Animation list"},{"authority":"both","name":"SetImpactSound","description":"Sets the Sound when hitting something","description_long":"Sets the Sound when hitting something<br/><br/>Note: Surfaces <b>Water</b> and <b>Flesh</b> already have default sounds and must be explicitly set to override","parameters":[{"type":"SurfaceType","name":"surface_type","description":"The surface to apply the sound. Use <code>SurfaceType.Default</code> to be the default to all hits"},{"type":"SoundPath","name":"asset_path","description":"The Sound used when attacking"},{"type":"float","name":"volume"},{"type":"float","name":"pitch"}]},{"authority":"both","name":"SetSoundUse","description":"Sets the Sound when attacking","parameters":[{"type":"SoundPath","name":"asset_path","description":"The Sound used when attacking"}]},{"authority":"server","name":"SetBaseDamage","description":"Sets the Base Damage","parameters":[{"type":"integer","name":"damage","default":"","description":"The Base Damage value"}]},{"authority":"server","name":"SetDamageSettings","description":"Sets the times when to start applying damage and when to end","description_long":"Sets the times when to start applying damage and when to end. During this time the collision of the melee will be enabled and the damage will be applied if it hits something","parameters":[{"type":"float","name":"damage_start_time","description":"The initial time to start applying damage"},{"type":"float","name":"damage_duration_time","description":"The duration time to stop applying damage"}]},{"authority":"both","name":"SetCooldown","description":"Sets the cooldown between attacking","parameters":[{"type":"float","name":"cooldown"}]},{"authority":"both","name":"GetAnimationsCharacterUse","description":"Gets the Animations when Character uses it","return":[{"type":"AnimationPath[]"}]},{"authority":"both","name":"GetSoundUse","description":"Gets the Sound when Character uses it","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetBaseDamage","description":"Gets the Base Damage","return":[{"type":"integer"}]},{"authority":"both","name":"GetCooldown","description":"Gets the Cooldown between usages","return":[{"type":"float"}]}],"events":[{"name":"Attack","authority":"both","description":"Triggered when the Character effectively attacks with this Melee","arguments":[{"name":"self","type":"Melee"},{"name":"handler","type":"Character"}]}]}'),De=JSON.parse('{"name":"Particle","description":"Class to spawn Particle Systems used to create effects in the world.","authority":"both","inheritance":["Entity","Actor"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"ParticlePath","name":"asset"},{"type":"boolean","name":"auto_destroy","default":"true"},{"type":"boolean","name":"auto_activate","default":"true"}]}],"functions":[{"name":"Activate","description":"Activates the Emitter","authority":"both","parameters":[{"type":"boolean","name":"should_reset","description":"If should reset"}]},{"name":"Deactivate","description":"Deactivate the Emitter","authority":"both"},{"name":"SetParameterFloat","description":"Sets a float parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"float","name":"value","description":"The float value"}]},{"name":"SetParameterInt","description":"Sets an integer parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"integer","name":"value","description":"The int value"}]},{"name":"SetParameterBool","description":"Sets a boolean parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"boolean","name":"value","description":"The boolean value"}]},{"name":"SetParameterVector","description":"Sets a Vector parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Vector","name":"value","description":"The Vector value"}]},{"name":"SetParameterColor","description":"Sets a Color parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Color","name":"value","description":"The Color value"}]},{"name":"SetParameterMaterial","description":"Sets a Material parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"MaterialPath","name":"value","description":"The Material value"}]},{"name":"SetParameterMaterialFromTexture","description":"Sets a Material from a Texture parameter in this Particle System","description_long":"This will create a Material and set this Texture as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"ImagePath","name":"value","description":"The Texture value"}]},{"name":"SetParameterMaterialFromCanvas","description":"Sets a Material from a Canvas parameter in this Particle System","description_long":"This will create a Material and set this Canvas as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Canvas","name":"value","description":"The Canvas value"}]},{"name":"SetParameterMaterialFromWebUI","description":"Sets a Material from a Canvas parameter in this Particle System","description_long":"This will create a Material and set this WebUI as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"WebUI","name":"value","description":"The WebUI value"}]}]}'),Ve=JSON.parse('{"name":"Player","description":"Players are Entities that represents the individual behind the mouse and keyboard. Players are spawned automatically when connected to the server.","inheritance":["Entity"],"functions":[{"authority":"server","name":"Ban","description":"Bans the player from the server","parameters":[{"name":"reason","type":"string"}]},{"authority":"server","name":"Connect","description":"Redirects the player to another server","parameters":[{"name":"IP","type":"string"},{"name":"password","type":"string","default":"","description":"Server password"}]},{"authority":"server","name":"Kick","description":"Kicks the player from the server","parameters":[{"name":"reason","type":"string"}]},{"authority":"server","name":"Possess","description":"Makes a Player to possess and control a Character","parameters":[{"name":"new_character","type":"Character"},{"name":"blend_time","type":"float","default":"0"},{"name":"exp","type":"float","default":"0"}]},{"authority":"both","name":"StartCameraFade","description":"Does a camera fade to/from a solid color","description_long":"Does a camera fade to/from a solid color. Animates automatically","parameters":[{"name":"from_alpha","type":"float","description":"Alpha at which to begin the fade. Range [0..1], where 0 is fully transparent and 1 is fully opaque solid color."},{"name":"to_alpha","type":"float","description":"Alpha at which to finish the fade."},{"name":"duration","type":"float","description":"How long the fade should take, in seconds."},{"name":"to_color","type":"Color","description":"Color to fade to/from."},{"name":"should_fade_audio","type":"boolean","description":"True to fade audio volume along with the alpha of the solid color.","deafult":false},{"name":"hold_when_finished","type":"boolean","description":"True for fade to hold at the ToAlpha until explicitly stopped (e.g. with StopCameraFade)","deafult":false}]},{"authority":"both","name":"SetManualCameraFade","description":"Turns on camera fading at the given opacity","description_long":"Turns on camera fading at the given opacity. Does not auto-animate, allowing user to animate themselves. Call StopCameraFade to turn fading back off.","parameters":[{"name":"in_fade_amount","type":"float","description":"Range [0..1], where 0 is fully transparent and 1 is fully opaque solid color."},{"name":"color","type":"Color"},{"name":"in_fade_audio","type":"boolean"}]},{"authority":"both","name":"StopCameraFade","description":"Stops camera fading."},{"authority":"both","name":"SetCameraLocation","description":"Sets the Player\'s Camera Location (only works if not possessing any Character)","parameters":[{"name":"location","type":"Vector"}]},{"authority":"both","name":"SetCameraRotation","description":"Sets the Player\'s Camera Rotation","parameters":[{"name":"rotation","type":"Rotator"}]},{"authority":"both","name":"TranslateCameraTo","description":"Smoothly moves the Player\'s Camera Location (only works if not possessing any Character)","parameters":[{"name":"location","type":"Vector"},{"name":"time","type":"float"},{"name":"exp","type":"float","default":"0","description":"Exponential used to smooth interp, use 0 for linear movement"}]},{"authority":"both","name":"RotateCameraTo","description":"Smoothly moves the Player\'s Camera Rotation","parameters":[{"name":"rotation","type":"Rotator"},{"name":"time","type":"float"},{"name":"exp","type":"float","default":"0","description":"Exponential used to smooth interp, use 0 for linear movement"}]},{"authority":"both","name":"SetCameraSocketOffset","description":"Sets the Player\'s Camera Socket Offset (Spring Arm Offset)","parameters":[{"name":"socket_offset","type":"Vector"}]},{"authority":"both","name":"SetCameraArmLength","description":"Sets the Player\'s Camera Arm Length (Spring Arm length)","parameters":[{"name":"length","type":"float"}]},{"authority":"both","name":"AttachCameraTo","description":"Attaches the Player`s Camera to an Actor","parameters":[{"name":"actor","type":"Actor"},{"name":"socket_offset","type":"Vector"},{"name":"blend_speed","type":"float"}]},{"authority":"both","name":"ResetCamera","description":"Resets the Camera to default state (Unspectate and Detaches)"},{"authority":"both","name":"Spectate","description":"Spectates other Player","parameters":[{"name":"player","type":"Player"},{"name":"blend_speed","type":"float","default":"0"}]},{"authority":"server","name":"SetName","description":"Sets the player\'s name","parameters":[{"name":"new_name","type":"string"}]},{"authority":"server","name":"SetVOIPChannel","description":"Sets the VOIP Channel of this Player (will only communicate with other players in the same channel)","parameters":[{"name":"channel","type":"integer"}]},{"authority":"both","name":"SetVOIPSetting","description":"Sets the VOIP Settings of this Player","parameters":[{"name":"setting","type":"VOIPSetting"}]},{"authority":"both","name":"SetVOIPVolume","description":"Sets the VOIP Volume of this Player","parameters":[{"name":"volume","type":"float"}]},{"authority":"server","name":"UnPossess","description":"Release the Player from the Character"},{"authority":"both","name":"GetSteamID","return":[{"type":"string"}]},{"authority":"both","name":"GetAccountID","return":[{"type":"string"}]},{"authority":"both","name":"GetAccountName","return":[{"type":"string"}]},{"authority":"both","name":"GetAccountIconURL","description":"Return a URL which can be used through WebUI to display the Player\'s Steam Avatar (64x64)","return":[{"type":"string"}]},{"authority":"client","name":"GetCameraLocation","return":[{"type":"Vector"}]},{"authority":"client","name":"GetCameraArmLength","parameters":[{"name":"return_target","type":"boolean","default":"false","description":"Whether to return the current (false) or target (true) value"}],"return":[{"type":"float"}]},{"authority":"client","name":"GetCameraRotation","return":[{"type":"Rotator"}]},{"authority":"both","name":"GetControlledCharacter","return":[{"type":"Character?"}]},{"authority":"server","name":"GetIP","return":[{"type":"string"}]},{"name":"GetDimension","description":"Gets this Player\'s dimension","authority":"both","return":[{"type":"integer"}]},{"authority":"both","name":"GetName","return":[{"type":"string"}]},{"authority":"both","name":"GetPing","return":[{"type":"integer"}]},{"authority":"both","name":"GetVOIPChannel","return":[{"type":"integer"}]},{"authority":"both","name":"GetValue","parameters":[{"name":"key","type":"string"},{"name":"fallback","type":"any"}],"return":[{"type":"any"}]},{"authority":"client","name":"IsHost","return":[{"type":"boolean"}]},{"authority":"client","name":"IsLocalPlayer","return":[{"type":"boolean"}]},{"authority":"both","name":"GetVOIPSetting","return":[{"type":"VOIPSetting"}]}],"events":[{"authority":"server","name":"DimensionChange","description":"Triggered when a Player changes it\'s dimension","arguments":[{"name":"self","type":"Player"},{"name":"old_dimension","type":"integer"},{"name":"new_dimension","type":"integer"}]},{"authority":"both","name":"Possess","description":"Trigerred when Player starts controlling a Character","arguments":[{"name":"self","type":"Player"},{"name":"character","type":"Character"}]},{"authority":"server","name":"Ready","description":"Triggered when Player is ready (the client fully joined, loaded the map and all entities and is ready to play)","arguments":[{"name":"self","type":"Player"}]},{"authority":"both","name":"UnPossess","description":"A Character was released from the Player","arguments":[{"name":"self","type":"Player"},{"name":"character","type":"Character"}]},{"authority":"both","name":"VOIP","description":"When a Player starts/ends using VOIP","arguments":[{"name":"self","type":"Player"},{"name":"is_talking","type":"boolean"}]}]}'),Ge=JSON.parse('{"name":"Prop","description":"A Prop represents a Dynamic Mesh which can be spawned in the world, can be grabbed around by characters and have physics.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto","description":"Setting <code>CollisionType.Auto</code> will make it automatically switch between <b>Normal</b> and <b>IgnoreOnlyPawn</b> if they are smaller than radius <b>40</b> units."},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"GrabMode","name":"grab_mode","default":"GrabMode.Auto","description":"Whether or not the Prop can be grabbed"},{"type":"CCDMode","name":"ccd_mode","default":"CCDMode.Auto","description":"Whether or not the Prop should have CCD enabled (disabling it may cause Props passing through objects if it\'s kinda small). It\'s smart to force it disabled on \'visual only\' props."}]}],"functions":[{"name":"SetGrabMode","description":"Sets ability to Characters to Grab this Prop","parameters":[{"type":"GrabMode","name":"grab_mode","description":"If the Prop will be able to be grabbable or not. Set to Auto to automatically define based on Prop\'s size."}],"authority":"server"},{"name":"SetPhysicsDamping","description":"Sets the Physics damping of this Prop","parameters":[{"type":"float","name":"linear_damping","description":""},{"type":"float","name":"angular_damping","description":""}],"authority":"authority"},{"name":"SetMesh","description":"Changes the mesh in runtime","return":[{"type":"StaticMeshPath","description":"asset"}],"authority":"authority"},{"name":"GetMesh","description":"Gets the Asset name","return":[{"type":"string","description":"asset name"}],"authority":"both"},{"name":"GetHandler","description":"Gets the Character (if existing) which is holding this","return":[{"type":"Character?","description":"the character that holds the object"}],"authority":"both"},{"name":"GetGrabMode","description":"Gets ability to Grab this Prop","return":[{"type":"GrabMode"}],"authority":"both"}],"events":[{"name":"Grab","authority":"both","description":"Triggered when Character grabs a Prop","arguments":[{"type":"Prop","name":"self","description":"The prop which was Grabbed"},{"type":"Character","name":"character","description":"The new Grabber"}]},{"name":"Hit","authority":"both","description":"Triggered when this Prop hits something","arguments":[{"type":"Prop","name":"self","description":"The prop which has been hit"},{"type":"float","name":"impact_force","description":"The intensity of the Hit normalized by the Prop\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction it hits"},{"type":"Vector","name":"impact_location","description":"The world 3D location of the impact"},{"type":"Vector","name":"velocity","description":"The Prop velocity at the moment it hits"}]},{"name":"Interact","authority":"server","description":"When a Character interacts with this Prop (i.e. try to Grab it)","arguments":[{"type":"Prop","name":"self","description":"the object that undergoes an interaction"},{"type":"Character","name":"character","description":"the character who interacts with the object"}],"return":[{"type":"boolean","description":"Return false to prevent the interaction (i.e. prevent being grabbed)"}]},{"name":"TakeDamage","authority":"server","description":"When Prop takes Damage","arguments":[{"type":"Prop","name":"self","description":"the object that takes the damage"},{"type":"integer","name":"damage","description":"amount of damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player?","name":"instigator","description":"The player which caused the damage"},{"type":"Actor?","name":"causer","description":"The object which caused the damage"}]},{"name":"UnGrab","authority":"both","description":"Triggered when this Prop is ungrabbed","arguments":[{"type":"Prop","name":"self","description":"The prop which has been ungrabbed"},{"type":"Character","name":"character","description":"The old Grabber"}]}]}'),xe=JSON.parse('{"name":"SceneCapture","description":"Scene Capture is an Actor which captures a fully dynamic image of the scene into a Texture. It captures the scene from its view frustum, stores that view as an image, which is then used within a Material.","authority":"client","inheritance":["Entity","Actor"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)","description":"Location"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)","description":"Rotation"},{"type":"integer","name":"width","default":"128","description":"Width of the generated Texture"},{"type":"integer","name":"height","default":"128","description":"Height of the generated Texture"},{"type":"float","name":"render_rate","default":"0.033","description":"Render Rate (how frequent is the capture)"},{"type":"float","name":"view_distance","default":"5000","description":"Maximum distance of capturing"},{"type":"float","name":"fov_angle","default":"90","description":"FOV"},{"type":"boolean","name":"enable_distance_optimization","default":"true","description":"Reduces the rendering frequency if the entities with this Material are too far"},{"type":"boolean","name":"force_always_rendering","default":"false","description":"Forces it always re-rendering even if no Material using it is on screen"}]}],"functions":[{"name":"AddRenderActor","description":"Adds an Actor to the Render Only list","description_long":"Adds an Actor to the Render Only list<br/><br/>Note: adding one actor to this will make the SceneCapture only to render those Actors.","authority":"client","parameters":[{"type":"Actor","name":"actor"}]},{"name":"RemoveRenderActor","description":"Removes an Actor from the Render Only list","authority":"client","parameters":[{"type":"Actor","name":"actor"}]},{"name":"ClearRenderActors","description":"Clears the Render Only list","authority":"client"},{"name":"SetFreeze","description":"Stops or Restore Capturing","authority":"client","parameters":[{"type":"boolean","name":"freeze"}]},{"name":"SetFOVAngle","description":"Sets the FOV","authority":"client","parameters":[{"type":"float","name":"angle"}]},{"name":"SetShowFlag","description":"Enables/Disables rendering features from being captured","description_long":"Enables/Disables rendering features from being captured<br/>A complete list of available flags can be found in the <a href=\'https://docs.unrealengine.com/5.0/en-US/API/Runtime/Engine/FEngineShowFlags/\'>Official Unreal Documentation</a>","authority":"client","parameters":[{"type":"string","name":"flag"},{"type":"boolean","name":"enable"}]},{"name":"Resize","description":"Change the output Texture size\\nNote: too high texture will make the capture slower and will affect game performance","authority":"client","parameters":[{"type":"integer","name":"width"},{"type":"integer","name":"height"}]},{"name":"SetRenderRate","description":"Set how frequent is the capture\\nNote: Setting to 0 will make it capture every frame","authority":"client","parameters":[{"type":"float","name":"render_rate"}]},{"name":"SetDistanceOptimizationEnabled","description":"Enables or not the rendering frequency optimization if the entities with this Material are too far","authority":"client","parameters":[{"type":"boolean","name":"enabled"}]},{"name":"SetForceAlwaysRendering","description":"Forces it always re-rendering even if no Material using it is on screen","authority":"client","parameters":[{"type":"boolean","name":"enabled"}]}]}'),Ee=JSON.parse('{"name":"StaticMesh","description":"A StaticMesh entity represents a Mesh which can be spawned in the world, can\'t move and is more optimized for using in decorating the world.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"static_mesh_asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"}]}],"functions":[{"name":"SetMesh","description":"Changes the mesh in runtime","return":[{"type":"StaticMeshPath","description":"asset"}],"authority":"authority"},{"name":"GetMesh","description":"Gets the Asset path mesh used","return":[{"type":"StaticMeshPath","description":"asset path"}],"authority":"both"},{"name":"IsFromLevel","description":"Gets if this StaticMesh is from the Level","return":[{"type":"boolean","description":"if this StaticMesh is from the level"}],"authority":"client"}]}'),Ie=JSON.parse('{"name":"Sound","description":"Class for playing in-game 2D and 3D sounds.","authority":"client","inheritance":["Entity","Actor"],"constructors":[{"description":"Normal","parameters":[{"type":"Vector","name":"location","description":"Only used if 3D sound"},{"type":"SoundPath","name":"asset","description":"The Sound Asset to load"},{"type":"boolean","name":"is_2D_sound","default":"false","description":"Whether to spawn it as 2D or 3D"},{"type":"boolean","name":"auto_destroy","default":"true","description":"Whether to destroy after finished playing"},{"type":"SoundType","name":"sound_type","default":"SoundType.SFX","description":"Used to apply user\'s volume settings"},{"type":"float","name":"volume","default":"1"},{"type":"float","name":"pitch","default":"1"},{"type":"float","name":"inner_radius","default":"400","description":"Only used if 3D sound"},{"type":"float","name":"falloff_distance","default":"3600","description":"Only used if 3D sound"},{"type":"AttenuationFunction","name":"attenuation_function","default":"Linear","description":"Only used if 3D sound"},{"type":"boolean","name":"keep_playig_when_silent","default":"false","description":"Only used if 3D sound - Use with caution, it may cause performance issues!"},{"type":"SoundLoopMode","name":"loop_mode","default":"Default","description":"Whether should force sound to loop"}]}],"functions":[{"name":"FadeIn","authority":"client","description":"Plays the sound with a fade effect","parameters":[{"type":"float","name":"fade_in_duration"},{"type":"float","name":"fade_volume_level","default":"1"},{"type":"float","name":"start_time","default":"0"}]},{"name":"FadeOut","authority":"client","description":"Stops the sound with a fade effect","parameters":[{"type":"float","name":"fade_out_duration"},{"type":"float","name":"fade_volume_level","default":"0"},{"type":"boolean","name":"destroy_after_fadeout","default":"false"}]},{"name":"Play","authority":"client","description":"Starts the sound","parameters":[{"type":"float","name":"start_time","default":"0"}]},{"name":"SetFalloffDistance","authority":"client","description":"If a 3D Sound, sets the distance which the sound is inaudible","parameters":[{"type":"float","name":"falloff_distance"}]},{"name":"SetInnerRadius","authority":"client","description":"If a 3D Sound, sets the distance within the volume is 100%","parameters":[{"type":"float","name":"inner_radius"}]},{"name":"SetLowPassFilter","authority":"client","description":"Sets lowpass filter frequency. Sets 0 to disable it.","parameters":[{"type":"float","name":"frequency"}]},{"name":"SetPaused","authority":"client","description":"Pauses the sound","parameters":[{"type":"boolean","name":"pause","default":"true"}]},{"name":"SetPitch","authority":"client","description":"Sets the Sound\'s pitch","parameters":[{"type":"float","name":"new_pitch"}]},{"name":"SetVolume","authority":"client","description":"Sets the Sound\'s volume","parameters":[{"type":"float","name":"new_volume","description":"0-1"}]},{"name":"Stop","authority":"client","description":"Stops the sound"},{"name":"StopDelayed","authority":"client","description":"Stops the sound after the provided delay","parameters":[{"type":"float","name":"delay"}]},{"return":[{"type":"boolean"}],"name":"Is2D","authority":"client","description":"Gets if the sound is 2D"},{"return":[{"type":"boolean"}],"name":"IsPlaying","authority":"client","description":"Gets if the sound is playing"},{"return":[{"type":"float"}],"name":"GetDuration","authority":"client","description":"Gets the duration of the Sound"},{"return":[{"type":"float"}],"name":"GetPitch","authority":"client"},{"return":[{"type":"float"}],"name":"GetVolume","authority":"client"},{"return":[{"type":"float"}],"name":"GetLowPassFilter","authority":"client"},{"return":[{"type":"float"}],"name":"GetInnerRadius","authority":"client"},{"return":[{"type":"float"}],"name":"GetFalloffDistance","authority":"client"},{"return":[{"type":"float"}],"name":"GetSoundType","authority":"client"}]}'),Ne=JSON.parse('{"name":"TextRender","description":"A Text Render class is useful for spawning Texts in 3D world, you can even attach it to other entities.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"string","name":"text"},{"type":"Vector","name":"scale","default":"Vector(1, 1, 1)"},{"type":"Color","name":"color","default":"Color(1, 1, 1, 1)"},{"type":"FontType","name":"font_type","default":"FontType.Roboto"},{"type":"TextRenderAlignCamera","name":"align_camera","default":"TextRenderAlignCamera.Unaligned"}]}],"functions":[{"name":"SetColor","authority":"both","description":"Sets the Color","description_long":"Sets the Color (Internally this will call the <code>SetMaterialColorParameter(\\"Tint\\", color)</code> method)","parameters":[{"name":"color","type":"Color"}]},{"name":"SetFont","authority":"both","description":"Sets the Font","parameters":[{"name":"font_type","type":"FontType"}]},{"name":"SetFreeze","authority":"both","description":"Freeze mesh rebuild, to avoid unnecessary mesh rebuilds when setting a few properties together","parameters":[{"name":"freeze","type":"boolean"}]},{"name":"SetGlyphSettings","authority":"both","description":"Sets the Glyph representation settings to generate the 3D Mesh for this text render","parameters":[{"type":"float","name":"extrude","default":"0"},{"type":"float","name":"level","default":"0"},{"type":"TextRenderBevelType","name":"bevel_type","default":"TextRenderBevelType.Convex"},{"type":"integer","name":"bevel_segments","default":"8"},{"type":"boolean","name":"outline","default":"false"}]},{"name":"SetMaxSize","authority":"both","description":"Sets the Max Size of the TextRender, optionally scaling it proportionally","parameters":[{"type":"integer","name":"max_width","default":"0"},{"type":"integer","name":"max_height","default":"0"},{"type":"boolean","name":"scale_proportionally","default":"true"}]},{"name":"SetText","authority":"both","description":"Sets the Text","parameters":[{"name":"text","type":"string"}]},{"name":"SetTextSettings","authority":"both","description":"Sets the Text & Font settings for this text render","parameters":[{"type":"float","name":"kerning","default":"0"},{"type":"float","name":"line_spacing","default":"0"},{"type":"float","name":"word_spacing","default":"0"},{"type":"TextRenderHorizontalAlignment","name":"horizontal_alignment","default":"TextRenderHorizontalAlignment.Center"},{"type":"TextRenderVerticalAlignment","name":"vertical_alignment","default":"0TextRenderVerticalAlignment.Center"}]}]}'),We=JSON.parse('{"name":"Trigger","description":"A Trigger class is a utility class to trigger events when any Entity enters an Area.","authority":"server","inheritance":["Entity","Actor"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"Vector","name":"extent","description":"Size of the Trigger. If using Sphere, only the X is used"},{"type":"TriggerType","name":"trigger_type","default":"TriggerType.Sphere"},{"type":"boolean","name":"is_visible","default":"false","description":"Useful for debugging"},{"type":"Color","name":"color","default":"Color.RED","description":"Color to paint the Trigger bounds - if Visible"},{"type":"string[]","name":"overlap_only_classes","default":"{}","description":"Filter Trigger to only overlap specific Classes. Leave it empty for all Classes"}]}],"functions":[{"name":"ForceOverlapChecking","description":"Forces a Overlap checking to occur, will immediately trigger overlaps","authority":"server"},{"name":"SetExtent","description":"Sets the extent size of this trigger (sphere triggers will use only the .X component for radius)","authority":"server","parameters":[{"type":"Vector","name":"extent"}]},{"name":"SetOverlapOnlyClasses","description":"Sets the filter to Trigger to only overlap specific Classes. Leave it empty for all Classes","authority":"server","parameters":[{"type":"string[]","name":"overlap_only_classes"}]}],"events":[{"name":"BeginOverlap","description":"Triggered when something overlaps this Trigger","arguments":[{"type":"Trigger","name":"self","description":"The Trigger entity"},{"type":"Actor","name":"entity","description":"Any Actor which overlaps"}]},{"name":"EndOverlap","description":"Triggered when something leaves this Trigger","arguments":[{"type":"Trigger","name":"self","description":"The Trigger entity"},{"type":"Actor","name":"entity","description":"Any Actor which left the Trigger"}]}]}'),Le=JSON.parse('{"name":"Vehicle","description":"Vehicles are wheeled entities which Characters can possesses and drive.","authority":"server","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"boolean","name":"auto_create_physics","default":"true","description":"Can be disabled to improve performance when setting several configs. Must call <code>RecreatePhysics()</code> after all"},{"type":"boolean","name":"auto_unflip","default":"true","description":"Auto rotates the vehicle if flipped"},{"type":"SoundPath","name":"engine_sound","default":"nanos-world::A_Vehicle_Engine_01"},{"type":"SoundPath","name":"horn_sound","default":"nanos-world::A_Vehicle_Horn_Toyota"},{"type":"SoundPath","name":"brake_sound","default":"nanos-world::A_Vehicle_Brake"},{"type":"SoundPath","name":"engine_start_sound","default":"nanos-world::A_Car_Engine_Start"},{"type":"SoundPath","name":"vehicle_door_sound","default":"nanos-world::A_Vehicle_Door"},{"type":"boolean","name":"auto_start_engine","default":"true"},{"type":"BlueprintPath","name":"custom_animation_blueprint","default":""}]}],"functions":[{"authority":"both","name":"AddStaticMeshAttached","description":"Spawns and Attaches a StaticMesh into this Vehicle","description_long":"Spawns and Attaches a StaticMesh into this Vehicle in a Socket with relative Location and Rotation. Uses a custom ID to be used for removing it further<br/><br/>For customizing the Materials specific of a StaticMeshAttached, please use the following syntax as the <code>parameter_name</code> in the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":""},{"type":"string","name":"socket","default":""},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)"}]},{"authority":"server","name":"Horn","description":"Starts or stops the vehicles horn","parameters":[{"type":"boolean","name":"enable_horn"}]},{"authority":"server","name":"RecreatePhysics","description":"Recreate the Vehicle Physics","description_long":"Call this after configuring the vehicle if passed <code>auto_create_physics</code> to constructor"},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if existing, a StaticMesh from this Vehicle given it\'s custom ID","parameters":[{"type":"string","name":"id"}]},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"server","name":"SetAutoStartEngine","description":"Sets if the Engine auto starts when the driver enters the Vehicle","parameters":[{"type":"boolean","name":"auto_start"}]},{"authority":"server","name":"SetEngineStarted","description":"Sets if the Engine is turned off/on","description_long":"Sets if the Engine is turned off/on (this will affect Lights, Sounds and ability to Throttle)","parameters":[{"type":"boolean","name":"started"}]},{"authority":"server","name":"SetDifferentialSetup","description":"Configures the Vehicle Differential","parameters":[{"type":"DifferentialType","name":"differential_type","default":"LimitedSlip_4W"},{"type":"float","name":"front_rear_split","default":"0.45","description":"Ratio of torque split between front and rear<br/>bigger than 0.5 means more to front<br/>lower than 0.5 means more to rear (works only with 4W type)"},{"type":"float","name":"front_left_right_split","default":"0.5","description":"Ratio of torque split between front-left and front-right<br/>bigger than 0.5 means more to front-left<br/>lower than 0.5 means more to front-right (works only with 4W and LimitedSlip_FrontDrive)"},{"type":"float","name":"rear_left_right_split","default":"0.5","description":"Ratio of torque split between rear-left and rear-right<br/>bigger than 0.5 means more to rear-left<br/>lower than 0.5 means more to rear-right (works only with 4W and LimitedSlip_RearDrive)"},{"type":"float","name":"center_bias","default":"1.3","description":"Maximum allowed ratio of average front wheel rotation speed and rear wheel rotation speeds Acceptable range: 1 .. infinite (works only with LimitedSlip_4W)"},{"type":"float","name":"front_bias","default":"1.3","description":"Maximum allowed ratio of front-left and front-right wheel rotation speeds Acceptable range: 1 .. infinite (works only with LimitedSlip_4W, LimitedSlip_FrontDrive)"},{"type":"float","name":"rear_bias","default":"1.3","description":"Maximum allowed ratio of rear-left and rear-right wheel rotation speeds Acceptable range: 1 .. infinite (works only with LimitedSlip_4W, LimitedSlip_FrontDrive)"}]},{"authority":"server","name":"SetEngineSetup","description":"Configures the Vehicle Engine (Torque, RPM, Braking)","parameters":[{"type":"integer","name":"max_torque","default":"700","description":"Max Engine Torque (Nm) is multiplied by TorqueCurve"},{"type":"integer","name":"max_rpm","default":"5700","description":"Maximum revolutions per minute of the engine"},{"type":"integer","name":"idle_rpm","default":"1200","description":"Idle RMP of engine then in neutral/stationary"},{"type":"float","name":"brake_effect","default":"0.05","description":"Braking effect from engine, when throttle released"},{"type":"integer","name":"rev_up_moi","default":"5","description":"Affects how fast the engine RPM speed up"},{"type":"integer","name":"rev_down_rate","default":"600","description":"Affects how fast the engine RPM slows down"}]},{"authority":"server","name":"SetAerodynamicsSetup","description":"Configures the Vehicle Aerodynamics Settings","parameters":[{"type":"integer","name":"mass","default":"1500","description":"Mass of the vehicle chassis"},{"type":"float","name":"drag_coefficient","default":"0.3","description":"Force resisting forward motion at speed"},{"type":"integer","name":"vehicle_chassis_width","default":"180","description":"Chassis width used for drag force computation (cm)"},{"type":"integer","name":"vehicle_chassis_height","default":"140","description":"Chassis height used for drag force computation (cm)"},{"type":"float","name":"vehicle_downforce_coefficient","default":"0.3","description":"Force pressing vehicle into ground at speed"},{"type":"Vector","name":"center_of_mass_override","default":"Vector(0, 0, 50)","description":"Overrides the center of mass. Good for curves stabilization. Ideally the Z should be the same as the wheels radius"}]},{"authority":"server","name":"SetTransmissionSetup","description":"Configures the Vehicle Transmission","parameters":[{"type":"float","name":"transmission_final_ratio","default":"3.08","description":"The final gear ratio multiplies the transmission gear ratios"},{"type":"integer","name":"transmission_change_up_rpm","default":"4500","description":"Engine Revs at which gear up change ocurrs"},{"type":"integer","name":"transmission_change_down_rpm","default":"2000","description":"Engine Revs at which gear down change ocurrs"},{"type":"float","name":"transmission_gear_change_time","default":"0.4","description":"Time it takes to switch gears (seconds)"},{"type":"float","name":"transmission_efficiency","default":"0.94","description":"Mechanical frictional losses mean transmission might operate at 0.94 (94% efficiency)"}]},{"authority":"server","name":"SetWheel","description":"Configures a Vehicle Wheel","description_long":"Wheels can be updated in runtime by calling SetWheel again, you can for example change the suspension high or disable a wheel totally by toggling affected_by_engine off or setting radius to 0.","parameters":[{"type":"integer","name":"index","description":"Index of the wheel (0-N). Set it in ASC order"},{"type":"string","name":"bone_name","description":"Name of the bone to attach this wheel to"},{"type":"integer","name":"radius","default":"32","description":"Radius of the wheel"},{"type":"integer","name":"width","default":"20","description":"Width of the wheel"},{"type":"integer","name":"max_steer_angle","default":"50","description":"Steer angle in degrees for this wheel"},{"type":"Vector","name":"offset","default":"Vector(0, 0, 0)","description":"If bone_name is specified, offset the wheel from the bone\'s location. Otherwise this offsets the wheel from the vehicle\'s origin"},{"type":"boolean","name":"is_affected_by_engine","default":"true","description":"Whether engine should power this wheel"},{"type":"boolean","name":"is_affected_by_brake","default":"true","description":"Whether brake should affect this wheel"},{"type":"boolean","name":"is_affected_by_handbrake","default":"true","description":"Whether handbrake should affect this wheel"},{"type":"boolean","name":"has_abs_enabled","default":"false","description":"Advanced Braking System Enabled"},{"type":"boolean","name":"has_traction_control_enabled","default":"false","description":"Straight Line Traction Control Enabled"},{"type":"integer","name":"max_brake_torque","default":"1500","description":"Max brake torque for this wheel (Nm)"},{"type":"integer","name":"max_handbrake_torque","default":"3000","description":"Max handbrake brake torque for this wheel (Nm). A handbrake should have a stronger brake torque than the brake"},{"type":"integer","name":"cornering_stiffness","default":"1000","description":"Tyre Cornering Ability"},{"type":"float","name":"side_slip_modifier","default":"1.0","description":"Wheel Lateral Skid Grip Loss, lower number less grip on skid"},{"type":"float","name":"friction_force_multiplier","default":"2.0","description":"Friction Force Multiplier"},{"type":"float","name":"slip_threshold","default":"20.0","description":"Wheel Longitudinal Slip Threshold"},{"type":"float","name":"skid_threshold","default":"20.0","description":"Wheel Lateral Skid Threshold"},{"type":"float","name":"suspension_spring_rate","default":"250.0","description":"Spring Force (N/m)"},{"type":"float","name":"suspension_spring_preload","default":"50.0","description":"Spring Preload (N/m)"},{"type":"float","name":"suspension_max_raise","default":"10.0","description":"How far the wheel can go above the resting position"},{"type":"float","name":"suspension_max_drop","default":"10.0","description":"How far the wheel can drop below the resting position"},{"type":"float","name":"suspension_smoothing","default":"0.0","description":"Smooth suspension [0-off, 10-max] - Warning might cause momentary visual inter-penetration of the wheel against objects/terrain"},{"type":"float","name":"suspension_damping_ratio","default":"0.5","description":"Suspension damping, larger value causes the suspension to come to rest faster [range 0 to 1]"},{"type":"float","name":"suspension_wheel_load_ratio","default":"0.5","description":"Amount wheel load effects wheel friction. <br/> - At 0 wheel friction is completely independent of the loading on the wheel (This is artificial as it always assumes even balance between all wheels) <br/> - At 1 wheel friction is based on the force pressing wheel into the ground. This is more realistic. <br/> - Lower value cures lift off over-steer, generally makes vehicle easier to handle under extreme motions."},{"type":"Vector","name":"suspension_axis","default":"Vector(0, 0, -1)","description":"Local body direction in which where suspension forces are applied (typically along -Z-axis)"},{"type":"Vector","name":"suspension_force_offset","default":"Vector(0, 0, 0)","description":"Vertical offset from where suspension forces are applied (along Z-axis)"}]},{"authority":"server","name":"SetDoor","description":"Adds a Door to the Vehicle","description_long":"Adds a Door at offset_location from root which will pose the Character at seat_location with seat_rotation rotation.","parameters":[{"type":"integer","name":"seat_index"},{"type":"Vector","name":"offset_location"},{"type":"Vector","name":"seat_location"},{"type":"Rotator","name":"seat_rotation"},{"type":"integer","name":"trigger_radius"},{"type":"integer","name":"leave_lateral_offset","description":"It\'s where the Character will be ejected when leaving it (e.g. -150 for left door or 150 for right door)"}]},{"authority":"server","name":"SetSteeringWheelSetup","description":"Configures where the Steering Wheel is located","description_long":"Configures where the Steering Wheel is located, so Characters can grab it procedurally properly","parameters":[{"type":"Vector","name":"location"},{"type":"integer","name":"radius"}]},{"authority":"server","name":"SetHeadlightsSetup","description":"Configures the Headlights Offset and Color.","parameters":[{"type":"Vector","name":"location"},{"type":"Color","name":"color","default":"Color(1, 0.86, 0.5)"}]},{"authority":"server","name":"SetTaillightsSetup","description":"Configures the Taillights Offset.","parameters":[{"type":"Vector","name":"location"}]},{"authority":"both","name":"PlayAnimation","description":"Plays an Animation on this Vehicle","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"string","name":"slot_name","default":"DefaultSlot"},{"type":"boolean","name":"loop_indefinitely","default":"false","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"blend_in_time","default":"0.25","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"blend_out_time","default":"0.25","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"play_rate","default":"1.0","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group. This parameter is only used if the Vehicle has an Animation Blueprint"}]},{"authority":"both","name":"GetMesh","description":"Gets the Asset name","return":[{"type":"VehiclePath","description":"asset path"}]},{"authority":"client","name":"GetBoneTransform","description":"Gets a Bone Transform in world space given a bone name","return":[{"type":"table","table_properties":[{"name":"Location","type":"Vector"},{"name":"Rotation","type":"Rotator"}]}],"parameters":[{"name":"bone_name","type":"string"}]},{"authority":"both","name":"GetPassenger","description":"Gets a passenger from a seat","parameters":[{"type":"integer","name":"seat"}],"return":[{"type":"Character","description":"or nil if no passenger in seat"}]},{"authority":"both","name":"GetPassengers","description":"Gets all passengers","return":[{"type":"Character[]"}]},{"authority":"client","name":"GetRPM","description":"Gets the current RPM","return":[{"type":"integer"}]},{"authority":"client","name":"GetGear","description":"Gets the current Gear","return":[{"type":"integer"}]}],"events":[{"name":"Horn","description":"Triggered when Vehicle honks","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"boolean","name":"is_honking"}]},{"name":"Hit","description":"Triggered when Vehicle hits something","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"integer","name":"impact_force","description":"The intensity of the Hit normalized by the Vehicle\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction it hits"},{"type":"Vector","name":"impact_location","description":"The world 3D location of the impact"},{"type":"Vector","name":"velocity","description":"The Vehicle velocity at the moment it hits"}]},{"name":"CharacterEnter","description":"Triggered when a Character fully enters the Vehicle","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"},{"type":"integer","name":"seat","description":"The seat index"}]},{"name":"CharacterLeave","description":"Triggered when a Character fully leaves the Vehicle","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"}]},{"name":"CharacterAttemptEnter","description":"Triggered when a Character attempts to enter the Vehicle","authority":"server","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"},{"type":"integer","name":"seat","description":"The seat index"}],"return":[{"type":"boolean","description":"Return false to prevent it"}]},{"name":"CharacterAttemptLeave","description":"Triggered when a Character attempts to leave the Vehicle","authority":"server","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"}],"return":[{"type":"boolean","description":"Return false to prevent it"}]},{"name":"TakeDamage","authority":"server","description":"Triggered when this Vehicle takes damage","arguments":[{"type":"Vehicle","name":"self"},{"type":"integer","name":"damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player","name":"instigator","description":"The player which caused the damage"},{"type":"any","name":"causer","description":"The object which caused the damage"}],"return":[{"type":"boolean","description":"Return <code>false</code> to cancel the damage (will still display animations, particles and apply impact forces)"}]}]}'),Be=JSON.parse('{"name":"Weapon","description":"Weapons are entities with firing, reloading and aiming functionalities.<br/><br/>They are fully customizable, all pieces of the weapon can be changed with immense possibility of creation.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"description":"Default Constructor","parameters":[{"name":"location","type":"Vector"},{"name":"rotation","type":"Rotator"},{"name":"asset","type":"SkeletalMeshPath"},{"name":"collision_type","type":"CollisionType","default":"CollisionType.Normal"},{"name":"gravity_enabled","type":"boolean","default":"true"}]}],"functions":[{"authority":"server","name":"Reload","description":"Forces this Weapon to reload","description_long":"Forces this Weapon to reload (only if being handled by a Character)"},{"authority":"server","name":"SetAmmoBag","description":"Sets this Weapon\'s Ammo in the Bag","parameters":[{"name":"new_ammo","type":"integer"}]},{"authority":"server","name":"SetAmmoClip","description":"Sets this Weapon\'s Ammo in the Clip","parameters":[{"name":"new_ammo","type":"integer"}]},{"authority":"server","name":"SetAmmoSettings","description":"Aux for setting and configuring ammo","parameters":[{"name":"ammo_clip","type":"integer"},{"name":"ammo_bag","type":"integer"},{"name":"ammo_to_reload","type":"integer","default":"ammo_clip"},{"name":"clip_capacity","type":"integer","default":"ammo_clip"}]},{"authority":"server","name":"SetAnimationFire","description":"Animation played by the Weapon when Firing","parameters":[{"name":"animation_asset_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}]},{"authority":"server","name":"SetAnimationCharacterFire","description":"Animation played by the Character when Firing","parameters":[{"name":"animation_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}]},{"authority":"server","name":"SetAnimationReload","description":"Animation played by the Character when Reloading","parameters":[{"name":"animation_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}]},{"authority":"both","name":"GetAnimationReload","description":"Gets the reload animation","return":[{"type":"AnimationPath"}]},{"authority":"server","name":"SetAutoReload","description":"If the Character will reload automatically when ammo empties","description_long":"If the Character will reload automatically when ammo empties. Default is true","parameters":[{"name":"auto_reload","type":"boolean"}]},{"authority":"server","name":"SetBulletColor","description":"Set the Bullet Color","description_long":"Set the Bullet Color<br/><br/>Only has effect if using Bullet Trail particle P_Bullet_Trail or if you particle has the Color parameter","parameters":[{"name":"color","type":"Color"}]},{"authority":"server","name":"SetAutoReload","description":"Sets if the Weapon auto reloads when ammo empties","parameters":[{"name":"auto_reload","type":"boolean"}]},{"authority":"server","name":"SetBulletSettings","description":"Aux for setting and configuring the Bullet","parameters":[{"name":"bullet_count","type":"integer","description":"1 for common weapons<br/>> 1 for shotguns"},{"name":"bullet_max_distance","type":"integer"},{"name":"bullet_velocity","type":"integer","description":"Visuals only"},{"name":"bullet_color","type":"Color"}]},{"authority":"server","name":"SetCadence","description":"Speed of shots","parameters":[{"name":"cadence","type":"float","description":"1 shot at each <code>cadence</code> second"}]},{"authority":"server","name":"SetClipCapacity","description":"Capacity of the Weapon\'s clip","parameters":[{"name":"clip","type":"integer"}]},{"authority":"server","name":"SetDamage","description":"Set the Base Weapon\'s Damage","description_long":"Base Weapon\'s Damage<br/><br/>This will be multiplied by multiplier factors when hitting specific bones","parameters":[{"name":"damage","type":"integer"}]},{"authority":"server","name":"SetHandlingMode","description":"Sets how the Character grabs this Weapon","parameters":[{"name":"mode","type":"HandlingMode"}]},{"authority":"server","name":"SetLeftHandTransform","description":"Left Hand Offset","parameters":[{"name":"location","type":"Vector"},{"name":"rotation","type":"Rotator"}]},{"authority":"server","name":"SetMagazineMesh","description":"Set the mesh used when the Character reloads the weapon","description_long":"Set the mesh used when the Character reloads the weapon.<br/><br/>Will drop this Mesh as an animation effect.","parameters":[{"name":"static_mesh_asset_path","type":"StaticMeshPath"},{"name":"magazine_mesh_hide_bone","type":"string","default":"b_gun_mag","description":"Weapon bone to hide when reloading it"}]},{"authority":"both","name":"PlayAnimation","description":"Plays an Animation on this Weapon","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"string","name":"slot_name","default":"DefaultSlot"},{"type":"boolean","name":"loop_indefinitely","default":"false","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"blend_in_time","default":"0.25","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"blend_out_time","default":"0.25","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"play_rate","default":"1.0","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group. This parameter is only used if the Weapon has an Animation Blueprint"}]},{"authority":"server","name":"SetParticlesBulletTrail","description":"Particle of the Bullet flying","parameters":[{"name":"particle_asset_path","type":"ParticlePath"}]},{"authority":"server","name":"SetParticlesBarrel","description":"Particle of the Fire Blast in the muzzle","parameters":[{"name":"particle_asset_path","type":"ParticlePath"}]},{"authority":"server","name":"SetParticlesShells","description":"Particle of the empty bullet flying from the weapon when shooting","parameters":[{"name":"particle_asset_path","type":"ParticlePath"}]},{"authority":"server","name":"SetRightHandOffset","description":"Set the offset of Right Hand","description_long":"Set the Offset of Right Hand. To position relative to the camera.","parameters":[{"name":"offset","type":"Vector"}]},{"authority":"server","name":"SetSightFOVMultiplier","description":"The FOV multiplier when ADS","parameters":[{"name":"multiplier","type":"float"}]},{"authority":"server","name":"SetSightTransform","description":"Offset applied to align player\'s head to weapon\'s sight and rotation applied on the weapon when ADS","parameters":[{"name":"location","type":"Vector"},{"name":"rotation","type":"Rotator"}]},{"authority":"server","name":"SetSoundDry","description":"Sound when weapon has not bullet and try to shoot","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundLoad","description":"Sound when Loading a magazine","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundUnload","description":"Sound when Unloading a magazine","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundZooming","description":"Sound when Zooming","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundFire","description":"Sound when Shooting","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundAim","description":"Sound when Aiming","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundFireLastBullets","description":"Sound when firing with only having X remaining bullets in the magazine","description_long":"Sound when firing with only having X remaining bullets in the magazine, useful for last shot \'ping\' or sound when low on bullets","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"remaining_bullets_count","type":"integer","default":"1","description":"The amount of remaining bullet to start playing this sound"}]},{"authority":"server","name":"SetSpread","description":"Base Weapon\'s Spread","parameters":[{"name":"spread","type":"float","description":"the higher the less precision - recommended value: 20"}]},{"authority":"server","name":"SetRecoil","description":"Base Weapon\'s Recoil","parameters":[{"name":"recoil","type":"float","description":"0 means no Recoil, default is 1"}]},{"authority":"server","name":"SetUsageSettings","description":"Sets if the Weapon can hold to keep firing and if it needs to release to fire","parameters":[{"name":"can_hold_use","type":"boolean"},{"name":"hold_release_use","type":"boolean"}]},{"authority":"server","name":"SetWallbangSettings","description":"Sets how the bullet will pass through walls","parameters":[{"name":"max_distance","type":"integer","description":"Max distance to pass through another wall"},{"name":"damage_multiplier","type":"float","description":"Damage given if wallbangged"}]},{"authority":"both","name":"GetAmmoBag","description":"Gets this Weapon\'s Ammo Bag","return":[{"type":"integer"}]},{"authority":"both","name":"GetAmmoClip","description":"Gets this Weapon\'s Ammo Clip","return":[{"type":"integer"}]},{"authority":"both","name":"GetAmmoToReload","return":[{"type":"integer"}]},{"authority":"both","name":"GetHandlingMode","return":[{"type":"HandlingMode"}]},{"authority":"both","name":"GetAnimationCharacterFire","return":[{"type":"AnimationPath"}]},{"authority":"both","name":"GetAnimationFire","return":[{"type":"AnimationPath"}]},{"authority":"both","name":"GetMagazineMesh","return":[{"type":"StaticMeshPath"}]},{"authority":"both","name":"GetParticlesBulletTrail","return":[{"type":"ParticlePath"}]},{"authority":"both","name":"GetParticlesShells","return":[{"type":"ParticlePath"}]},{"authority":"both","name":"GetSoundDry","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetSoundLoad","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetSoundUnload","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetSoundZooming","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetSoundAim","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetSoundFire","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetCanHoldUse","return":[{"type":"boolean"}]},{"authority":"both","name":"GetHoldReleaseUse","return":[{"type":"boolean"}]},{"authority":"client","name":"GetBoneTransform","description":"Gets a Bone Transform in world space given a bone name","return":[{"type":"table","table_properties":[{"name":"Location","type":"Vector"},{"name":"Rotation","type":"Rotator"}]}],"parameters":[{"name":"bone_name","type":"string"}]},{"authority":"both","name":"GetBulletCount","return":[{"type":"integer"}]},{"authority":"both","name":"GetBulletColor","return":[{"type":"Color"}]},{"authority":"both","name":"GetCadence","return":[{"type":"float"}]},{"authority":"both","name":"GetClipCapacity","return":[{"type":"integer"}]},{"authority":"both","name":"GetDamage","return":[{"type":"integer"}]},{"authority":"both","name":"GetRightHandOffset","return":[{"type":"Vector"}]},{"authority":"both","name":"GetLeftHandLocation","return":[{"type":"Vector"}]},{"authority":"both","name":"GetLeftHandRotation","return":[{"type":"Rotator"}]},{"authority":"both","name":"GetSightLocation","return":[{"type":"Vector"}]},{"authority":"both","name":"GetSightRotation","return":[{"type":"Rotator"}]},{"authority":"both","name":"GetSightFOVMultiplier","return":[{"type":"float"}]},{"authority":"both","name":"GetSpread","return":[{"type":"float"}]},{"authority":"both","name":"GetRecoil","return":[{"type":"float"}]}],"events":[{"authority":"both","name":"Fire","description":"Triggered when Weapon fires (this will be triggered for each shot)","arguments":[{"name":"self","type":"Weapon"},{"name":"shooter","type":"Character"}]},{"authority":"both","name":"Reload","description":"When a Weapon is reloaded, optionally by a Character","arguments":[{"name":"self","type":"Weapon"},{"name":"character","type":"Character"},{"name":"ammo_to_reload","type":"integer"}]},{"authority":"both","name":"AmmoClipChange","description":"When the Ammo Clip is changed, by reloading or manually setting through scripting","arguments":[{"name":"self","type":"Weapon"},{"name":"old_ammo_clip","type":"integer"},{"name":"new_ammo_clip","type":"integer"}]},{"authority":"both","name":"AmmoBagChange","description":"When the Ammo Bag is changed, by reloading or manually setting through scripting","arguments":[{"name":"self","type":"Weapon"},{"name":"old_ammo_clip","type":"integer"},{"name":"new_ammo_clip","type":"integer"}]}]}'),Fe=JSON.parse('{"name":"WebUI","description":"Class for spawning a dynamic Web Browser.","authority":"client","constructors":[{"description":"Default Constructor","parameters":[{"type":"string","name":"name","description":"Used for debugging logs"},{"type":"HTMLPath","name":"path","description":"Web URL or <a href=\'#html-path-searchers\'>HTML File Path</a> as <code>file://my_file.html</code>"},{"type":"WebUIVisibility","name":"visibility","default":"WebUIVisibility.Visible","description":"if WebUI is visible on screen"},{"type":"boolean","name":"is_transparent","default":"true","description":"if WebUI background is transparent"},{"type":"boolean","name":"auto_resize","default":"true","description":"if should auto resize when screen changes it\'s size (useful OFF when you are painting meshes with WebUI)"},{"type":"integer","name":"width","default":"0","description":"size of the WebUI width when you are not using auto_resize"},{"type":"integer","name":"height","default":"0","description":"size of the WebUI height when you are not using auto_resize"}]}],"functions":[{"name":"BringToFront","authority":"client","description":"Puts this WebUI in the front of all WebUIs"},{"name":"CallEvent","authority":"client","description":"Calls an Event on the Browser\'s JavaScript","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","description":"Arguments to pass to the event"}]},{"name":"Destroy","authority":"client","description":"Destroys this Browser"},{"name":"LoadURL","authority":"client","description":"Loads a new File/URL in this Browser","parameters":[{"type":"HTMLPath","name":"url"}]},{"name":"LoadHTML","authority":"client","description":"Loads a pure HTML in this Browser","parameters":[{"type":"string","name":"html"}]},{"name":"ExecuteJavaScript","authority":"client","description":"Executes a JavaScript code in the Browser","description_long":"Executes a JavaScript code in the Browser<br/>Note: This method is experimental and should be used cautiously. Events are still the preferred way of communicating between Packages and WebUI.","parameters":[{"type":"string","name":"javascript_code"}]},{"name":"SetFocus","authority":"client","description":"Enables the focus on this browser (i.e. can receive Keyboard input and will trigger input events)","description_long":"Enables the focus on this browser (i.e. can receive Keyboard input and will trigger input events<br/>Note: Only one browser can have focus per time."},{"name":"RemoveFocus","authority":"client","description":"Removes the focus from this WebUI (and sets it back to game viewport)","description_long":"Removes the focus from this WebUI (and sets it back to game viewport)<br/>You MUST call this after you don\'t need keyboard input anymore"},{"name":"SetLayout","authority":"client","description":"Sets the Canvas Layout on Screen","parameters":[{"type":"Vector2D","name":"screen_location","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"size","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_min","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_max","description":"","default":"Vector(1, 1)"},{"type":"Vector2D","name":"alignment","description":"","default":"Vector(0.5, 0.5)"}]},{"name":"SetFreeze","authority":"client","description":"Freezes the WebUI Rendering to the surface (it will still execute the JS under the hood)","parameters":[{"type":"boolean","name":"freeze"}]},{"name":"SetVisibility","authority":"client","description":"Sets the visibility in screen","parameters":[{"type":"WebUIVisibility","name":"visibility"}]},{"name":"SpawnSound","authority":"client","description":"Spawns a Sound entity to plays this WebUI sound","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"boolean","name":"is_2d","default":"true"},{"type":"float","name":"volume","default":"1.0"},{"type":"integer","name":"inner_radius","default":"400"},{"type":"integer","name":"falloff_distance","default":"3600"},{"type":"AttenuationFunction","name":"attenuation_function","default":"AttenuationFunction.Linear"}],"return":[{"type":"Sound"}]},{"name":"SendMouseWheelEvent","authority":"client","description":"Sends a Mouse Event into the WebUI programatically","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"float","name":"delta_x"},{"type":"float","name":"delta_y"}]},{"name":"SendKeyEvent","authority":"client","description":"Sends a Key Event into the WebUI programatically","parameters":[{"type":"WebUIKeyType","name":"key_type"},{"type":"integer","name":"key_code"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"}]},{"name":"SendMouseMoveEvent","authority":"client","description":"Sends a Mouse Move Event into the WebUI programatically","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"},{"type":"boolean","name":"mouse_leave","default":"false"}]},{"name":"SendMouseClickEvent","authority":"client","description":"Sends a Mouse Click into the WebUI programatically","description_long":"You must send both Down and Up to make it work properly","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"WebUIMouseType","name":"mouse_type","description":"Which mouse button"},{"type":"boolean","name":"is_mouse_up","description":"Whether the event was up or down"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"},{"type":"integer","name":"click_count","default":"1","description":"Use 2 for double click event"}]},{"name":"IsValid","authority":"client","description":"Gets if this entity is Valid","return":[{"type":"boolean"}]},{"name":"GetID","authority":"client","description":"Gets the network ID of this entity","return":[{"type":"integer"}]},{"name":"GetSize","authority":"client","description":"Gets the current size of this WebUI","return":[{"type":"Vector2D"}]},{"name":"GetClass","description":"Gets the class of this entity","authority":"both","return":[{"type":"table"}]},{"name":"GetVisibility","authority":"client","description":"Returns the current WebUI visibility","return":[{"type":"WebUIVisibility"}]},{"name":"IsFrozen","authority":"client","description":"Returns if this WebUI is currently frozen","return":[{"type":"boolean"}]},{"name":"Subscribe","authority":"client","description":"Subscribes for an Event","return":[{"type":"function","description":"the subscribed callback itself"}],"parameters":[{"type":"string","name":"event_name","description":"The Event Name to subscribe"},{"type":"function","name":"callback","description":"The callback function to execute"}]},{"name":"Unsubscribe","authority":"client","description":"Unsubscribes from all subscribed Events in this Entity and in this Package, optionally passing the function to unsubscribe only that callback","parameters":[{"type":"string","name":"event_name","description":"The Event Name to unsubscribe"},{"type":"function","name":"callback","default":"nil","description":"The callback function to unsubscribe"}]}],"events":[{"name":"Fail","authority":"client","description":"Triggered when this page fails to load","arguments":[{"type":"integer","name":"error_code"},{"type":"string","name":"message"}]},{"name":"Ready","authority":"client","description":"Triggered when this page is fully loaded"}]}'),Ue=JSON.parse('{"name":"Color","description":"A color composed of components (R, G, B, A) with floating point precision.","constructors":[{"description":"Default Constructor","parameters":[{"name":"R","type":"number","default":"0","description":"Red color percentage (0-1)"},{"name":"G","type":"number","default":"0","description":"Green color percentage (0-1)"},{"name":"B","type":"number","default":"0","description":"Blue color percentage (0-1)"},{"name":"A","type":"number","default":"0","description":"Alpha transparency percentage (0-1)"}]}],"operators":[{"name":"+","operator":"__add","lhs":"Color|number","rhs":"Color|number","return":"Color","description":"Adds two Colors or a number into each component"},{"name":"-","operator":"__sub","lhs":"Color","rhs":"Color|number","return":"Color","description":"Subtracts two Colors or a number from each component"},{"name":"*","operator":"__mul","lhs":"Color|number","rhs":"Color|number","return":"Color","description":"Multiplies two Colors or a number into each component"},{"name":"/","operator":"__div","lhs":"Color","rhs":"Color|number","return":"Color","description":"Divides two Colors or a number from each component"},{"name":"==","operator":"__eq","lhs":"Color","rhs":"Color","return":"boolean","description":"Checks if two Colors have the same values"},{"name":"tostring","operator":"tostring","lhs":"Color","return":"string","description":"Gets a string representation of this struct"}],"properties":[{"name":"R","type":"number","description":"Red color percentage (0-1)"},{"name":"G","type":"number","description":"Green color percentage (0-1)"},{"name":"B","type":"number","description":"Blue color percentage (0-1)"},{"name":"A","type":"number","description":"Alpha transparency percentage (0-1)"}],"functions":[{"name":"ToHex","description":"Gets the Hexadecimal representation of this Color","parameters":[{"name":"appends_transparency","type":"boolean","default":"true","description":"Appends transparency part"}],"return":[{"type":"string","description":"Hexadecimal representation of this Color"}]}],"static_functions":[{"name":"RandomPalette","description":"Returns a random color from Color Palette","parameters":[{"name":"includes_black","type":"boolean","default":"true","description":"Includes blacks in the scope"}],"return":[{"type":"Color","description":"Random color from Color Palette"}]},{"name":"Random","description":"Returns a random color from all color scope","return":[{"type":"Color","description":"Random color from all color scope"}]},{"name":"FromRGBA","description":"Returns the color from 0-255 range values","parameters":[{"name":"r","type":"number","default":"0","description":"Red"},{"name":"g","type":"number","default":"0","description":"Green"},{"name":"b","type":"number","default":"0","description":"Blue"},{"name":"a","type":"number","default":"0","description":"Alpha"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromCYMK","description":"Returns a color from the CYMK format","parameters":[{"name":"c","type":"number","default":"0","description":"Cyan"},{"name":"y","type":"number","default":"0","description":"Yellow"},{"name":"m","type":"number","default":"0","description":"Magenta"},{"name":"k","type":"number","default":"0","description":"Black"},{"name":"a","type":"number","default":"0","description":"Alpha"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHSL","description":"Returns a color from the HSL format","parameters":[{"name":"h","type":"number","default":"0","description":"Hue"},{"name":"s","type":"number","default":"0","description":"Saturation"},{"name":"l","type":"number","default":"0","description":"Lightness"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHSV","description":"Returns a color from the HSV format","parameters":[{"name":"h","type":"number","default":"0","description":"Hue"},{"name":"s","type":"number","default":"0","description":"Saturation"},{"name":"v","type":"number","default":"0","description":"Value"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHEX","description":"Returns a color from the Hexadecimal format","parameters":[{"name":"hex","type":"string","description":"Hexadecimal"}],"return":[{"type":"Color","description":"Final Color"}]}]}'),Oe=JSON.parse('{"name":"Matrix","description":"A Matrix is an array of numbers this can be used for geometric and positional calculations. This is mainly used internally.","constructors":[{"description":"Default Constructor","parameters":[{"name":"rotation","type":"Rotator","description":"The rotation of the matrix"},{"name":"origin","type":"Vector","description":"The origin of the matrix"}]}],"functions":[{"name":"TransformVector","description":"Transform the vector with the matrix","return":[{"type":"Vector","description":"The new vector"}],"parameters":[{"type":"Vector","name":"vector","description":"The vector who will be transformed"}]},{"name":"GetTransposed","description":"Returns a new matrix transposed (<a href=\\"https://en.wikipedia.org/wiki/Transpose\\">Wikipedia</a>)","return":[{"type":"Matrix","description":"The matrix transpoosed"}]}]}'),He=JSON.parse('{"name":"Rotator","description":"A container for rotation information (Pitch, Yaw, Ro). All rotation values are stored in degrees.","operators":[{"name":"+","operator":"__add","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"},{"name":"-","operator":"__sub","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"},{"name":"*","operator":"__mul","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"}],"constructors":[{"description":"Default Constructor","parameters":[{"name":"Pitch","type":"number","default":"0","description":"Pitch"},{"name":"Yaw","type":"number","default":"0","description":"Yaw"},{"name":"Roll","type":"number","default":"0","description":"Roll"}]}],"properties":[{"name":"Pitch","type":"number","description":"Rotation around the right axis (around Y axis), Looking up and down (0=Straight Ahead, +Up, -Down)"},{"name":"Yaw","type":"number","description":"Rotation around the up axis (around Z axis), Running in circles 0=East, +North, -South."},{"name":"Roll","type":"number","description":"Rotation around the forward axis (around X axis), Tilting your head, 0=Straight, +Clockwise, -CCW."}],"functions":[{"name":"GetForwardVector","description":"Get the forward (X) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the forward direction"}]},{"name":"GetRightVector","description":"Get the right (Y) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the right direction"}]},{"name":"GetUpVector","description":"Get the up (Z) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the up direction"}]},{"name":"RotateVector","description":"Rotate a vector rotated by this rotator.","parameters":[{"type":"Vector","name":"vector","description":"the vector to rotate by the Rotator"}],"return":[{"type":"Vector","description":"the rotated vector"}]},{"name":"Normalize","description":"In-place normalize, removes all winding and creates the \u201cshortest route\u201d rotation."},{"name":"UnrotateVector","description":"Returns the vector rotated by the inverse of this rotator.","parameters":[{"type":"Vector","name":"vector","description":"The vector to rotate by the inverse of the Rotator"}],"return":[{"type":"Vector","description":"the unrotated vector"}]},{"name":"Quaternion","description":"Get Rotation as a quaternion.","return":[{"type":"Quat","description":"the rotation as a quaternion"}]},{"name":"GetNormalized","description":"Returns a new Rotator normalized.","return":[{"type":"Rotator","description":"the normalized Rotator"}]},{"name":"IsNearlyZero","description":"Checks whether rotator is near to zero within a specified tolerance","parameters":[{"type":"number","name":"tolerance","description":"Tolerance to check","default":"0.000001"}],"return":[{"type":"boolean","description":"whether the rotator is nearly zero"}]},{"name":"IsZero","description":"Checks whether all components of the rotator are exactly zero","return":[{"type":"boolean","description":"whether the rotator is exactly zero"}]}],"static_functions":[{"name":"Random","description":"Generates a random rotation, with optional random roll","parameters":[{"type":"boolean","name":"roll","description":"Whether to use a random roll in the rotator, otherwise uses 0 for roll","default":"false"}],"return":[{"type":"Rotator","description":"the random rotation"}]}]}'),ze={Stable:{Class:{Entity:ue,Actor:ye,Pickable:fe,Paintable:ge,Billboard:be,Blueprint:ve,Cable:_e,Canvas:Se,Character:we,CharacterSimple:ke,Database:Ce,Decal:Te,File:Ae,Grenade:Pe,Light:Me,Melee:Re,Particle:De,Player:Ve,Prop:Ge,SceneCapture:xe,StaticMesh:Ee,Sound:Ie,TextRender:Ne,Trigger:We,Vehicle:Le,Weapon:Be,WebUI:Fe},Struct:{Color:Ue,Matrix:Oe,Quat:JSON.parse('{"name":"Quat","description":"Floating point Quaternion that can represent a rotation about an axis in 3-D space","operators":[{"name":"+","operator":"__add","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"},{"name":"-","operator":"__sub","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"},{"name":"*","operator":"__mul","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"}],"constructors":[{"description":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"The quaternion\'s X-component"},{"name":"Y","type":"number","default":"0","description":"The quaternion\'s Y-component"},{"name":"Z","type":"number","default":"0","description":"The quaternion\'s Z-component"},{"name":"W","type":"number","default":"0","description":"The quaternion\'s W-component"}]}],"properties":[{"name":"X","type":"number","description":"The quaternion\'s X-component"},{"name":"Y","type":"number","description":"The quaternion\'s Y-component"},{"name":"Z","type":"number","description":"The quaternion\'s Z-component"},{"name":"W","type":"number","description":"The quaternion\'s W-component"}],"functions":[{"name":"Normalize","description":"In place normalize this Quaternion"},{"name":"Rotator","description":"Get the Rotator representation of this Quaternion","return":[{"type":"Rotator","description":"Rotator representation of this Quaternion"}]},{"name":"Inverse","description":"Returns the inverse of this Quaternion","return":[{"type":"Quat","description":"Inverse of this Quaternion"}]}]}'),Rotator:He,Vector:JSON.parse('{"name":"Vector","description":"A Vector composed of components (X, Y, Z) with floating point precision. Used mainly for entity position.","operators":[{"name":"+","operator":"__add","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"-","operator":"__sub","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"*","operator":"__mul","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"/","operator":"__div","lhs":"Vector","rhs":"Vector|number","return":"Vector"},{"name":"^","operator":"__pow","lhs":"Vector","rhs":"Vector|number","return":"Vector"}],"constructors":[{"description":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"X Coordinate"},{"name":"Y","type":"number","default":"0","description":"Y Coordinate"},{"name":"Z","type":"number","default":"0","description":"Z Coordinate"}]}],"properties":[{"name":"X","type":"number","description":"X Coordinate"},{"name":"Y","type":"number","description":"Y Coordinate"},{"name":"Z","type":"number","description":"Z Coordinate"}],"functions":[{"name":"Equals","description":"Check against another vector for equality, within specified error limits","description_long":"Check if the vector is equal to another vector, within specified error limits","return":[{"type":"boolean","description":"Are the vectors equal or not"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to compare to"},{"type":"number","name":"tolerance","default":"0.000001","description":"The error limits"}]},{"name":"Distance","description":"Distance between two points","description_long":"Returns the distance of 2 vectors","return":[{"type":"number","description":"The distance betweem the vectors"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to get the distance to"}]},{"name":"DistanceSquared","description":"Squared distance between two points","description_long":"Return the squared distance of 2 vectors","return":[{"type":"number","description":"The squared distance betweem the vectors"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to get the squared distance to"}]},{"name":"GetUnsafeNormal","description":"Calculates normalized version of vector without checking for zero length","description_long":"Returns the normalized version of vector without checking for zero length","return":[{"type":"Vector","description":"The unsafe normal"}],"parameters":[]},{"name":"GetSafeNormal","description":"Gets a normalized copy of the vector, checking it is safe to do so based on the length","description_long":"Returns a normalized copy of the vector, checking it is safe to do so based on the length","return":[{"type":"Vector","description":"The safe normal"}],"parameters":[]},{"name":"IsNearlyZero","description":"Checks whether vector is near to zero within a specified tolerance","return":[{"type":"boolean","description":"If the bool is near to zero"}],"parameters":[{"type":"number","name":"tolerance","default":"0.000001","description":"The error limits"}]},{"name":"IsZero","description":"Checks whether all components of the vector are exactly zero","return":[{"type":"boolean","description":"If all components of the vector are exactly zero"}]},{"name":"Normalize","description":"Normalize this vector in-place if it is larger than a given tolerance. Leaves it unchanged if not","return":[{"type":"boolean","description":"If the vector has been modified"}]},{"name":"Size","description":"Get the length (magnitude) of this vector","return":[{"type":"number","description":"The lenght of the vector"}]},{"name":"SizeSquared","description":"Get the squared length of this vector","return":[{"type":"number","description":"The squared length of the vector"}]},{"name":"Rotation","description":"Returns the orientation corresponding to the direction in which the vector points","return":[{"type":"Rotator","description":"The orientation of the vector"}]}]}'),Vector2D:JSON.parse('{"name":"Vector2D","description":"A Vector2D composed of components (X, Y) with floating point precision. Used mainly for HUD and Drawing on screen.","operators":[{"name":"+","operator":"__add","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"-","operator":"__sub","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"*","operator":"__mul","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"/","operator":"__div","lhs":"Vector2D","rhs":"Vector2D|number","return":"Vector2D"}],"constructors":[{"description":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"X Coordinate"},{"name":"Y","type":"number","default":"0","description":"Y Coordinate"}]}],"properties":[{"name":"X","type":"number","description":"X Coordinate"},{"name":"Y","type":"number","description":"Y Coordinate"}]}')},StaticClass:{Assets:JSON.parse('{"name":"Assets","description":"Retrieve Assets Data from Asset Packs.","authority":"both","static_functions":[{"return":[{"type":"table[]","table_properties":[{"name":"Name","type":"string"},{"name":"Path","type":"string"},{"name":"Author","type":"string"},{"name":"Version","type":"string"}]}],"name":"GetAssetPacks","description":"Gets a list containing information about all loaded Asset Packs","authority":"both"},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetAnimations","description":"Gets a list containing all Animation Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetBlueprints","description":"Gets a list containing all Blueprints Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetMaps","description":"Gets a list containing all Map Asset Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetMaterials","description":"Gets a list containing all Materials Asset Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetParticles","description":"Gets a list containing all Particle Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetSounds","description":"Gets a list containing all Sound Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetSkeletalMeshes","description":"Gets a list containing all Skeletal Mesh Asset Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetStaticMeshes","description":"Gets a list containing all Static Mesh Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"return":[{"type":"string[]","description":"array of strings"}],"name":"GetOthers","description":"Gets a list containing all Other Assets Keys from an AssetPack","authority":"both","parameters":[{"type":"string","name":"asset_pack_path","description":"The Asset Pack path to get the assets"}]},{"name":"Precache","description":"Manually adds an Asset to be loaded during the Player\'s loading screen","authority":"server","parameters":[{"type":"string","name":"asset_path","description":"The Asset Key"},{"type":"AssetType","name":"asset_type","description":"The Asset Type"}]}]}'),Chat:JSON.parse('{"name":"Chat","description":"Configure, send and intercept chat messages.","authority":"both","static_functions":[{"name":"AddMessage","description":"Adds a chat message which will display local only","authority":"client","parameters":[{"type":"string","name":"message","description":""}]},{"name":"SendMessage","description":"Sends a chat message to a Player only","authority":"server","parameters":[{"type":"Player","name":"player","description":"The player to receive the message"},{"type":"string","name":"message","description":"The message"}]},{"name":"SetConfiguration","description":"Configures the Chat visuals and position","authority":"client","parameters":[{"type":"Vector2D","name":"screen_location","description":"","default":"Vector(-25, 0)"},{"type":"Vector2D","name":"size","description":"","default":"Vector(600, 250)"},{"type":"Vector2D","name":"anchors_min","description":"","default":"Vector(1, 0.5)"},{"type":"Vector2D","name":"anchors_max","description":"","default":"Vector(1, 0.5)"},{"type":"Vector2D","name":"alignment","description":"","default":"Vector(1, 0.5)"},{"type":"boolean","name":"justify","description":"","default":"true"},{"type":"boolean","name":"show_scrollbar","description":"","default":"true"}]},{"name":"SetVisibility","description":"Sets if the Chat is visible or not","authority":"client","parameters":[{"type":"boolean","name":"is_visible","description":""}]},{"name":"BroadcastMessage","description":"Sends a chat message to all Players","authority":"server","parameters":[{"type":"string","name":"message","description":"The message to send to all Players"}]}],"events":[{"name":"PlayerSubmit","description":"Called when a player submits a message in the chat","authority":"both","return":[{"type":"boolean","description":"Return false to prevent the message from being sent"}],"arguments":[{"type":"string","name":"message","description":"The message sent by the player"},{"type":"Player","name":"player","description":"The player who sent the message - on client it will always be the localplayer"}]},{"name":"ChatEntry","description":"Called when a new Chat Message is received, this is also triggered when new messages are sent programatically","description_long":"Called when a new Chat Message is received, this is also triggered when new messages are sent programatically<br/><br/>This is useful for creating your own Chat interface while still use the built-in system","authority":"client","arguments":[{"type":"string","name":"message","description":"The message"},{"type":"Player?","name":"player","description":"The player who sent the message or <code>nil</code> if this was called on client side or was sent through code"}]},{"name":"Open","description":"When player opens the Chat","authority":"client"},{"name":"Close","description":"When player closes the Chat","authority":"client"}]}'),Client:JSON.parse('{"name":"Client","description":"Static Class present on Client side.","authority":"client","static_functions":[{"name":"SetNearClipPlane","description":"Sets the Near Clip Plane","authority":"client","parameters":[{"type":"float","name":"near_clip_plane","description":""}]},{"name":"GetNearClipPlane","description":"Gets the Near Clip Plane value","authority":"client","return":[{"type":"float"}]},{"name":"SetDebugEnabled","description":"Enables/Disables Debug settings and Client Console to be used","authority":"client","parameters":[{"type":"boolean","name":"enable_debug","description":""}]},{"name":"SetHighlightColor","description":"Changes the Highlight Color for highlighted actors at a specific Index","description_long":"Changes the Highlight Color for highlighted actors at a specific Index. Multiply it by 5 (or more) for having a glowing effect.<br/><br/><code>HighlightMode.Always</code> will always be visible, even behind walls<br/><code>HighlightMode.OnlyHidden</code> will only be visible if behind a wall<br/><code>HighlightMode.OnlyVisible</code> will only be visible if not behind a wall<br/><br/>Note: You can only have 3 differents indexes (0, 1 or 2).","authority":"client","parameters":[{"type":"Color","name":"highlight_color","description":""},{"type":"integer","name":"index","description":""},{"type":"HighlightMode","name":"mode","description":"","default":"HighlightMode.Always"}]},{"name":"SetOutlineColor","description":"Changes the Outline Color for outlined actors at a specific Index","description_long":"Changes the Outline Color for outlined actors at a specific Index. Multiply it by 5 (or more) for having a glowing effect.<br/><br/>Note: You can only have 3 differents indexes (0, 1 or 2), and the default Outline color index used by the game is  <code>0</code> (when interacting with stuff).","authority":"client","parameters":[{"type":"Color","name":"outline_color","description":""},{"type":"integer","name":"index","description":"","default":"0"},{"type":"float","name":"thickness","description":"","default":"2"}]},{"name":"SetValue","description":"Sets a global value in the Client, which can be accessed from anywhere (client side)","description_long":"Sets a global value in the Client, which can be accessed from anywhere (client side)<br/><br/>Please refer to <a href=\\"https://docs.nanos.world/docs/next/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"client","parameters":[{"type":"string","name":"key","description":""},{"type":"any","name":"value","description":""}]},{"name":"Subscribe","description":"Subscribes for an Event","authority":"client","return":[{"type":"function","description":"the function callback itself"}],"parameters":[{"type":"string","name":"event_name","description":""},{"type":"function","name":"callback","description":""}]},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"client","parameters":[{"type":"string","name":"event_name","description":""},{"type":"function","name":"callback","description":"","default":"nil"}]},{"name":"GetLocalPlayer","description":"Gets the local Player","authority":"client","return":[{"type":"Player","description":"The local Player"}]},{"name":"GetFrameTime","description":"Gets the current Frame Time","authority":"client","return":[{"type":"float","description":"The Frame Time"}]},{"name":"GetTime","description":"Gets the Unix Epoch Time in milliseconds","authority":"client","return":[{"type":"integer","description":"the unix timestamp"}]},{"name":"GetMap","description":"Returns the current Map","authority":"client","return":[{"type":"string","description":"The current Map"}]},{"name":"GetPackages","description":"Returns a list of Packages folder names loaded and running in the client","authority":"client","return":[{"type":"string[]","description":"packages folder names"}]},{"name":"GetValue","description":"Gets a value given a key","authority":"client","return":[{"type":"any?","description":"the value"}],"parameters":[{"type":"string","name":"key","description":""},{"type":"any","name":"fallback","description":""}]}],"events":[{"name":"Tick","description":"Called Every Frame. Do not abuse","authority":"client","arguments":[{"type":"float","name":"delta_time","description":""}]},{"name":"SpawnLocalPlayer","description":"Called when the local player spawns (just after the game has loaded)","authority":"client","arguments":[{"type":"Player","name":"local_player","description":""}]},{"name":"WindowFocusChange","description":"Called when the game is focused/unfocused","authority":"client","arguments":[{"type":"boolean","name":"is_focused","description":"If it\'s focused"}]}]}'),Console:JSON.parse('{"name":"Console","description":"Log messages on console.","authority":"both","static_functions":[{"name":"Log","description":"Logs and formats a message in the console, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}]},{"name":"Warn","description":"Logs an orange warning in the console, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}]},{"name":"Error","description":"Logs a red error in the console, with formatted arguments","authority":"both","parameters":[{"type":"string","name":"message","description":"Message to print"},{"type":"any","name":"args...","default":"nil","description":"Other arguments to format with the message using string.format"}]},{"name":"RegisterCommand","description":"Registers a new Console Command","authority":"both","parameters":[{"type":"string","name":"command","description":"The command"},{"type":"function","name":"callback","description":"The callback to be called when the command is inputted"},{"type":"string","name":"description","description":"The command description to display in the console"},{"type":"string[]","name":"parameters","description":"The list of supported parameters to display in the console"}]}],"events":[{"name":"PlayerSubmit","description":"Called when a console command is submitted","authority":"both","arguments":[{"type":"string","name":"text","description":""}]},{"name":"LogEntry","description":"Called when a log is received","authority":"both","arguments":[{"type":"string","name":"text","description":""},{"type":"LogType","name":"type","description":""}]},{"name":"Open","description":"When player opens the Console","authority":"client"},{"name":"Close","description":"When player closes the Console","authority":"client"}]}'),Debug:JSON.parse('{"name":"Debug","description":"Draws Debug shapes in the world.","authority":"client","static_functions":[{"name":"DrawBox","description":"Draws a Debug box in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Vector","name":"extent","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"Color","name":"color","description":""},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawCoordinateSystem","description":"Draws a Debug coordinate system in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"float","name":"size","description":"","default_value":"100"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawCrosshairs","description":"Draws a Debug crosshair in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"Rotator","name":"rotation","description":""},{"type":"float","name":"size","description":"","default":"100"},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawCylinder","description":"Draws a Debug cylinder in the world","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""},{"type":"float","name":"radius","description":""},{"type":"integer","name":"segments","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawDirectionalArrow","description":"Draws a Debug directional arrow in the world","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""},{"type":"float","name":"arrow_size","description":"","default":"100"},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawLine","description":"Draws a Debug Line in the World","authority":"client","parameters":[{"type":"Vector","name":"start_position","description":""},{"type":"Vector","name":"end_position","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawPoint","description":"Draws a Debug Point in the World","authority":"client","parameters":[{"type":"Vector","name":"start_position","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"size","description":"","default_value":"10"}]},{"name":"DrawSphere","description":"Draws a Debug sphere in the World","authority":"client","parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"float","name":"radius","description":""},{"type":"integer","name":"segments","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"float","name":"thickness","description":"","default_value":"0"}]},{"name":"DrawString","description":"Draws a Debug string in the world","authority":"client","parameters":[{"type":"Vector","name":"location","description":""},{"type":"string","name":"text","description":""},{"type":"Color","name":"color","description":"","default":"Color.RED"},{"type":"float","name":"life_time","description":"","default_value":"5"},{"type":"boolean","name":"draw_shadow","description":"","default_value":"false"},{"type":"float","name":"font_scale","description":"","default_value":"1"}]}]}'),Discord:JSON.parse('{"name":"Discord","description":"Initialize and set Discord activity.","authority":"client","static_functions":[{"name":"Initialize","description":"Initializes the Discord Integration with your custom client_id","authority":"client","parameters":[{"type":"integer","name":"client_id","description":""}]},{"name":"SetActivity","description":"Communicates with Discord and sets a custom user status","authority":"client","parameters":[{"type":"string","name":"state","description":""},{"type":"string","name":"details","description":""},{"type":"string","name":"large_image","description":""},{"type":"string","name":"large_text","description":""},{"type":"string","name":"reset_time","description":"Whether or not to reset current activity elapsed time","default":"false"}]}]}'),Events:JSON.parse('{"name":"Events","description":"Subscribe for user-defined Events.","authority":"both","static_functions":[{"authority":"both","name":"Call","description":"Calls an Event which will be triggered in all Local Packages","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"client","name":"CallRemote","description":"Calls an Event if on Client which will be triggered in all Server Packages","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"server","name":"CallRemote","description":"Calls an Event if on Server which will be triggered in all Client\'s Packages of a specific Player","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"Player","name":"player","description":"The remote player to send this event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"server","name":"BroadcastRemote","description":"Calls an Event on Server which will be triggered in all Client\'s Packages of all Players","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"server","name":"BroadcastRemoteDimension","description":"Calls an Event on Server which will be triggered in all Client\'s Packages of all Players in that dimension","parameters":[{"type":"integer","name":"dimension","description":"The Dimension to send this event"},{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"authority":"both","return":[{"type":"function","description":"the subscribed callback itself"}],"name":"Subscribe","description":"Subscribes for an user-created event which will be triggered for only local called events","parameters":[{"type":"string","name":"event_name","description":"The Event Name to subscribe"},{"type":"function","name":"callback","description":"The callback function to execute"}]},{"authority":"both","return":[{"type":"function","description":"the subscribed callback itself"}],"name":"SubscribeRemote","description":"Subscribes for an user-created event which will be triggered for only remote called events","parameters":[{"type":"string","name":"event_name","description":"The Event Name to subscribe"},{"type":"function","name":"callback","description":"The callback function to execute"}]},{"authority":"both","name":"Unsubscribe","description":"Unsubscribes from all subscribed events in this Package with that event name, optionally passing the function to unsubscribe only that callback","parameters":[{"type":"string","name":"event_name","description":"The Event Name to unsubscribe"},{"type":"function","name":"callback","default":"nil","description":"The callback function to unsubscribe"}]}]}'),HTTP:JSON.parse('{"name":"HTTP","description":"HTTP Requests Interface.","authority":"server","static_functions":[{"name":"RequestAsync","description":"Makes an asynchronous HTTP Request","description_long":"Makes an asynchronous HTTP Request.<br/><br/>The request will be made asynchronously and returned safetly in the same thread in the callback provided when it\'s done.<br/><br/><b>Note:</b> If a request is still running when unloading packages, the server will freeze until it\'s finished, then the package will unload.","authority":"server","parameters":[{"type":"string","name":"uri","description":"The main URI"},{"type":"string","name":"endpoint","default":"/","description":"The endpoint"},{"type":"string","name":"method","default":"GET","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\'>HTTP Method</a> to be used"},{"type":"string","name":"data","default":"","description":"Payload"},{"type":"string","name":"content_type","default":"application/json","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\'>Content Type</a> to be used"},{"type":"boolean","name":"compress","default":"false","description":"Whether or not to compress the content with gzip"},{"type":"table","name":"headers","default":"{}","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\'>Headers</a> to be used"},{"type":"function","name":"callback","default":"nil","description":"The result will be called in the format `function(status, data)`"}]},{"name":"Request","return":[{"type":"table","table_properties":[{"name":"Status","type":"integer"},{"name":"Data","type":"string"}]}],"description":"Makes a synchronous HTTP Request.<br/><br/>The request will be made synchronously and will freeze the server until it\'s done.","authority":"server","parameters":[{"type":"string","name":"uri","description":"The main URI"},{"type":"string","name":"endpoint","default":"/","description":"The endpoint"},{"type":"string","name":"method","default":"GET","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\'>HTTP Method</a> to be used"},{"type":"string","name":"data","default":"","description":"Payload"},{"type":"string","name":"content_type","default":"application/json","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\'>Content Type</a> to be used"},{"type":"boolean","name":"compress","default":"false","description":"Whether or not to compress the content with gzip"},{"type":"table","name":"headers","default":"{}","description":"The <a href=\'https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers\'>Headers</a> to be used"}]}]}'),Input:JSON.parse('{"name":"Input","description":"Create custom keybindings and retrieve input information.","authority":"client","static_functions":[{"authority":"client","name":"Bind","description":"Binds a function to an Input defined using <code>Register</code> or from the game","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"InputEvent","name":"input_event","description":"Which event to register (Released/Pressed)"},{"type":"function","name":"callback","description":"The function to trigger"}]},{"authority":"client","name":"Unbind","description":"Unbinds an Input function","description_long":"Unbinds all Input functions related to the given binding_name and input_event","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"InputEvent","name":"input_event","description":"Which event to register (Released/Pressed)"}]},{"authority":"client","name":"Register","description":"Registers a keybinding to a default key","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"string","name":"key_name"}]},{"authority":"client","name":"Unregister","description":"Unregisters a keybinding","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"},{"type":"string","name":"key_name"}]},{"authority":"client","name":"GetKeyIcon","description":"Gets the icon path of a key","parameters":[{"type":"string","name":"key_name"},{"type":"boolean","name":"dark_mode","default":"false"}],"return":[{"type":"string"}]},{"authority":"client","name":"GetKeyCode","description":"Gets the key code of a key","parameters":[{"type":"string","name":"key_name"}],"return":[{"type":"integer"}]},{"authority":"client","name":"GetModifierKeys","description":"Gets the currently pressed modifier keys","description_long":"Gets the currently pressed modifier keys.<br/>Use bit-wise operators like <code>modifier & KeyModifier.LeftShiftDown</code> to know if the left shift is pressed.","return":[{"type":"KeyModifier"}]},{"authority":"client","name":"GetMappedKeys","description":"Returns the keys bound to a keybinding","parameters":[{"type":"string","name":"binding_name","description":"The keybinding id"}],"return":[{"type":"string[]","description":"list of all keys"}]},{"authority":"client","name":"ResetBindings","description":"Resets all bound functions by this Package"},{"authority":"client","name":"GetScriptingKeyBindings","description":"Returns a table with all Scripting KeyBindings","return":[{"type":"table","description":"in the format <code>{ \\"[BINDING_NAME]\\" = { \\"[KEY_01]\\", \\"[KEY_02]\\", ... }, ... }</code>"}]},{"authority":"client","name":"GetGameKeyBindings","description":"Returns a table with all Game KeyBindings","return":[{"type":"table","description":"in the format <code>{ \\"[BINDING_NAME]\\" = { \\"[KEY_01]\\", \\"[KEY_02]\\", ... }, ... }</code>"}]},{"name":"SetInputEnabled","description":"Toggles Local Player input","authority":"client","parameters":[{"type":"boolean","name":"enable_input","description":""}]},{"name":"SetMouseEnabled","description":"Displays/Hides Mouse Cursor","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"InputKey","description":"Forces an Input Key event on Local Player","description_long":"Forces an Input Key event on Local Player<br/><br/>This won\'t trigger any Scripting event as it bypass internal validations","authority":"client","parameters":[{"type":"string","name":"key_name","description":"Key Name to input"},{"type":"InputEvent","name":"input_event","description":"Which Event to input"},{"type":"float","name":"amount_depressed","description":"The amount pressed","default":"1"}]},{"name":"IsKeyDown","description":"Returns if a key is being pressed","authority":"client","return":[{"type":"boolean","description":"if the key is pressed"}],"parameters":[{"type":"string","name":"key_name","description":""}]},{"name":"IsMouseEnabled","description":"","authority":"client","return":[{"type":"boolean","description":"if the mouse is visible"}]},{"name":"IsInputEnabled","description":"","authority":"client","return":[{"type":"boolean","description":"if the input is visible"}]}],"events":[{"name":"KeyDown","description":"A keyboard key is being pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"KeyPress","description":"A keyboard key has been pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"KeyUp","description":"A keyboard key has been released","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":"The key pressed"},{"type":"float?","name":"delta","description":"The amount depressed in case of this is an Axis input"}]},{"name":"MouseDown","description":"A mouse button has been pressed / is being pressed","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":""},{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""}]},{"name":"MouseUp","description":"A mouse button has been released","authority":"client","return":[{"type":"boolean","description":"Return false to block it"}],"arguments":[{"type":"string","name":"key_name","description":""},{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""}]},{"name":"MouseEnable","description":"When mouse cursor is displayed/hidden","authority":"client","arguments":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"MouseMoveX","description":"Called when the mouse moves in the X axis","authority":"client","arguments":[{"type":"float","name":"delta","description":""},{"type":"float","name":"delta_time","description":""},{"type":"integer","name":"num_samples","description":""}]},{"name":"MouseMoveY","description":"Called when the mouse moves in the Y axis","authority":"client","arguments":[{"type":"float","name":"delta","description":""},{"type":"float","name":"delta_time","description":""},{"type":"integer","name":"num_samples","description":""}]},{"name":"MouseScroll","description":"Called when the mouse scrolls","authority":"client","arguments":[{"type":"float","name":"mouse_x","description":""},{"type":"float","name":"mouse_y","description":""},{"type":"float","name":"delta","description":""}]}]}'),Level:JSON.parse('{"name":"Level","description":"Work with Unreal level in runtime.","authority":"client","static_functions":[{"authority":"client","name":"LoadStreamLevel","description":"Loads a Level in runtime","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"should_block_on_load","default":"false","description":"If this should be a blocking operation - the game will freeze"},{"type":"boolean","name":"make_visible_after_load","default":"true","description":"If this should be visible automatically after loaded"}]},{"authority":"client","name":"UnloadStreamLevel","description":"Unloads a Level in runtime","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"should_block_on_unload","default":"false","description":"If this should be a blocking operation - the game will freeze"}]},{"authority":"client","name":"SetStreamLevelVisibility","description":"Sets a Stream Level visibility","parameters":[{"type":"string","name":"level_name"},{"type":"boolean","name":"visibility","description":"If this level should be visible"}]},{"authority":"client","name":"GetStreamLevels","description":"Gets a list of all Stream Levels","return":[{"type":"table[]","description":"in the format <code>{ name, is_loaded, is_visible }</code>"}]},{"name":"CallLevelBlueprintEvent","description":"Calls a Level Blueprint custom event (which can be added when creating levels through Unreal Engine)","authority":"client","parameters":[{"type":"string","name":"event_name","description":""}]}],"events":[{"name":"StreamLevelLoad","authority":"client","description":"Called when a Stream Level is loaded","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelUnload","authority":"client","description":"Called when a Stream Level is unloaded","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelShow","authority":"client","description":"Called when a Stream Level is shown","arguments":[{"type":"string","name":"level_name"}]},{"name":"StreamLevelHide","authority":"client","description":"Called when a Stream Level is hidden","arguments":[{"type":"string","name":"level_name"}]}]}'),Navigation:JSON.parse('{"name":"Navigation","description":"Creates a reachable path into navigable space.","authority":"client","static_functions":[{"name":"GetRandomReachablePointInRadius","description":"Finds random, reachable point in navigable space restricted to radius around origin","description_long":"Finds random, reachable point in navigable space restricted to radius around origin (only if map has a NavMesh)","authority":"client","return":[{"type":"Vector","description":"The random point"}],"parameters":[{"type":"Vector","name":"origin","description":""},{"type":"float","name":"radius","description":""}]},{"name":"GetRandomPointInNavigableRadius","description":"Finds random, point in navigable space restricted to Radius around Origin. Resulting location is not tested for reachability from the Origin","description_long":"Finds random, point in navigable space restricted to Radius around Origin. Resulting location is not tested for reachability from the Origin (only if map has a NavMesh)","authority":"client","return":[{"type":"Vector","description":"The random point"}],"parameters":[{"type":"Vector","name":"origin","description":""},{"type":"float","name":"radius","description":""}]},{"name":"FindPathToLocation","description":"Finds a Path given Start and End location","description_long":"Finds a Path given Start and End location (only if map has a NavMesh)","authority":"client","return":[{"type":"table","table_properties":[{"name":"IsValid","type":"boolean"},{"name":"IsPartial","type":"boolean"},{"name":"Length","type":"number"},{"name":"Cost","type":"number"},{"name":"PathPoints","type":"Vector[]"}]}],"parameters":[{"type":"Vector","name":"start_location","description":""},{"type":"Vector","name":"end_location","description":""}]}]}'),Package:JSON.parse('{"name":"Package","description":"Class which represents the current Package","authority":"both","static_functions":[{"name":"Export","description":"Makes any variable available in the global scope","authority":"both","parameters":[{"type":"string","name":"variable_name","description":"Name of the variable to export"},{"type":"any","name":"value","description":"Value to be set in the global scope"}]},{"name":"Require","description":"Includes new .lua files","description_long":"Includes new .lua files<br/><br/>We currently support 5 searchers, which are looked in the following order:<br/><ol><li>Relative to <code>current-file-path/</code></li><li>Relative to <code>current-package/Client/</code> or <code>current-package/Server/</code> (depending on your side)</li><li>Relative to <code>current-package/Shared/</code></li><li>Relative to <code>current-package/</code></li><li>Relative to <code>Packages/</code></li></ol>","authority":"both","parameters":[{"type":"string","name":"script_file","description":"Path to the script file to require"}],"return":[{"type":"any","description":"Any return values from the included file"}]},{"name":"Subscribe","description":"Subscribes to an Event","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event to subscribe to"},{"type":"function","name":"callback","description":"Callback to run on the event occuring"}],"return":[{"type":"function","description":"The function callback"}]},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event to unsubscribe to"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to specifically unsubscribe to"}]},{"name":"SetPersistentData","description":"Sets a Persistent Value which will be saved to disk","authority":"both","parameters":[{"type":"string","name":"key","description":"Key to index data into"},{"type":"any","name":"value","description":"Value to set at the key"}]},{"name":"GetDirectories","description":"Gets a list of all directories in this package","description_long":"Gets a list of all files in this package, optionally with filters","authority":"both","parameters":[{"type":"string","name":"path_filter","default":"","description":"Path filter"}],"return":[{"type":"string[]","description":"List of directories"}]},{"name":"GetFiles","description":"Gets a list of all files in this package","description_long":"Gets a list of all files in this package, optionally with filters","authority":"both","parameters":[{"type":"string|table","name":"path_filter","default":"","description":"Path filter"},{"type":"string","name":"extension_filter","default":"","description":"Example : .lua"}],"return":[{"type":"string[]","description":"List of files"}]},{"name":"GetName","description":"Gives the package name","authority":"both","return":[{"type":"string","description":"The package name"}]},{"name":"GetPath","description":"Gives the package path","authority":"both","return":[{"type":"string","description":"The package path"}]},{"name":"GetVersion","description":"Gives the package version","authority":"both","return":[{"type":"string","description":"The package version"}]},{"name":"GetCompatibilityVersion","description":"Gives the package compatibility version","authority":"both","return":[{"type":"string","description":"The package compatibility version"}]},{"name":"GetPersistentData","description":"Gets the Persistent Value from the disk","description_large":"Gets a Persistent Value from the disk<br/>Pass no parameter to return the whole table, or a key to get a specific value","authority":"both","return":[{"type":"table","description":"Persistent values from disk"}],"parameters":[{"type":"string?","name":"key","default":"","description":"The key to get the data"}]}],"events":[{"name":"Load","authority":"both","description":"Called when this package is loaded","description_long":"Called when this package is loaded<br/><br/>This event is triggered differently depending on the situation:<br/><ul><li>When the <b>server starts</b> or you run <code>package reload all</code> the event triggers only after ALL packages are loaded.</li><li>In all other cases (<code>package load/reload</code> or <code>Package.Load/Reload</code>) the event is triggered immediately after the package is loaded/reloaded.</li></ul>"},{"name":"Unload","authority":"both","description":"Called when this package is unloaded"}]}'),PostProcess:JSON.parse('{"name":"PostProcess","authority":"client","description":"Interaction with Post Process effects.","static_functions":[{"authority":"client","name":"SetBloom","description":"Set Post Process Bloom Settings","parameters":[{"type":"float","name":"intensity","default":"0.675"},{"type":"float","name":"threshold","default":"-1"}]},{"authority":"client","name":"SetChromaticAberration","description":"Set Post Process Chromatic Abberation Settings","parameters":[{"type":"float","name":"intensity","default":"0"},{"type":"float","name":"start_offset","default":"0"}]},{"authority":"client","name":"SetImageEffects","description":"Set Post Process Image Effect Settings","parameters":[{"type":"float","name":"vignette_intensity","default":"0.6"},{"type":"float","name":"grain_jitter","default":"0"},{"type":"float","name":"grain_intensity","default":"0"}]},{"authority":"client","name":"SetExposure","description":"Set Post Process Exposure Settings","parameters":[{"type":"float","name":"exposure_compensation","default":"1"},{"type":"float","name":"min_ev100","default":"-10"},{"type":"float","name":"max_ev100","default":"20"},{"type":"float","name":"low_percent","default":"10"},{"type":"float","name":"high_percent","default":"90"}]},{"authority":"client","name":"SetFilm","description":"Set Post Process Film Settings","parameters":[{"type":"float","name":"slope","default":"0.8"},{"type":"float","name":"toe","default":"0.55"},{"type":"float","name":"shoulder","default":"0.26"},{"type":"float","name":"black_clip","default":"0"},{"type":"float","name":"white_clip","default":"0.3"}]},{"authority":"client","name":"SetGlobalSaturation","description":"Set Post Process Saturation Colors. Use Alpha for everall Saturation intensity","parameters":[{"type":"Color","name":"color"}]},{"authority":"client","name":"SetLookupTable","description":"Set Post Process Lookup Table Texture","parameters":[{"type":"ImagePath","name":"texture_path"}]},{"authority":"client","name":"SetMaterial","description":"Sets a Post Process Material","parameters":[{"type":"MaterialPath","name":"material_path","description":"The Material Asset to set as Post Process"}]},{"authority":"client","name":"RemoveMaterial","description":"Removes the current Post Process Material"},{"authority":"client","name":"SetSunAngle","description":"Sets the sun\'s angle (0-360)","parameters":[{"type":"float","name":"angle"}]}]}'),Server:JSON.parse('{"name":"Server","description":"Server represents all Server controls in the Server side.","authority":"server","static_functions":[{"name":"ChangeMap","description":"Restarts the server in a new Map, restarts all packages and reconnects all players","authority":"server","parameters":[{"type":"string","name":"map_path","description":"The new map to load"}]},{"name":"LoadPackage","description":"Loads a Package","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package to load"}]},{"name":"ReloadPackage","description":"Reloads a Package","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package to reload"}]},{"name":"SetDescription","description":"Sets the description of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"description","description":"The new description"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetLogo","description":"Sets the logo of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"logo_url","description":"The new logo"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetMaxPlayers","description":"Sets the maximum player slots of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"integer","name":"max_players","description":"The maximum players"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetName","description":"Sets the name of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"name","description":"The new name"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetPassword","description":"Sets the password of the server, optionally overrides Config.toml","authority":"server","parameters":[{"type":"string","name":"password","description":"The new password"},{"type":"boolean","name":"persist_to_config_file","description":"Persist to config file","default":"false"}]},{"name":"SetValue","description":"Sets a global value in the Server, which can be accessed from anywhere (server side)","authority":"server","parameters":[{"type":"string","name":"key","description":"Key"},{"type":"any","name":"value","description":"Value"},{"name":"sync_on_client","type":"boolean","default":"false","description":"If enabled will sync this value through all clients, accessible through Client.GetValue() static class."}]},{"name":"GetValue","description":"Gets a value given a key","authority":"server","parameters":[{"type":"string","name":"key","description":"Key"},{"type":"any","name":"fallback","description":"Fallback Value if key doesn\'t exist"}]},{"name":"Unban","description":"Unbans a Player by it\'s account ID","authority":"server","parameters":[{"type":"string","name":"account_id","description":"nanos account ID"}]},{"name":"Stop","description":"Stops the server","authority":"server"},{"name":"Subscribe","description":"Subscribes for an Event","authority":"server","return":[{"type":"function","description":"the function callback itself"}],"parameters":[{"type":"string","name":"event_name","description":"The name of the Event"},{"type":"function","name":"function","description":"Callback function"}]},{"name":"UnloadPackage","description":"Unloads a Package","authority":"server","parameters":[{"type":"string","name":"package_folder_name","description":"The package you want unload"}]},{"name":"Unsubscribe","description":"Unsubscribes from all subscribed Events in this Class and in this Package, optionally passing the function to unsubscribe only that callback","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The name of the Events"},{"type":"function","name":"function","description":"Callback function","default":"nil"}]},{"name":"GetMap","description":"Returns the current Map","authority":"server","return":[{"type":"string","description":"the current map"}]},{"name":"GetMapConfig","description":"Returns a list of the Custom Config of the current map (stored in the MAP_NAME.toml)","authority":"server","return":[{"type":"table","description":"a list of the Custom Config of the current map"}]},{"name":"GetMaps","description":"Returns a list of all Maps installed on the server","authority":"server","return":[{"type":"string[]","description":"a list of all Maps installed on the server"}]},{"name":"GetPackages","description":"Returns a list of Packages folder names available in the server, optionally returns only loaded and running packages","authority":"server","return":[{"type":"string[]","description":"a list of Packages folder names available in the server"}],"parameters":[{"type":"boolean","name":"only_loaded","description":"Set to true the function return only loaded and running packages","default":"true"}]},{"name":"GetVersion","description":"Returns the server version","authority":"server","return":[{"type":"string","description":"the server version"}]},{"name":"GetIP","description":"Returns the server Public IP","authority":"server","return":[{"type":"string","description":"the server Public IP"}]},{"name":"GetPort","description":"Returns the server Port","authority":"server","return":[{"type":"integer","description":"the server Port"}]},{"name":"GetQueryPort","description":"Returns the server QueryPort","authority":"server","return":[{"type":"integer","description":"the server QueryPort"}]},{"name":"GetMaxPlayers","description":"Returns the Max Players configured","authority":"server","return":[{"type":"integer","description":"the max players configured"}]},{"name":"GetDescription","description":"Returns the Server Description","authority":"server","return":[{"type":"string","description":"the Server Description"}]},{"name":"GetCustomSettings","description":"Returns the Server Custom Settings passed as parameter or New Game screen","authority":"server","return":[{"type":"table[]","description":"a list of the Custom Settings in the format (key = value)"}]},{"name":"GetTickRate","description":"Returns the Configured Tick Rate","authority":"server","return":[{"type":"integer","description":"the server Tick Rate"}]},{"name":"GetTime","description":"Gets the Unix Epoch Time in milliseconds","authority":"server","return":[{"type":"integer","description":"the unix timestamp"}]},{"name":"IsAnnounced","description":"Returns if the Server is announced in the Master List","authority":"server","return":[{"type":"boolean","description":"if the Server is announced in the Master List"}]}],"events":[{"name":"Start","description":"Server has been started","authority":"server"},{"name":"PlayerConnect","description":"Called when a player is attempting to connect to the server","authority":"server","arguments":[{"type":"string","name":"IP","description":"IP of the player"},{"type":"string","name":"player_account_ID","description":"Account ID of the player"},{"type":"string","name":"player_name","description":"Player name"},{"type":"string","name":"player_steam_ID","description":"SteamID of the player"}],"return":[{"type":"boolean","description":"Return false to do not allow the player to connect"}]},{"name":"Stop","description":"Server has been stopped","authority":"server"},{"name":"Tick","description":"Triggered every 33ms by default","description_long":"Triggered every 33ms by default<br/><br/>Caution: Only small operations should be performed here, otherwise this can lead to server lag and delays","authority":"server","arguments":[{"type":"float","name":"delta_time","description":""}]}]}'),Sky:JSON.parse('{"name":"Sky","description":"Interact with built-in Sky & Weather system.","authority":"client","static_functions":[{"authority":"client","name":"Spawn","description":"Replaces all Sky/Sun actors with the Ultra Dynamic Sky Actor, to be able to use the functions from this page","description_long":"Replaces all Sky/Sun actors with the Ultra Dynamic Sky Actor, to be able to use the functions from this page. Internally this calls <code>Sky.DestroyAllSky()</code> automatically","parameters":[{"type":"boolean","name":"spawn_weather","default":"false","description":"Whether or not to spawn the Weather Actor (to be able to use Weather related methods)"}]},{"authority":"client","name":"DestroyAllSky","description":"Destroys all Directional Lights, Sky Lights, Exponential Height Fogs, Volumetric Clouds, Sky Atmosphere, Ultra Dynamic Sky Actors and all Actors with the <code>Sun</code> Actor Tag from the Level"},{"authority":"client","name":"SetCloudCoverage","description":"The amount of coverage for the cloud layer, from a clear sky to overcast","parameters":[{"type":"float","name":"cloud_coverage"}]},{"authority":"client","name":"SetFog","description":"The fogginess of the scene. The impact this has on fog density is scaled from the Fog Density category","parameters":[{"type":"float","name":"fog_percentage"}]},{"authority":"client","name":"SetContrast","description":"A simple contrast boost for the sky material. Cannot affect volumetric clouds","parameters":[{"type":"float","name":"contrast"}]},{"authority":"client","name":"SetOverallIntensity","description":"The overall brightness of the shader","parameters":[{"type":"float","name":"intensity"}]},{"authority":"client","name":"SetNightBrightness","description":"Can be used to scale the brightness of the sky and lighting, at night","parameters":[{"type":"float","name":"brightness"}]},{"authority":"client","name":"SetAnimateTimeOfDay","description":"Sets whether or not to animate the time of day","parameters":[{"type":"boolean","name":"animate","description":"Whether or not to animate the time of day"},{"type":"float?","name":"day_length","default":"30.0","description":"The time (in minutes) from sunrise to sunset"},{"type":"float?","name":"night_length","default":"15.0","description":"The time (in minutes) from sunset to sunrise"}]},{"authority":"client","name":"SetTimeOfDay","description":"Sets the current time","parameters":[{"type":"integer","name":"hours"},{"type":"integer","name":"minutes"}]},{"authority":"client","name":"GetTimeOfDay","description":"Gets the current time","return":[{"type":"integer","description":"hours"},{"type":"integer","description":"minutes"},{"type":"integer","description":"seconds"}]},{"authority":"client","name":"IsSpawned","description":"Returns if the Ultra Dynamic Sky was spawned","parameters":[{"type":"boolean","name":"including_weather","description":"if to check for Weather Actor too"}],"return":[{"type":"boolean"}]},{"authority":"client","name":"GetWeather","description":"Gets the current weather","return":[{"type":"WeatherType"}]},{"authority":"client","name":"ChangeWeather","description":"Gets the current time","parameters":[{"type":"WeatherType","name":"weather","description":"weather to change"},{"type":"float","name":"transition_time","description":"fade time to completely change to new weather"}]}]}'),Steam:JSON.parse('{"name":"Steam","description":"Interact with Steam APIs.","authority":"client","static_functions":[{"name":"SetRichPresence","description":"Sets Steam Rich Presence text","authority":"client","parameters":[{"type":"string","name":"text","description":""}]}]}'),Timer:JSON.parse('{"name":"Timer","description":"Execute code at specified time intervals.","authority":"both","static_functions":[{"name":"SetTimeout","authority":"both","description":"Executes a function, after waiting a specified number of milliseconds","parameters":[{"type":"function","name":"callback","description":"The callback that will be executed"},{"type":"integer","name":"milliseconds","default":"0","description":"The time in milliseconds to wait before executing the function"},{"type":"any","name":"parameters...","default":"nil","description":"Additional parameters to pass to the function"}],"return":[{"type":"integer","description":"the timeout_id"}]},{"name":"SetInterval","authority":"both","description":"Same as SetTimeout(), but repeats the execution of the function continuously","parameters":[{"type":"function","name":"callback","description":"The callback that will be executed.<br/>Return false to stop it from being called."},{"type":"integer","name":"milliseconds","default":"0","description":"The time in milliseconds the timer should delay in between executions of the specified function"},{"type":"any","name":"parameters...","default":"nil","description":"Additional parameters to pass to the function"}],"return":[{"type":"integer","description":"the interval_id"}]},{"name":"ClearTimeout","authority":"both","description":"Stops the execution of the function specified in SetTimeout()","parameters":[{"type":"integer","name":"timeout_id","description":"The ID value returned by SetTimeout() is used as the parameter for this method"}]},{"name":"ClearInterval","authority":"both","description":"Stops the execution of the function specified in SetInterval()","parameters":[{"type":"integer","name":"interval_id","description":"The ID value returned by SetInterval() is used as the parameter for this method"}]},{"name":"Bind","authority":"both","description":"Binds a Timer to any Actor. The timer will be automatically cleared when the Actor is destroyed","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"},{"type":"Actor","name":"actor","description":"Actor to be bound"}]},{"name":"IsValid","authority":"both","description":"Checks if a Timer is currently active or waiting to be triggered","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"boolean","name":"is_valid"}]},{"name":"GetElapsedTime","authority":"both","description":"Returns the time elapsed since the last tick","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"float","name":"elapsed_time"}]},{"name":"GetRemainingTime","authority":"both","description":"Returns the time remaining to the next tick","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"float","name":"remaining_time"}]},{"name":"Pause","authority":"both","description":"Pauses the Timer","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]},{"name":"Resume","authority":"both","description":"Resumes the Timer","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]},{"name":"ResetElapsedTime","authority":"both","description":"Resets a Timer to start from beginning","parameters":[{"type":"integer","name":"timer_id","description":"The Timer ID"}]}]}'),Trace:JSON.parse('{"name":"Trace","description":"Trace a ray against the world and get collided objects information.","authority":"client","static_functions":[{"name":"LineSingle","description":"Trace a ray against the world and returns a table with the first blocking hit information","description_long":"Trace a ray against the world and returns a table with the first blocking hit information<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.","authority":"client","return":[{"type":"table","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the ray"},{"type":"Vector","name":"end_location","description":"End location of the ray"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitily pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]},{"name":"LineMulti","description":"Trace a ray against the world using object types and return overlapping hits and then first blocking hit","description_long":"Trace a ray against the world using object types and return overlapping hits and then first blocking hit<br/><br/>Note: The Trace will collide with the ObjectType (in the Collision Settings), even if the channel is ignored below.<br/><br/>Results are sorted, so a blocking hit (if found) will be the last element of the array<br/><br/>Only the single closest blocking result will be generated, no tests will be done after that","authority":"client","return":[{"type":"table[]","table_properties":[{"name":"Success","type":"boolean"},{"name":"Location","type":"Vector"},{"name":"Normal","type":"Vector"},{"name":"Entity","type":"Actor"},{"name":"BoneName","type":"string"},{"name":"ActorName","type":"string"},{"name":"ComponentName","type":"string"},{"name":"SurfaceType","type":"SurfaceType"},{"name":"UV","type":"Vector2D"}]}],"parameters":[{"type":"Vector","name":"start_location","description":"Start location of the ray"},{"type":"Vector","name":"end_location","description":"End location of the ray"},{"type":"CollisionChannel","name":"collision_channel","description":"Supports several channels separating by <code>|</code> (using bit-wise operations)","default":"WorldStatic"},{"type":"TraceMode","name":"trace_mode","description":"Trace Mode, pass all parameters separating by <code>|</code> (using bit-wise operations)<br/><br/>You need to explicitily pass the modes to return the values you want","default":"0"},{"type":"Actor[]","name":"ignored_actors","description":"Array of actors to ignore during the trace","default":"{}"}]}]}'),Viewport:JSON.parse('{"name":"Viewport","description":"Work with screen properties and effects.","authority":"client","static_functions":[{"name":"ProjectWorldToScreen","description":"Transforms a 3D world-space vector into 2D screen coordinates","authority":"client","parameters":[{"type":"Vector","name":"world_position","description":"World 3D position"}],"return":[{"type":"Vector2D"}]},{"name":"DeprojectScreenToWorld","description":"Transforms a 2D screen coordinates into 3D world-space location","authority":"client","parameters":[{"type":"Vector2D","name":"screen_position","description":"Screen position"}],"return":[{"type":"table","table_properties":[{"name":"Position","type":"Vector"},{"name":"Direction","type":"Vector"}]}]},{"name":"SetHardwareCursor","description":"Loads and sets a hardware cursor in the game from a PNG image","authority":"client","parameters":[{"type":"CursorType","name":"cursor_shape","description":""},{"type":"ImagePath","name":"cursor_path","description":"a PNG image relative to Assets/"},{"type":"Vector2D","name":"hotspot","description":"","default":"Vector(0, 0)"}]},{"name":"GetViewportSize","description":"Gets the size of viewport","authority":"client","return":[{"type":"Vector2D","description":"The size of viewport"}]},{"name":"SetMousePosition","description":"Sets the mouse position","authority":"client","parameters":[{"type":"Vector2D","name":"new_position","description":""}]},{"name":"GetMousePosition","description":"Gets the current mouse screen location","authority":"client","return":[{"type":"Vector2D","description":"The current mouse screen location"}]},{"name":"SetCrosshairEnabled","description":"Enables/Disables the Crosshair","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"SetBloodScreenEnabled","description":"Enables/Disables the Blood Screen effect","authority":"client","parameters":[{"type":"boolean","name":"is_enabled","description":""}]},{"name":"SetBloodScreenIntensity","description":"Manually sets the Blood Screen intensity","description_long":"If you want the Blood Screen to do not be overridden, disable it with <code>Client.SetBloodScreenEnabled(false)</code> before","authority":"client","parameters":[{"type":"float","name":"intensity","description":"From 0.0 to 1.0"}]}],"events":[{"name":"Resize","description":"Called when the screen is resized","authority":"client","arguments":[{"type":"Vector2D","name":"new_size","description":"New new screen size"}]}]}')},UtilityClass:{JSON:JSON.parse('{"name":"JSON","description":"JSON library.","static_functions":[{"name":"stringify","description":"Returns a string representing value encoded in JSON","return":[{"type":"string","description":"the table in JSON"}],"parameters":[{"type":"table","name":"value","description":"the table that will become JSON"}]},{"name":"parse","description":"Returns a value representing the decoded JSON string","return":[{"type":"any","description":"the json in table"}],"parameters":[{"type":"string","name":"value","description":"the JSON that will become a table"}]}]}'),NanosMath:JSON.parse('{"name":"NanosMath","description":"A table containing useful and aux Math functions.","static_functions":[{"name":"Round","description":"Rounds a number","return":[{"type":"number","description":"the rounded number"}],"parameters":[{"type":"number","name":"value","description":"The number to be rounded"}]},{"name":"Clamp","description":"Clamps a number","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"},{"type":"number","name":"min","description":"The min value"},{"type":"number","name":"max","description":"The max value"}]},{"name":"ClampAxis","description":"Clamps an angle to the range of [0, 360]","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"}]},{"name":"NormalizeAxis","description":"Clamps an angle to the range of [-180, 180]","return":[{"type":"number","description":"the number clamped"}],"parameters":[{"type":"number","name":"value","description":"The number to be clamped"}]},{"name":"RelativeTo","description":"Calculates the location and rotation relative to an actor","return":[{"type":"Vector","description":"the location relative to the actor"},{"type":"Rotator","description":"the rotation relative to the actor"}],"parameters":[{"type":"Vector","name":"location","description":"The location of the new system"},{"type":"Rotator","name":"rotation","description":"The rotation of the new system"},{"type":"Actor","name":"actor","description":"The actor to be translated to the new system"}]},{"name":"FInterpTo","description":"Interpolate number from Current to Target","return":[{"type":"number"}],"parameters":[{"type":"number","name":"current"},{"type":"number","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"RInterpTo","description":"Interpolate Rotator from Current to Target","return":[{"type":"Rotator"}],"parameters":[{"type":"Rotator","name":"current"},{"type":"Rotator","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"RInterpConstantTo","description":"Interpolate Rotator from Current to Target with a constant step","return":[{"type":"Rotator"}],"parameters":[{"type":"Rotator","name":"current"},{"type":"Rotator","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"VInterpTo","description":"Interpolate Vector from Current to Target","return":[{"type":"Vector"}],"parameters":[{"type":"Vector","name":"current"},{"type":"Vector","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]},{"name":"VInterpConstantTo","description":"Interpolate Vector from Current to Target with a constant step","return":[{"type":"Vector"}],"parameters":[{"type":"Vector","name":"current"},{"type":"Vector","name":"target"},{"type":"number","name":"delta_time"},{"type":"number","name":"interp_speed"}]}]}'),NanosUtils:JSON.parse('{"name":"NanosUtils","description":"A table containing useful and aux functions.","static_functions":[{"name":"IsEntityValid","description":"Returns if an entity is valid","return":[{"type":"boolean","description":"if the entity is valid"}],"parameters":[{"type":"any","name":"entity","description":"Entity to verify"}]},{"name":"Dump","description":"Dumps a table into a readable text","return":[{"type":"string","description":"the table as readable text"}],"parameters":[{"type":"table","name":"table","description":"Table to dump"}]},{"name":"Benchmark","description":"Benchmarks a function performance","description_long":"Benchmarks a function performance, outputs in the console the elapsed time","parameters":[{"type":"string","name":"name","description":"Benchmark name to output"},{"type":"number","name":"amount","description":"Amount of times to loop"},{"type":"function","name":"func","description":"The function to call"},{"type":"any","name":"args...","description":"The arguments of the function to call"}]},{"name":"FormatString","description":"A better string.format","description_long":"A better string.format. replace {num} by the corresponding vararg in a string<br/><br/>Example: <code>NanosUtils.FormatString(\\"Hello {2} I\'m {1}\\", \\"a noob\\", \\"world!\\") -- \\"Hello world! I\'m a noob\\"</code>","return":[{"type":"string","description":"the final text with the arguments"}],"parameters":[{"type":"string","name":"text","description":"Text to format"},{"type":"any","name":"args...","description":"The arguments to replace"}]},{"name":"ShallowCopyTable","description":"Performs a shallow copy of a table","return":[{"type":"table","description":"the copied table"}],"parameters":[{"type":"table","name":"table","description":"The table to shallow copy"}]}]}')}},BleedingEdge:{Class:{Entity:m,Actor:u,Pickable:y,Paintable:f,Billboard:g,Blueprint:b,Cable:v,Canvas:_,Character:S,CharacterSimple:w,Database:k,Decal:C,File:T,Grenade:A,Light:P,Melee:M,Particle:R,Player:D,Prop:V,SceneCapture:G,StaticMesh:x,Sound:E,TextRender:I,Trigger:N,Vehicle:W,Weapon:L,WebUI:B},Struct:{Color:F,Matrix:U,Quat:H,Rotator:O,Vector:z,Vector2D:q},StaticClass:{Assets:J,Chat:j,Client:Y,Console:K,Debug:Z,Discord:X,Events:Q,HTTP:$,Input:ee,Level:te,Navigation:ae,Package:ne,PostProcess:re,Server:ie,Sky:oe,Steam:se,Timer:le,Trace:ce,Viewport:pe},UtilityClass:{JSON:de,NanosMath:he,NanosUtils:me}}};function qe(e,t){for(const a in e){let n=e[a];const r=n.name.startsWith("Get");if(n.name.startsWith("Set")||r){const a=n.name.replace(r?"G":"S",r?"S":"G");for(const r in e){e[r].name==a&&(n.relations||(n.relations={}),n.relations[t]||(n.relations[t]=[]),n.relations[t].includes(a)||n.relations[t].push(a))}}}}function Je(e){e.functions&&(e.functions.sort(((e,t)=>e.name>t.name)),qe(e.functions,"functions")),e.static_functions&&(e.static_functions.sort(((e,t)=>e.name>t.name)),qe(e.static_functions,"static_functions")),e.events&&e.events.sort(((e,t)=>e.name>t.name))}for(const Ut in ze){for(const e in ze[Ut].Class)Je(ze[Ut].Class[e]);for(const e in ze[Ut].StaticClass)Je(ze[Ut].StaticClass[e])}const je=ze,Ye={StaticMeshPath:d.p2.StaticMesh,SkeletalMeshPath:d.p2.SkeletalMesh,AnimationPath:d.p2.Animation,ParticlePath:d.p2.Particle,MaterialPath:d.p2.Material,MapPath:d.p2.Map,BlueprintPath:d.p2.Blueprint,SoundPath:d.p2.Sound,ImagePath:d.p2.Image,HTMLPath:d.p2.HTML};function Ke(e){const t=e.endsWith("?");t&&(e=e.slice(0,-1));const a=e.endsWith("[]");a&&(e=e.slice(0,-2));const i=e.charAt(0).toUpperCase()+e.slice(1),o=d.rt[i]?d.rt[i]:d.PZ[e]?d.PZ[e]:Ye[e]?Ye[e]:d.Ut[e]?d.Ut[e]:null;return o?(0,r.kt)(n.Fragment,null,a?(0,r.kt)(n.Fragment,null,(0,r.kt)(d.rt.Table,null)," of "):"",(0,r.kt)(o,{mdxType:"TypeElement"})," ",t?(0,r.kt)(n.Fragment,null,"or ",(0,r.kt)(d.rt.Nil,null)):""):(0,r.kt)(d.Yb,{mdxType:"Enums"},e)}function Ze(e){return e.split("|").map((e=>Ke(e))).reduce(((e,t)=>[e," or ",t]))}function Xe(e){return e.map((e=>Ze(e.type))).reduce(((e,t)=>[e,(0,r.kt)(pt,{mdxType:"CommaSeparator"}),t]))}function Qe(e){if(e.table_properties){return"in the format <code>{ "+e.table_properties.map((e=>" "+e.name+": "+e.type))+" }</code>"}return e.description}function $e(e){const t=e.map((e=>e.description||e.table_properties?(0,r.kt)("span",{dangerouslySetInnerHTML:{__html:Qe(e)}}):null)).reduce(((e,t)=>[e,", ",t]));return t?(0,r.kt)(n.Fragment,null,"(",t,")"):""}const et={client:(0,r.kt)(n.Fragment,null,"This class can only be spawned on \ud83d\udfe7 ",(0,r.kt)("a",{href:"/docs/core-concepts/scripting/authority-concepts"},"Client"),"."),server:(0,r.kt)(n.Fragment,null,"This class can only be spawned on \ud83d\udfe6 ",(0,r.kt)("a",{href:"/docs/core-concepts/scripting/authority-concepts"},"Server"),"."),both:(0,r.kt)(n.Fragment,null,"This class can be spawned on both \ud83d\udfe7 ",(0,r.kt)("a",{href:"/docs/core-concepts/scripting/authority-concepts"},"Client")," and \ud83d\udfe6 ",(0,r.kt)("a",{href:"/docs/core-concepts/scripting/authority-concepts"},"Server")," (if you spawn it on client, it won't be synchronized with other players).")},tt={client:(0,r.kt)(n.Fragment,null,"This static class can be accessed only on \ud83d\udfe7 ",(0,r.kt)("a",{href:"/docs/core-concepts/scripting/authority-concepts"},"Client"),"."),server:(0,r.kt)(n.Fragment,null,"This static class can be accessed only on \ud83d\udfe6 ",(0,r.kt)("a",{href:"/docs/core-concepts/scripting/authority-concepts"},"Server"),"."),both:(0,r.kt)(n.Fragment,null,"This static class can be accessed on both \ud83d\udfe7 ",(0,r.kt)("a",{href:"/docs/core-concepts/scripting/authority-concepts"},"Client")," and \ud83d\udfe6 ",(0,r.kt)("a",{href:"/docs/core-concepts/scripting/authority-concepts"},"Server"),".")};function at(e){return`${e.name}${null!=e.default?"?":""}`}function nt(e){return e?e.map((e=>at(e))).join(", "):""}function rt(e,t){return`local my_${e.name.toLowerCase()} = ${e.name}(${nt(e.constructors[t].parameters)})`}function it(e){return e.return?1==e.return.length?"local ret = ":`local${e.return.map(((e,t)=>" ret_0"+(t+1)))} = `:""}function ot(e,t){return`${it(t)}my_${e.toLowerCase()}:${t.name}(${nt(t.parameters)})`}function st(e,t){return`${it(t)}${e}.${t.name}(${nt(t.parameters)})`}function lt(e,t){return`${e}.Subscribe("${t.name}", function(${nt(t.arguments)})\n\nend)`}const ct=e=>{let{authority:t,is_static:a}=e;return(0,r.kt)(s.Z,{type:"info",icon:"\ud83d\udc82",title:"Authority",mdxType:"Admonition"},a?tt[t]:et[t])},pt=()=>(0,r.kt)("span",{className:"comma-separator"}),dt=()=>(0,r.kt)(s.Z,{type:"tip",icon:"\ud83d\udc50",title:"Open Source",mdxType:"Admonition"},"This structure is Open Sourced on ",(0,r.kt)("a",{href:"https://github.com/nanos-world/nanos-world-lua-lib"},"GitHub"),". Feel free to make pull requests and suggest changes!"),ht=e=>{let{inheritance:t}=e;return(0,r.kt)(s.Z,{type:"info",icon:"\ud83d\udc6a",title:"Inheritance",mdxType:"Admonition"},"This class shares methods and events from ",t.map((e=>Ke(e))).reduce(((e,t)=>[e,(0,r.kt)(pt,{mdxType:"CommaSeparator"}),t])),".")},mt=()=>(0,r.kt)(s.Z,{type:"info",icon:"\ud83d\uddff",title:"Static Class",mdxType:"Admonition"},"This is a ",(0,r.kt)("b",null,"Static Class"),". You can access it's methods directly with ",(0,r.kt)("code",null,"."),". It is not possible to initialize or create new instances.");function ut(e){return"server"==e?(0,r.kt)(d.aj.ServerOnly,null):"client"==e?(0,r.kt)(d.aj.ClientOnly,null):"authority"==e?(0,r.kt)(d.aj.AuthorityOnly,null):"network-authority"==e?(0,r.kt)(d.aj.NetworkAuthority,null):"both"==e?(0,r.kt)(d.aj.Both,null):""}function yt(e){return[...e.functions?e.functions.map((function(e){return(0,r.kt)("a",{href:`#function-${e.toLowerCase()}`},e)})):[],...e.static_functions?e.static_functions.map((function(e){return(0,r.kt)("a",{href:`#static-function-${e.toLowerCase()}`},e)})):[],...e.events?e.events.map((function(e){return(0,r.kt)("a",{href:`#event-${e.toLowerCase()}`},e)})):[],...e.etc?e.etc.map((function(e){return(0,r.kt)("a",{href:`${e.url}`},e.label)})):[]].reduce(((e,t)=>[e,", ",t]))}const ft=e=>{let{function_data:t,is_static:a,class_name:i}=e;return(0,r.kt)(n.Fragment,null,(0,r.kt)("hr",null),(0,r.kt)("h3",{id:`${a?"static-function":"function"}-${t.name.toLowerCase()}`},ut(t.authority),(0,r.kt)("code",null,t.name)),(0,r.kt)("blockquote",null,(0,r.kt)("span",{dangerouslySetInnerHTML:{__html:t.description_long?t.description_long:t.description}}),t.return?(0,r.kt)(n.Fragment,null,t.description_long||t.description?(0,r.kt)(n.Fragment,null,(0,r.kt)("br",null),(0,r.kt)("br",null)):(0,r.kt)(n.Fragment,null),(0,r.kt)(n.Fragment,null,"Returns "),Xe(t.return)," ",$e(t.return)):""),(0,r.kt)(o(),{className:"language-lua",mdxType:"CodeBlock"},a?st(i,t):ot(i,t)),Array.isArray(t.parameters)&&t.parameters.length>0?(0,r.kt)("div",{class:"table-wrapper"},(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Type"),(0,r.kt)("th",null,"Parameter"),(0,r.kt)("th",null,"Default"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,t.parameters.map((function(e){return(0,r.kt)("tr",null,(0,r.kt)("td",null,Ze(e.type)),(0,r.kt)("td",null,(0,r.kt)("code",null,at(e))),(0,r.kt)("td",{style:{whiteSpace:"nowrap"}},null!=e.default?(0,r.kt)("code",null,e.default):""),(0,r.kt)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:e.description}}))}))))):(0,r.kt)(n.Fragment,null),t.relations?(0,r.kt)("span",{className:"relations"},"See also ",yt(t.relations),"."):(0,r.kt)(n.Fragment,null))},gt=e=>{let{event_data:t,class_name:a}=e;return(0,r.kt)(n.Fragment,null,(0,r.kt)("hr",null),(0,r.kt)("h3",{id:`event-${t.name.toLowerCase()}`},ut(t.authority),(0,r.kt)("code",null,t.name)),(0,r.kt)("blockquote",{dangerouslySetInnerHTML:{__html:`${t.description_long?t.description_long:t.description}${t.return?"<br/><br/>"+t.return[0].description:""}`}}),(0,r.kt)(o(),{className:"language-lua",mdxType:"CodeBlock"},lt(a,t)),Array.isArray(t.arguments)&&t.arguments.length>0?(0,r.kt)("div",{class:"table-wrapper"},(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Type"),(0,r.kt)("th",null,"Argument"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,t.arguments.map((function(e){return(0,r.kt)("tr",null,(0,r.kt)("td",null,Ze(e.type)),(0,r.kt)("td",null,(0,r.kt)("code",null,e.name)),(0,r.kt)("td",{dangerouslySetInnerHTML:{__html:e.description},style:{wordBreak:"break-word"}}))}))))):(0,r.kt)(n.Fragment,null),t.relations?(0,r.kt)("span",{className:"relations"},"See also ",yt(t.relations),"."):(0,r.kt)(n.Fragment,null))},bt=e=>{let{class_name:t,function_data:a,base_class:n}=e;return(0,r.kt)(p.ZP,{interactive:!0,maxWidth:1200,animation:"scale-subtle",content:(0,r.kt)(h.ZS,{class_name:t,function_data:a,mdxType:"StaticFunctionToolTip"}),mdxType:"Tippy"},(0,r.kt)("b",null,(0,r.kt)(l.rU,{to:`${n?`/docs/scripting-reference/classes/base-classes/${n.toLowerCase()}`:""}#static-function-${a.name.toLowerCase()}`,className:"hover-link",mdxType:"Link"},(0,r.kt)("code",null,a.name))))},vt=e=>{let{class_name:t,function_data:a,base_class:n}=e;return(0,r.kt)(p.ZP,{interactive:!0,maxWidth:1200,animation:"scale-subtle",content:(0,r.kt)(h.RO,{class_name:t,function_data:a,mdxType:"FunctionToolTip"}),mdxType:"Tippy"},(0,r.kt)("b",null,(0,r.kt)(l.rU,{to:`${n?`/docs/scripting-reference/classes/base-classes/${n.toLowerCase()}`:""}#function-${a.name.toLowerCase()}`,className:"hover-link",mdxType:"Link"},(0,r.kt)("code",null,a.name))))},_t=e=>{let{class_name:t,event_data:a,base_class:n}=e;return(0,r.kt)(p.ZP,{interactive:!0,maxWidth:1200,animation:"scale-subtle",content:(0,r.kt)(h.CD,{class_name:t,event_data:a,mdxType:"EventToolTip"}),mdxType:"Tippy"},(0,r.kt)("b",null,(0,r.kt)(l.rU,{to:`${n?`/docs/scripting-reference/classes/base-classes/${n.toLowerCase()}`:""}#event-${a.name.toLowerCase()}`,className:"hover-link",mdxType:"Link"},(0,r.kt)("code",null,a.name))))},St=e=>{let{class_name:t,functions_list:a,base_class:n}=e;return(0,r.kt)("div",{class:"table-wrapper"},(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null),(0,r.kt)("th",null,"Returns"),(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,a.map((function(e){return(0,r.kt)("tr",null,(0,r.kt)("td",{width:"50px"},ut(e.authority)," "),(0,r.kt)("td",null,e.return?Xe(e.return):""),(0,r.kt)("td",null,(0,r.kt)(bt,{class_name:t,base_class:n,function_data:e,mdxType:"StaticFunctionNameDeclaration"})),(0,r.kt)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:e.description}}))})))))},wt=e=>{let{class_name:t,functions_list:a,base_class:n}=e;return(0,r.kt)("div",{class:"table-wrapper"},(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null),(0,r.kt)("th",null,"Returns"),(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,a.map((function(e){return(0,r.kt)("tr",null,(0,r.kt)("td",{width:"50px"},ut(e.authority)," "),(0,r.kt)("td",null,e.return?Xe(e.return):""),(0,r.kt)("td",null,(0,r.kt)(vt,{class_name:t,base_class:n,function_data:e,mdxType:"FunctionNameDeclaration"})),(0,r.kt)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:e.description}}))})))))},kt=e=>{let{type:t,name:a,inherited_class_name:n,base_class:i}=e;const o=Ct(t,a);return(0,r.kt)("div",{class:"table-wrapper"},(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null),(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,o.events.map((function(e){return(0,r.kt)("tr",null,(0,r.kt)("td",{width:"50px"},ut(e.authority)," "),(0,r.kt)("td",null,(0,r.kt)(_t,{class_name:n,base_class:i,event_data:e,mdxType:"EventNameDeclaration"})),(0,r.kt)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:e.description}}))})))))},Ct=(e,t)=>{const a="current"==(0,c.zu)().name;return je[a?"BleedingEdge":"Stable"][e][t]},Tt=e=>{let{type:t,name:a,image:i,is_static:o,is_open_source:s}=e;const l=Ct(t,a);return(0,r.kt)(n.Fragment,null,(0,r.kt)("p",{dangerouslySetInnerHTML:{__html:l.description}}),i?(0,r.kt)("p",null,(0,r.kt)("img",{src:i})):"",s?(0,r.kt)(dt,{mdxType:"OpenSourceAdmonition"}):"",l.authority?(0,r.kt)(ct,{authority:l.authority,is_static:o,mdxType:"AuthorityAdmonition"}):"",l.inheritance?(0,r.kt)(ht,{inheritance:l.inheritance,mdxType:"InheritanceAdmonition"}):"",o?(0,r.kt)(mt,{mdxType:"StaticClassAdmonition"}):"")},At=e=>{let{type:t,name:a}=e;const i=Ct(t,a);return i.constructors.map((e=>(0,r.kt)(n.Fragment,null,(0,r.kt)("h4",{id:`constructor-${e.description.toLowerCase().replace(" ","-")}`},e.description),(0,r.kt)(o(),{className:"language-lua",mdxType:"CodeBlock"},rt(i,0)),(0,r.kt)("div",{class:"table-wrapper"},(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Type"),(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Default"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,e.parameters.map((function(e){return(0,r.kt)("tr",null,(0,r.kt)("td",null,Ze(e.type)),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("code",null,e.name))),(0,r.kt)("td",{style:{whiteSpace:"nowrap"}},null!=e.default?(0,r.kt)("code",null,e.default):""),(0,r.kt)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:e.description}}))}))))))))},Pt=e=>{let{inherited_class_name:t}=e;const a=Ct("Class","Entity");return(0,r.kt)(n.Fragment,null,(0,r.kt)("details",null,(0,r.kt)("summary",null,"Inherited Entity Static Functions"),(0,r.kt)(Ft,{href:"scripting-reference/classes/base-classes/entity",mdxType:"ReferenceLink"},"Base Entity"),(0,r.kt)(St,{class_name:t,base_class:"Entity",functions_list:a.static_functions,mdxType:"StaticFunctionListDeclaration"})))},Mt=e=>{let{inherited_class_name:t}=e;const a=Ct("Class","Entity");return(0,r.kt)(n.Fragment,null,(0,r.kt)("details",null,(0,r.kt)("summary",null,"Inherited Entity Functions"),(0,r.kt)(Ft,{href:"scripting-reference/classes/base-classes/Entity",mdxType:"ReferenceLink"},"Base Entity"),(0,r.kt)(wt,{class_name:t,base_class:"Entity",functions_list:a.functions,mdxType:"FunctionListDeclaration"})))},Rt=e=>{let{inherited_class_name:t}=e;Ct("Class","Entity");return(0,r.kt)(n.Fragment,null,(0,r.kt)("details",null,(0,r.kt)("summary",null,"Inherited Entity Events"),(0,r.kt)(Ft,{href:"scripting-reference/classes/base-classes/Entity",mdxType:"ReferenceLink"},"Base Entity"),(0,r.kt)(kt,{type:"Class",name:"Entity",inherited_class_name:t,base_class:"Entity",mdxType:"EventListDeclaration"})))},Dt=e=>{let{inherited_class_name:t}=e;const a=Ct("Class","Actor");return(0,r.kt)(n.Fragment,null,(0,r.kt)("details",null,(0,r.kt)("summary",null,"Inherited Actor Functions"),(0,r.kt)(Ft,{href:"scripting-reference/classes/base-classes/actor",mdxType:"ReferenceLink"},"Base Actor"),(0,r.kt)(wt,{class_name:t,base_class:"Actor",functions_list:a.functions,mdxType:"FunctionListDeclaration"})))},Vt=e=>{let{inherited_class_name:t}=e;const a=Ct("Class","Paintable");return(0,r.kt)(n.Fragment,null,(0,r.kt)("details",null,(0,r.kt)("summary",null,"Inherited Paintable Functions"),(0,r.kt)(Ft,{href:"scripting-reference/classes/base-classes/paintable",mdxType:"ReferenceLink"},"Base Paintable"),(0,r.kt)(wt,{class_name:t,base_class:"Paintable",functions_list:a.functions,mdxType:"FunctionListDeclaration"})))},Gt=e=>{let{inherited_class_name:t}=e;const a=Ct("Class","Pickable");return(0,r.kt)(n.Fragment,null,(0,r.kt)("details",null,(0,r.kt)("summary",null,"Inherited Pickable Functions"),(0,r.kt)(Ft,{href:"scripting-reference/classes/base-classes/pickable",mdxType:"ReferenceLink"},"Base Pickable"),(0,r.kt)(wt,{class_name:t,base_class:"Pickable",functions_list:a.functions,mdxType:"FunctionListDeclaration"})))},xt=e=>{let{inherited_class_name:t}=e;Ct("Class","Actor");return(0,r.kt)(n.Fragment,null,(0,r.kt)("details",null,(0,r.kt)("summary",null,"Inherited Actor Events"),(0,r.kt)(Ft,{href:"scripting-reference/classes/base-classes/actor",mdxType:"ReferenceLink"},"Base Actor"),(0,r.kt)(kt,{type:"Class",name:"Actor",inherited_class_name:t,base_class:"Actor",mdxType:"EventListDeclaration"})))},Et=e=>{let{inherited_class_name:t}=e;return(0,r.kt)("details",null,(0,r.kt)("summary",null,"Inherited Pickable Events"),(0,r.kt)(Ft,{href:"scripting-reference/classes/base-classes/pickable",mdxType:"ReferenceLink"},"Base Pickable"),(0,r.kt)(kt,{type:"Class",name:"Pickable",inherited_class_name:t,base_class:"Pickable",mdxType:"EventListDeclaration"}))},It=e=>{let{type:t,name:a}=e;const i=Ct(t,a);return(0,r.kt)(n.Fragment,null,i.inheritance&&i.inheritance.includes("Entity")?(0,r.kt)(Mt,{inherited_class_name:i.name,mdxType:"BaseEntityFunctions"}):"",i.inheritance&&i.inheritance.includes("Actor")?(0,r.kt)(Dt,{inherited_class_name:i.name,mdxType:"BaseActorFunctions"}):"",i.inheritance&&i.inheritance.includes("Paintable")?(0,r.kt)(Vt,{inherited_class_name:i.name,mdxType:"BasePaintableFunctions"}):"",i.inheritance&&i.inheritance.includes("Pickable")?(0,r.kt)(Gt,{inherited_class_name:i.name,mdxType:"BasePickableFunctions"}):"",null==i.functions?(0,r.kt)("i",null,"This entity doesn't have own functions."):(0,r.kt)(n.Fragment,null,(0,r.kt)(wt,{class_name:i.name,functions_list:i.functions,mdxType:"FunctionListDeclaration"}),i.functions.map((e=>(0,r.kt)(ft,{function_data:e,class_name:i.name,mdxType:"FunctionDeclaration"})))))},Nt=e=>{let{type:t,name:a}=e;const i=Ct(t,a);return(0,r.kt)(n.Fragment,null,i.inheritance&&i.inheritance.includes("Entity")?(0,r.kt)(Pt,{inherited_class_name:i.name,mdxType:"BaseEntityStaticFunctions"}):"",null==i.static_functions?(0,r.kt)("i",null,"This entity doesn't have own static functions."):(0,r.kt)(n.Fragment,null,(0,r.kt)(St,{class_name:i.name,functions_list:i.static_functions,mdxType:"StaticFunctionListDeclaration"}),i.static_functions.map((e=>(0,r.kt)(ft,{function_data:e,is_static:!0,class_name:i.name,mdxType:"FunctionDeclaration"})))))},Wt=e=>{let{type:t,name:a}=e;const i=Ct(t,a);return(0,r.kt)(n.Fragment,null,i.inheritance&&i.inheritance.includes("Entity")?(0,r.kt)(Rt,{inherited_class_name:i.name,mdxType:"BaseEntityEvents"}):"",i.inheritance&&i.inheritance.includes("Actor")?(0,r.kt)(xt,{inherited_class_name:i.name,mdxType:"BaseActorEvents"}):"",i.inheritance&&i.inheritance.includes("Pickable")?(0,r.kt)(Et,{inherited_class_name:i.name,mdxType:"BasePickableEvents"}):"",null==i.events?(0,r.kt)("i",null,"This entity doesn't have own events."):(0,r.kt)(n.Fragment,null,(0,r.kt)(kt,{type:t,name:i.name,inherited_class_name:i.name,mdxType:"EventListDeclaration"}),i.events.map((e=>(0,r.kt)(gt,{event_data:e,class_name:i.name,mdxType:"EventDeclaration"})))))},Lt=e=>{let{type:t,name:a}=e;const i=Ct(t,a);return(0,r.kt)(n.Fragment,null,null==i.properties?(0,r.kt)("i",null,"This entity doesn't have properties."):(0,r.kt)("div",{class:"table-wrapper"},(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Type"),(0,r.kt)("th",null,"Name"),(0,r.kt)("th",null,"Description"))),(0,r.kt)("tbody",null,i.properties.map((function(e){return(0,r.kt)("tr",null,(0,r.kt)("td",null,Ke(e.type)),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("code",null,e.name))),(0,r.kt)("td",{style:{wordBreak:"break-word"},dangerouslySetInnerHTML:{__html:e.description}}))}))))))},Bt=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},Ft=(Bt("TypeElement"),Bt("ReferenceLink"))},16131:(e,t,a)=>{a.d(t,{K:()=>i,r:()=>o});var n=a(67294),r=a(72486);const i=e=>{let{enum_name:t,enum_data:a,is_tooltip:r}=e;return n.createElement(n.Fragment,null,n.createElement("h3",{id:r?"":t.toLowerCase()},r?n.createElement(n.Fragment,null,"Enum ",t):n.createElement("code",null,t)),n.createElement("table",{style:{width:"100%",display:"table","margin-bottom":"0"}},n.createElement("thead",null,n.createElement("th",null,"Label"),n.createElement("th",null,"Value"),n.createElement("th",null,"Description")),n.createElement("tbody",null,a?a.map((e=>n.createElement("tr",null,n.createElement("td",{style:{"white-space":"nowrap"}},n.createElement("code",null,t,".",e.key)),n.createElement("td",{style:{"white-space":"nowrap"}},n.createElement("code",null,e.value)),n.createElement("td",{style:{"word-break":"break-word"},dangerouslySetInnerHTML:{__html:e.description}})))):"")),r?"":n.createElement("hr",null))},o=()=>Object.keys(r).map((e=>n.createElement(i,{enum_name:e,enum_data:r[e]})))},6045:(e,t,a)=>{a.d(t,{CD:()=>h,IO:()=>l,RO:()=>u,RU:()=>d,X7:()=>p,ZS:()=>m,ci:()=>y,zl:()=>c});var n=a(67294),r=a(1841),i=a.n(r),o=a(16131),s=a(79322);const l=e=>{let{img:t,title:a,description:r}=e;return n.createElement(n.Fragment,null,n.createElement("h3",null,n.createElement("img",{src:t,title:a,style:{width:"24px","vertical-align":"middle","margin-right":"5px"}})," ",a),n.createElement("span",{dangerouslySetInnerHTML:{__html:r}}))},c=e=>{let{label:t,description:a}=e;return n.createElement(n.Fragment,null,n.createElement("h3",null,t),n.createElement("span",{dangerouslySetInnerHTML:{__html:a}}))},p=e=>{let{class_name:t,description:a}=e;return n.createElement(n.Fragment,null,n.createElement("h3",null,t," Class"),n.createElement("span",{dangerouslySetInnerHTML:{__html:a}}))},d=e=>{let{struct_name:t,description:a}=e;return n.createElement(n.Fragment,null,n.createElement("h3",null,t," Struct"),n.createElement("span",{dangerouslySetInnerHTML:{__html:a}}))},h=e=>{let{class_name:t,event_data:a}=e;return n.createElement(i(),{className:"language-lua"},(0,s.c3)(t,a))},m=e=>{let{class_name:t,function_data:a}=e;return n.createElement(i(),{className:"language-lua"},(0,s.R6)(t,a))},u=e=>{let{class_name:t,function_data:a}=e;return n.createElement(i(),{className:"language-lua"},(0,s.p2)(t,a))},y=e=>{let{enum_name:t,enum_data:a}=e;return n.createElement(o.K,{enum_name:t,enum_data:a,is_tooltip:!0})}},87469:(e,t,a)=>{a.d(t,{PZ:()=>ne,SM:()=>q,Ut:()=>ae,YS:()=>z,Yb:()=>Z,aj:()=>ee,p2:()=>re,rt:()=>te});a(87462),a(67294);var n=a(3905),r=a(80143),i=a(73727),o=a(87083),s=(a(72963),a(18846),a(6045)),l=a(72486),c=a(8082),p=a(51375),d=a(25767),h=a(85274),m=a(68088),u=a(22551),y=a(2627),f=a(89252),g=a(60080),b=a(17516),v=a(16736),_=a(3898),S=a(81514),w=a(7832),k=a(95645),C=a(76662),T=a(38143),A=a(83887),P=a(39526),M=a(75938),R=a(19093),D=a(18259),V=a(12553),G=a(38019),x=a(98763),E=a(10747),I=a(8718),N=a(65930),W=a(9685),L=a(8461),B=a(45001),F=a(58752);const U={"Base Entity":c,"Base Actor":p,"Base Pickable":d,"Base Paintable":h,Billboard:m,Blueprint:u,Cable:y,Canvas:f,Character:g,Database:b,Decal:v,File:_,Grenade:S,Light:w,Melee:k,Particle:C,Player:T,Prop:A,SceneCapture:P,StaticMesh:M,Sound:R,TextRender:D,Trigger:V,Vehicle:G,Weapon:x,WebUI:E},O={Color:I,Matrix:N,Quat:L,Rotator:W,Vector:B,Vector2D:F},H=()=>(0,r.zu)().path,z=e=>{let{title:t,description:a,href:r,image_src:i}=e;return(0,n.kt)("a",{class:"card-link",href:r.startsWith("http")?r:`${H()}/${r}`},(0,n.kt)("img",{src:i||"/img/docs/nanos-world-background.jpg"}),(0,n.kt)("h4",null,t),(0,n.kt)("p",null,a))},q=e=>{let{children:t,href:a}=e;return(0,n.kt)("a",{class:"reference-link",href:a.startsWith("http")?a:`${H()}/${a}`},t,(0,n.kt)("span",null,a))},J=(e,t,a)=>(0,n.kt)(o.ZP,{maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,n.kt)(s.IO,{img:e,title:t,description:a,mdxType:"AuthorityTooltip"}),mdxType:"Tippy"},(0,n.kt)(i.rU,{class:"authority-availability",to:`${H()}/core-concepts/scripting/authority-concepts#methods-and-events-availability`,mdxType:"Link"},(0,n.kt)("img",{src:e,title:t}))),j=e=>(0,n.kt)("a",{href:`${H()}/scripting-reference/glossary/basic-types#${e.toLowerCase()}`},e),Y=(e,t)=>(0,n.kt)(o.ZP,{maxWidth:300,animation:"scale-subtle",placement:"left",content:(0,n.kt)(s.RU,{struct_name:e,description:O[e]?O[e].description:"Struct not found. Soon\u2122.",mdxType:"StructToolTip"}),mdxType:"Tippy"},(0,n.kt)(i.rU,{to:`${H()}/scripting-reference/structs/${t||e.toLowerCase()}`,className:"hover-link",mdxType:"Link"},e)),K=(e,t,a)=>(0,n.kt)(o.ZP,{maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,n.kt)(s.X7,{class_name:`${t} ${e}`,description:U[e]?U[e].description:"Class not found. Soon\u2122.",mdxType:"ClassToolTip"}),mdxType:"Tippy"},(0,n.kt)(i.rU,{to:`${H()}/scripting-reference/classes/${a||e.toLowerCase()}`,className:"hover-link",mdxType:"Link"},e)),Z=e=>{let{children:t}=e;return(0,n.kt)(o.ZP,{interactive:!0,maxWidth:600,animation:"scale-subtle",placement:"left",content:(0,n.kt)(s.ci,{enum_name:t,enum_data:l[t],mdxType:"EnumToolTip"}),mdxType:"Tippy"},(0,n.kt)(i.rU,{to:`${H()}/scripting-reference/glossary/enums#${t.toLowerCase()}`,className:"hover-link",mdxType:"Link"},t))},X=(e,t,a)=>(0,n.kt)(o.ZP,{interactive:!0,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,n.kt)(s.zl,{label:t,description:a,mdxType:"AssetPathToolTip"}),mdxType:"Tippy"},(0,n.kt)(i.rU,{to:`${H()}/core-concepts/assets#referencing-assets-in-scripting`,className:"hover-link",mdxType:"Link"},t)),Q=(e,t,a)=>(0,n.kt)(o.ZP,{interactive:!0,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,n.kt)(s.zl,{label:t,description:a,mdxType:"AssetPathToolTip"}),mdxType:"Tippy"},(0,n.kt)(i.rU,{to:`${H()}/scripting-reference/glossary/basic-types#specialpath`,className:"hover-link",mdxType:"Link"},t)),$=(e,t,a,r)=>(0,n.kt)(o.ZP,{interactive:!0,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,n.kt)(s.zl,{label:t,description:a,mdxType:"AssetPathToolTip"}),mdxType:"Tippy"},(0,n.kt)(i.rU,{to:`${H()}/${r}`,className:"hover-link",mdxType:"Link"},t)),ee={AuthorityOnly:()=>J("/img/scripting/authority-only.svg","Authority Only","This can be only called on the side it was spawned on!"),ServerOnly:()=>J("/img/scripting/server-only.svg","Server Only","This can be only called on <strong>Server</strong> side!"),ClientOnly:()=>J("/img/scripting/client-only.svg","Client Only","This can be only called on <strong>Client</strong> side!"),Both:()=>J("/img/scripting/both.png","Both Sides","This can be called on any side (<strong>Server</strong> or <strong>Client</strong>)!"),NetworkAuthority:()=>J("/img/scripting/network-authority.png","Network Authority","This can be called on <strong>Server</strong> and on <strong>Client's</strong> current Network Authority of this entity!<br/><br/><strong>TIP</strong>: You can validate if the current Local Player has Network Authority on this entity by calling <code>entity:HasNetworkAuthority()</code>.")},te={Number:()=>j("number"),Integer:()=>j("integer"),Float:()=>j("float"),String:()=>j("string"),Boolean:()=>j("boolean"),Table:()=>j("table"),Iterator:()=>j("iterator"),Any:()=>j("any"),Function:()=>j("function"),Nil:()=>j("nil")},ae={Vector:()=>Y("Vector"),Rotator:()=>Y("Rotator"),Color:()=>Y("Color"),Quat:()=>Y("Quat"),Vector2D:()=>Y("Vector2D")},ne={Entity:()=>K("Base Entity","\ud83e\udde9","base-classes/entity"),Actor:()=>K("Base Actor","\ud83c\udfad","base-classes/actor"),Paintable:()=>K("Base Paintable","\ud83c\udfa8","base-classes/paintable"),Pickable:()=>K("Base Pickable","\u2694\ufe0f","base-classes/pickable"),Billboard:()=>K("Billboard","\ud83e\udea7"),Blueprint:()=>K("Blueprint","\ud83d\udd23"),Canvas:()=>K("Canvas","\ud83d\uddbc\ufe0f"),Cable:()=>K("Cable","\u26d3\ufe0f"),Character:()=>K("Character","\ud83e\uddd1"),Database:()=>K("Database","\ud83d\udcbe"),Decal:()=>K("Decal","\ud83d\udd8c\ufe0f"),File:()=>K("File","\ud83d\udcc1"),Grenade:()=>K("Grenade","\ud83d\udca3"),Light:()=>K("Light","\ud83d\udca1"),Melee:()=>K("Melee","\ud83d\udd2a"),Particle:()=>K("Particle","\u2728"),Player:()=>K("Player","\ud83d\udc69\u200d\ud83d\udcbb"),Prop:()=>K("Prop","\ud83d\udce6"),SceneCapture:()=>K("SceneCapture","\ud83d\udcfd\ufe0f","scene-capture"),Sound:()=>K("Sound","\ud83d\udd0a"),StaticMesh:()=>K("StaticMesh","\ud83c\udfe0","static-mesh"),TextRender:()=>K("TextRender","\ud83c\udd92","text-render"),Trigger:()=>K("Trigger","\ud83e\udea4"),Vehicle:()=>K("Vehicle","\ud83d\ude99"),Weapon:()=>K("Weapon","\ud83d\udd2b"),WebUI:()=>K("WebUI","\ud83d\udda5\ufe0f")},re={StaticMesh:()=>X(0,"StaticMesh Reference","StaticMesh Asset Reference in the format:<br/><code>asset-pack::SM_MyAsset</code>."),SkeletalMesh:()=>X(0,"SkeletalMesh Reference","SkeletalMesh Asset Reference in the format:<br/><code>asset-pack::SM_MyAsset</code>."),Animation:()=>X(0,"Animation Reference","Animation Asset Reference in the format:<br/><code>asset-pack::SM_MyAsset</code>."),Particle:()=>X(0,"Particle Reference","Particle Asset Reference in the format:<br/><code>asset-pack::SM_MyAsset</code>."),Material:()=>X(0,"Material Reference","Material Asset Reference in the format:<br/><code>asset-pack::SM_MyAsset</code>."),Map:()=>X(0,"Map Reference","Map Asset Reference in the format:<br/><code>asset-pack::SM_MyAsset</code>."),Blueprint:()=>X(0,"Blueprint Reference","Blueprint Asset Reference in the format:<br/><code>asset-pack::SM_MyAsset</code>."),Sound:()=>Q(0,"Sound Reference","Sound Asset Reference in the format:<br/><code>asset-pack::SM_MyAsset</code><br/><br/>Or as Special Path:<br/><code>package://my-package/Client/sound.ogg</code>."),Image:()=>Q(0,"Image Path","Image Path as Special Path:<br/><code>package://my-package/Client/sound.ogg</code>."),HTML:()=>$(0,"HTML Path","Web URL or HTML File Path:<br/><code>file://UI/index.html</code>.","scripting-reference/classes/webui#html-path-searchers")}},79581:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905)),i=a(87469);const o={title:"Beh\xf6rdenkonzepte",description:"Alles was Sie \xfcber die Konzepte der Beh\xf6rde & Network Authority wissen m\xfcssen.",sidebar_position:2,tags:["scripting"]},s=void 0,l={unversionedId:"core-concepts/scripting/authority-concepts",id:"core-concepts/scripting/authority-concepts",title:"Beh\xf6rdenkonzepte",description:"Alles was Sie \xfcber die Konzepte der Beh\xf6rde & Network Authority wissen m\xfcssen.",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/core-concepts/scripting/authority-concepts.mdx",sourceDirName:"core-concepts/scripting",slug:"/core-concepts/scripting/authority-concepts",permalink:"/de/docs/next/core-concepts/scripting/authority-concepts",draft:!1,editUrl:"https://crowdin.com/project/nanos-world-docs/de",tags:[{label:"scripting",permalink:"/de/docs/next/tags/scripting"}],version:"current",sidebarPosition:2,frontMatter:{title:"Beh\xf6rdenkonzepte",description:"Alles was Sie \xfcber die Konzepte der Beh\xf6rde & Network Authority wissen m\xfcssen.",sidebar_position:2,tags:["scripting"]},sidebar:"main",previous:{title:"Events Guide",permalink:"/de/docs/next/core-concepts/scripting/events-guide"},next:{title:"Paketkommunikation",permalink:"/de/docs/next/core-concepts/scripting/communicating-between-packages"}},c={},p=[{value:"Beh\xf6rde",id:"beh\xf6rde",level:2},{value:"Methods and Events Availability",id:"methods-and-events-availability",level:3},{value:"<AuthorityType.ServerOnly /><strong><code>Serverseite</code></strong>",id:"serverseite",level:4},{value:"<AuthorityType.ClientOnly /><strong><code>Client-Seite</code></strong>",id:"client-seite",level:4},{value:"<AuthorityType.AuthorityOnly /><strong><code>Beh\xf6rdenseite</code></strong>",id:"beh\xf6rdenseite",level:4},{value:"<AuthorityType.NetworkAuthority /><strong><code>Network Authority Side</code></strong>",id:"network-authority-side",level:4},{value:"<AuthorityType.Both /><strong><code>Both Sides</code></strong>",id:"both-sides",level:4},{value:"Netzwerk-Beh\xf6rde",id:"netzwerk-beh\xf6rde",level:2},{value:"Die aktuelle Netzwerkbeh\xf6rde \xfcberschreiben",id:"die-aktuelle-netzwerkbeh\xf6rde-\xfcberschreiben",level:3},{value:"Examples of actions that are only executed by the Network Authority of that Actor",id:"examples-of-actions-that-are-only-executed-by-the-network-authority-of-that-actor",level:4},{value:"Debugging Network &amp; Network Authority",id:"debugging-network--network-authority",level:3},{value:"Entity Square Colors Meaning",id:"entity-square-colors-meaning",level:4},{value:"Entity Trace Colors Meaning",id:"entity-trace-colors-meaning",level:4}],d={toc:p},h="wrapper";function m(e){let{components:t,...o}=e;return(0,r.kt)(h,(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Alles was Sie \xfcber die Konzepte der Beh\xf6rde & Network Authority wissen m\xfcssen."),(0,r.kt)("h2",{id:"beh\xf6rde"},"Beh\xf6rde"),(0,r.kt)("p",null,"Einige Klassen k\xf6nnen nur auf dem Server erzeugt werden, andere k\xf6nnen nur im Client erzeugt werden, und es gibt einige, die sowohl auf Server als auch auf Client erzeugt werden k\xf6nnen. Die Seite, auf der die Klasse entsteht, nennt sich ",(0,r.kt)("strong",{parentName:"p"},"Authority"),"."),(0,r.kt)("h3",{id:"methods-and-events-availability"},"Methods and Events Availability"),(0,r.kt)("p",null,"Einige Methoden und Ereignisse in der API sind nur auf einer bestimmten Seite verf\xfcgbar ","(","Client oder Server",")",", andere sind nur auf der Seite verf\xfcgbar, die ihr Autorit\xe4t",")",":"),(0,r.kt)("h4",{id:"serverseite"},(0,r.kt)(i.aj.ServerOnly,null),(0,r.kt)("strong",{parentName:"h4"},(0,r.kt)("inlineCode",{parentName:"strong"},"Serverseite"))),(0,r.kt)("p",null,"Methode oder Ereignisse, die nur auf der ",(0,r.kt)("strong",{parentName:"p"},"Server")," Seite aufgerufen werden k\xf6nnen."),(0,r.kt)("h4",{id:"client-seite"},(0,r.kt)(i.aj.ClientOnly,null),(0,r.kt)("strong",{parentName:"h4"},(0,r.kt)("inlineCode",{parentName:"strong"},"Client-Seite"))),(0,r.kt)("p",null,"Methoden oder Ereignisse, die nur auf der ",(0,r.kt)("strong",{parentName:"p"},"Client")," Seite aufgerufen werden k\xf6nnen."),(0,r.kt)("h4",{id:"beh\xf6rdenseite"},(0,r.kt)(i.aj.AuthorityOnly,null),(0,r.kt)("strong",{parentName:"h4"},(0,r.kt)("inlineCode",{parentName:"strong"},"Beh\xf6rdenseite"))),(0,r.kt)("p",null,"Methoden oder Ereignisse, die nur auf der Seite aufgerufen werden k\xf6nnen, die sie hervorgerufen hat."),(0,r.kt)("h4",{id:"network-authority-side"},(0,r.kt)(i.aj.NetworkAuthority,null),(0,r.kt)("strong",{parentName:"h4"},(0,r.kt)("inlineCode",{parentName:"strong"},"Network Authority Side"))),(0,r.kt)("p",null,"Methods or Events which can be called in the ",(0,r.kt)("strong",{parentName:"p"},"Server")," and also in the ",(0,r.kt)("strong",{parentName:"p"},"Client")," if the Local Player is the Network Authority of that entity."),(0,r.kt)("h4",{id:"both-sides"},(0,r.kt)(i.aj.Both,null),(0,r.kt)("strong",{parentName:"h4"},(0,r.kt)("inlineCode",{parentName:"strong"},"Both Sides"))),(0,r.kt)("p",null,"Methods or Events which can only be called in any side."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"All entities spawned in the ",(0,r.kt)("strong",{parentName:"p"},"Server")," will be automatically synced in the ",(0,r.kt)("strong",{parentName:"p"},"Client"),". I.e. you can access it's methods and get all data from it without needing to manually sync it."),(0,r.kt)("p",{parentName:"admonition"},"In the same way, entities spawned in the ",(0,r.kt)("strong",{parentName:"p"},"Client")," will only exist for that Client, trying to send those entities to the server will cause errors.")),(0,r.kt)("h2",{id:"netzwerk-beh\xf6rde"},"Netzwerk-Beh\xf6rde"),(0,r.kt)("p",null,"Another important concept in nanos world is the ",(0,r.kt)("strong",{parentName:"p"},"Network Authority"),". We have a ",(0,r.kt)("em",{parentName:"p"},'"distributed network authority"')," concept, which means the work of calculating physics and AI (for example) are automatically assigned and distributed to the clients. In general, if an ",(0,r.kt)("a",{parentName:"p",href:"/de/docs/next/scripting-reference/classes/base-classes/actor"},"Actor")," is near an in-game Character, it's physics will be calculated by that player's device. The Player that is responsible for calculating and sharing the results is called ",(0,r.kt)("strong",{parentName:"p"},"Network Authority"),"."),(0,r.kt)("p",null,"The Player assigned is automatically calculated by the server and takes some things into consideration, this calculation is only made if the Player is possessing a Character:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Die ",(0,r.kt)("strong",{parentName:"li"},"Distanz")," vom Charakter zum Objekt"),(0,r.kt)("li",{parentName:"ul"},"If the Character is ",(0,r.kt)("strong",{parentName:"li"},"grabbing")," a ",(0,r.kt)(i.PZ.Prop,null)),(0,r.kt)("li",{parentName:"ul"},"If the Character is ",(0,r.kt)("strong",{parentName:"li"},"handling")," a ",(0,r.kt)("a",{parentName:"li",href:"/de/docs/next/scripting-reference/classes/base-classes/pickable"},"Pickable")),(0,r.kt)("li",{parentName:"ul"},"Wenn der Charakter ",(0,r.kt)("strong",{parentName:"li"},"ein Fahrzeug f\xe4hrt")),(0,r.kt)("li",{parentName:"ul"},"Wenn der Charakter nur ",(0,r.kt)("strong",{parentName:"li"},"erschossen")," etwas")),(0,r.kt)("p",null,"In all this cases, the Player will be automatically assigned to be the ",(0,r.kt)("strong",{parentName:"p"},"Network Authority")," of that Object."),(0,r.kt)("h3",{id:"die-aktuelle-netzwerkbeh\xf6rde-\xfcberschreiben"},"Die aktuelle Netzwerkbeh\xf6rde \xfcberschreiben"),(0,r.kt)("p",null,"It is possible to override the current Network Authority of a specific entity by using the method ",(0,r.kt)("inlineCode",{parentName:"p"},":SetNetworkAuthority()"),"."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Under certain circumstances, actors may not be in ",(0,r.kt)("strong",{parentName:"p"},"Distributed Network Authority")," mode. This means they cannot have their current network authority changed. Example: if a player is driving a Vehicle or using a Weapon, mandatorily he is the the Vehicle and Weapons's Network Authority, and this cannot be overwritten through scripting. To validate if an Actor can have it overridden, you can use the method ",(0,r.kt)("inlineCode",{parentName:"p"},":IsNetworkDistributed()"),".")),(0,r.kt)("p",null,"You can also prevent it from being automatically distributed to other Players by calling ",(0,r.kt)("inlineCode",{parentName:"p"},":SetNetworkAuthorityAutoDistributed(false)"),"."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Always remember to restore the automatic ",(0,r.kt)("strong",{parentName:"p"},"Network Authority Distribution")," by calling ",(0,r.kt)("inlineCode",{parentName:"p"},":SetNetworkAuthorityAutoDistributed(true)"),". Otherwise that entity may behave completely weird.")),(0,r.kt)("h4",{id:"examples-of-actions-that-are-only-executed-by-the-network-authority-of-that-actor"},"Examples of actions that are only executed by the Network Authority of that Actor"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Objects Physics Sync (einschlie\xdflich beim Aufruf von ",(0,r.kt)("inlineCode",{parentName:"li"},":SetForce()"),")."),(0,r.kt)("li",{parentName:"ul"},"NPCs walking with ",(0,r.kt)("inlineCode",{parentName:"li"},":MoveTo()")," or ",(0,r.kt)("inlineCode",{parentName:"li"},":Follow()"),".")),(0,r.kt)("h3",{id:"debugging-network--network-authority"},"Debugging Network & Network Authority"),(0,r.kt)("p",null,"We've added a new option in the settings to ",(0,r.kt)("strong",{parentName:"p"},"Draw Network Debug")," information in the World, you can toggle it in the settings (",(0,r.kt)("em",{parentName:"p"},"Settings -> Debug -> Draw Network Debug"),"), it will draw squares on each entity and traces representing their networked movement."),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(17580).Z,width:"1916",height:"1079"})),(0,r.kt)("h4",{id:"entity-square-colors-meaning"},"Entity Square Colors Meaning"),(0,r.kt)("p",null,"The Square in the entities represent the state in the Network Authority and it's health."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Color"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Meaning"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("span",{style:{color:"#306CCE"}},"BLUE"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"You ",(0,r.kt)("strong",{parentName:"td"},"are the current Network Authority")," of that entity. ",(0,r.kt)("br",null),"You are sharing sync data to the other players.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"WHITE")),(0,r.kt)("td",{parentName:"tr",align:"left"},"You ",(0,r.kt)("strong",{parentName:"td"},"are not the Network Authority")," and the entity is sleeping. ",(0,r.kt)("br",null),"The current Network Authority is not sending sync data because the entity is sleeping.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("span",{style:{color:"#00A400"}},"GREEN"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"You ",(0,r.kt)("strong",{parentName:"td"},"are not the Network Authority")," and the entity is being synced in a ",(0,r.kt)("strong",{parentName:"td"},"good")," cadence (no lag).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("span",{style:{color:"#FFA500"}},"ORANGE"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"You ",(0,r.kt)("strong",{parentName:"td"},"are not the Network Authority")," and the entity is being synced in an ",(0,r.kt)("strong",{parentName:"td"},"ok")," cadence (small lag - < 100ms).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("span",{style:{color:"#FF0000"}},"RED"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"You ",(0,r.kt)("strong",{parentName:"td"},"are not the Network Authority")," and the entity is being synced in an ",(0,r.kt)("strong",{parentName:"td"},"bad")," cadence (big lag - > 100ms, maybe even with packet loss).")))),(0,r.kt)("h4",{id:"entity-trace-colors-meaning"},"Entity Trace Colors Meaning"),(0,r.kt)("p",null,"The Traces in the entities represent the network data received from the server. If you are the network authority you won't see the traces. The arrow points from where the entity is currently in your machine and where it should be accordingly to the network authority."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Color"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Meaning"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("span",{style:{color:"#00A400"}},"GREEN"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The entity is being synced in a ",(0,r.kt)("strong",{parentName:"td"},"good")," cadence (no lag).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("span",{style:{color:"#FFA500"}},"ORANGE"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The entity is being synced in an ",(0,r.kt)("strong",{parentName:"td"},"ok")," cadence (small lag - < 100ms).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("span",{style:{color:"#FF0000"}},"RED"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The entity is being synced in an ",(0,r.kt)("strong",{parentName:"td"},"bad")," cadence (big lag - > 100ms, maybe even with packet loss).")))))}m.isMDXComponent=!0},17580:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/debug-visualizer-c087044d005e1ae370cc83cde211dad4.jpg"},51375:e=>{e.exports=JSON.parse('{"name":"Actor","description":"An <b>Actor</b> is an object which can be spawned and destroyed through Lua.<br>Actors support 3D transformations such as translation (location), rotation, and scale.<br><br>An <b>Actor</b> is the base for several entities, and all those entities share the same <b>Methods</b> and <b>Events</b> described in this page.","functions":[{"name":"AddImpulse","description":"Applies a force in world world to this Actor","description_long":"Applies a force in world world to this Actor (the force is applied client side, by, in most cases, the player closest to this Actor)","authority":"network-authority","parameters":[{"type":"Vector","name":"force"},{"type":"boolean","name":"velocity_change","default":"false","description":"Whether to ignore mass"}]},{"name":"AttachTo","description":"Attaches this Actor to any other Actor, optionally at a specific bone","description_long":"<p>Attaches this Actor to any other Actor, optionally at a specific bone</p><ul><li><code>AttachmentRule.KeepRelative</code> will keep the current relative position/rotation if already attached.</li><li><code>AttachmentRule.KeepWorld</code> will calculate the new relative position/rotation so the Actor stays at the same position after being attached.</li><li><code>AttachmentRule.SnapToTarget</code> will set the Actor to the same position/rotation as <code>other_actor</code> (or at the bone location) and reset its relative position/rotation to zero.</li></ul><p>Setting <code>lifespan_when_detached</code> to <code>0</code> will automatically destroy this actor when detached, setting it to <code>10</code> will destroy this after 10 seconds when detached.</p>","authority":"authority","parameters":[{"type":"Actor","name":"other","description":"Other actor to attach"},{"type":"AttachmentRule","name":"attachment_rule","default":"SnapToTarget","description":"How to attach"},{"type":"string","name":"bone_name","default":"","description":"Which bone to attach to"},{"type":"float","name":"lifespan_when_detached","default":"-1","description":"Seconds before destroying this Actor when detached"},{"type":"boolean","name":"use_absolute_rotation","default":"false","description":"Whether to force attached object to use absolute rotation (will not follow parent)"}]},{"name":"Detach","description":"Detaches this Actor from AttachedTo Actor","authority":"authority"},{"name":"SetCollision","description":"Sets this Actor\'s collision type","authority":"authority","parameters":[{"type":"CollisionType","name":"collision_type"}]},{"name":"SetDimension","description":"Sets this Actor\'s Dimension","authority":"server","parameters":[{"type":"integer","name":"dimension"}],"relations":{"events":["DimensionChange"]}},{"name":"SetForce","description":"Adds a permanent force to this Actor, set to Vector(0, 0, 0) to cancel","authority":"network-authority","parameters":[{"type":"Vector","name":"force"},{"type":"boolean","name":"is_local","default":"true","description":"Whether to apply the force in local space"}]},{"name":"SetGravityEnabled","description":"Sets whether gravity is enabled on this Actor","authority":"authority","parameters":[{"type":"boolean","name":"is_enabled"}]},{"name":"SetVisibility","description":"Sets whether the actor is visible or not","authority":"both","parameters":[{"type":"boolean","name":"is_visible"}]},{"name":"SetHighlightEnabled","description":"Sets whether the highlight is enabled on this Actor, and which highlight index to use","description_long":"Sets whether the highlight is enabled on this Actor, and which highlight index to use. This will apply the hight on every attached entity too","authority":"client","parameters":[{"type":"boolean","name":"is_enabled"},{"type":"integer","name":"index","default":"0","description":"Index to use (should be <code>0</code>, <code>1</code or <code>2</code>)"}],"relations":{"etc":[{"label":"Client.SetHighlightColor()","url":"/docs/scripting-reference/static-classes/client#static-function-sethighlightcolor"}]}},{"name":"SetOutlineEnabled","description":"Sets whether the outline is enabled on this Actor, and which outline index to use","description_long":"Sets whether the outline is enabled on this Actor, and which outline index to use. This will apply the outline on every attached entity too","authority":"client","parameters":[{"type":"boolean","name":"is_enabled"},{"type":"integer","name":"index","default":"0","description":"Index to use (should be <code>0</code>, <code>1</code or <code>2</code>)"}],"relations":{"etc":[{"label":"Client.SetOutlineColor()","url":"/docs/scripting-reference/static-classes/client#static-function-setoutlinecolor"}]}},{"name":"SetLifeSpan","description":"Sets the time (in seconds) before this Actor is destroyed. After this time has passed, the actor will be automatically destroyed.","authority":"authority","parameters":[{"type":"float","name":"seconds","description":"Seconds before being destroyed"}]},{"name":"SetLocation","description":"Sets this Actor\'s location in the game world","authority":"authority","parameters":[{"type":"Vector","name":"location"}]},{"name":"SetRotation","description":"Sets this Actor\'s rotation in the game world","authority":"authority","parameters":[{"type":"Rotator","name":"rotation"}]},{"name":"SetRelativeLocation","description":"Sets this Actor\'s relative location in local space (only if this actor is attached)","authority":"authority","parameters":[{"type":"Vector","name":"relative_location"}]},{"name":"SetRelativeRotation","description":"Sets this Actor\'s relative rotation in local space (only if this actor is attached)","authority":"authority","parameters":[{"type":"Rotator","name":"relative_rotation"}]},{"name":"SetScale","description":"Sets this Actor\'s scale","authority":"authority","parameters":[{"type":"Vector","name":"scale"}]},{"name":"SetNetworkAuthority","description":"Sets the Player to have network authority over this Actor","description_long":"Sets the Player to have network authority over this Actor. This Player will be manually assigned to handle this Actor\'s physics and share its location with other clients. The authority assignment will still be overridden by the game automatically<br><br>Please refer to <a href=\\"https://docs.nanos.world/docs/core-concepts/scripting/authority-concepts#network-authority\\">Network Authority</a> for more information","authority":"server","parameters":[{"type":"Player","name":"player","default":"nil","description":"New player which will assume the Network Authority of this Actor"}]},{"name":"SetNetworkAuthorityAutoDistributed","description":"Sets if this Actor will auto distribute the network authority betwen players","description_long":"Sets if this Actor will auto distribute the network authority betwen players when idle<br><br>Please refer to <a href=\\"https://docs.nanos.world/docs/core-concepts/scripting/authority-concepts#network-authority\\">Network Authority</a> for more information","authority":"server","parameters":[{"type":"boolean","name":"auto_distribute","description":"If this Actor will be auto network distributed"}]},{"name":"TranslateTo","description":"Smoothly moves this actor to a location over a certain time","authority":"network-authority","parameters":[{"type":"Vector","name":"location"},{"type":"float","name":"time","description":"Time to interpolate from current location to target location"},{"type":"float","name":"exp","default":"0","description":"Exponent used to smooth interpolation. Use <code>0</code> for linear movement"}]},{"name":"RotateTo","description":"Smoothly rotates this actor to an angle over a certain time","authority":"network-authority","parameters":[{"type":"Rotator","name":"rotation"},{"type":"float","name":"time","description":"Time to interpolate from current location to target location"},{"type":"float","name":"exp","default":"0","description":"Exponent used to smooth interpolation. Use <code>0</code> for linear movement"}]},{"name":"IsBeingDestroyed","description":"Returns true if this Actor is being destroyed","description_long":"Returns true if this Actor is being destroyed.<br>You can check this inside events like <code>Drop</code> to see if a Pickable is being dropped because it\'s going to be destroyed","authority":"both","return":[{"type":"boolean"}]},{"name":"IsVisible","description":"Returns true if this Actor is visible","authority":"both","return":[{"type":"boolean"}]},{"name":"IsGravityEnabled","description":"Returns true if gravity is enabled on this Actor","authority":"both","return":[{"type":"boolean"}]},{"name":"IsInWater","description":"Returns true if this Actor is in water","authority":"both","return":[{"type":"boolean"}]},{"name":"IsNetworkDistributed","description":"Returns true if this Actor is currently network distributed","description_long":"Returns true if this Actor is currently network distributed. Only actors being network distributed can have their network authority set<br>Entities have NetworkDistributed automatically disabled when: Attached, Possessed, Grabbed, Picked Up or Driving","authority":"both","return":[{"type":"boolean"}]},{"name":"GetAttachedEntities","description":"Gets all Actors attached to this Actor","authority":"both","return":[{"type":"Actor[]"}]},{"name":"GetAttachedTo","description":"Gets the Actor this Actor is attached to","authority":"both","return":[{"type":"Actor?"}]},{"name":"GetBounds","description":"Gets this Actor\'s bounds","authority":"client","return":[{"type":"table","table_properties":[{"name":"Origin","type":"Vector"},{"name":"BoxExtent","type":"Vector"},{"name":"SphereRadius","type":"float"}]}]},{"name":"GetCollision","description":"Gets this Actor\'s collision type","authority":"both","return":[{"type":"CollisionType"}]},{"name":"GetLocation","description":"Gets this Actor\'s location in the game world","authority":"both","return":[{"type":"Vector"}]},{"name":"GetRelativeLocation","description":"Gets this Actor\'s Relative Location if it\'s attached","authority":"both","return":[{"type":"Vector"}]},{"name":"GetNetworkAuthority","description":"Gets this Actor\'s Network Authority Player","authority":"server","return":[{"type":"Player?"}]},{"name":"GetRotation","description":"Gets this Actor\'s angle in the game world","authority":"both","return":[{"type":"Rotator"}]},{"name":"GetRelativeRotation","description":"Gets this Actor\'s Relative Rotation if it\'s attached","authority":"both","return":[{"type":"Rotator"}]},{"name":"GetForce","description":"Gets this Actor\'s force (set by <code>SetForce()</code>)","authority":"both","return":[{"type":"Vector"}]},{"name":"GetDimension","description":"Gets this Actor\'s dimension","authority":"both","return":[{"type":"integer"}],"relations":{"events":["DimensionChange"]}},{"name":"HasNetworkAuthority","description":"Returns true if the local Player is currently the Network Authority of this Actor","authority":"client","return":[{"type":"boolean"}]},{"name":"HasAuthority","description":"Gets if this Actor was spawned by the client side","authority":"client","return":[{"type":"boolean","description":"false if it was spawned by the Server or true if it was spawned by the client"}]},{"name":"GetScale","description":"Gets this Actor\'s scale","authority":"both","return":[{"type":"Vector"}]},{"name":"GetVelocity","description":"Gets this Actor\'s current velocity","authority":"both","return":[{"type":"Vector"}]},{"name":"AddActorTag","description":"Adds an Unreal Actor Tag to this Actor","authority":"client","parameters":[{"type":"string","name":"tag"}],"relations":{"functions":["RemoveActorTag","GetActorTags"]}},{"name":"RemoveActorTag","description":"Removes an Unreal Actor Tag from this Actor","authority":"client","parameters":[{"type":"string","name":"tag"}],"relations":{"functions":["AddActorTag","GetActorTags"]}},{"name":"GetActorTags","description":"Gets all Unreal Actor Tags on this Actor","authority":"client","return":[{"type":"string[]"}],"relations":{"functions":["AddActorTag","RemoveActorTag"]}},{"name":"WasRecentlyRendered","description":"Gets if this Actor was recently rendered on screen","authority":"client","return":[{"type":"boolean"}]},{"name":"GetDistanceFromCamera","description":"Gets the distance of this Actor from the Camera","authority":"client","return":[{"type":"float"}]},{"name":"GetScreenPercentage","description":"Gets the percentage of this Actor size in the screen","authority":"client","return":[{"type":"float"}]}],"events":[{"authority":"server","name":"DimensionChange","description":"Triggered when an Actor changes it\'s dimension","arguments":[{"name":"self","type":"Actor"},{"name":"old_dimension","type":"integer"},{"name":"new_dimension","type":"integer"}],"relations":{"functions":["SetDimension","GetDimension"]}}]}')},8082:e=>{e.exports=JSON.parse('{"name":"Entity","description":"<b>Entity</b> is the base for all Classes, and all those entities share the same <b>Methods</b> and <b>Events</b> described in this page.","static_functions":[{"name":"GetAll","description":"Returns a table containing all Entities of the class this is called on","authority":"both","return":[{"type":"Entity[]","description":"Copy of table containing all Entities"}]},{"name":"GetByIndex","description":"Returns a specific Entity of this class at an index","authority":"both","parameters":[{"type":"integer","name":"index","description":"The index of the Entity"}],"return":[{"type":"Entity","description":"Entity at index"}]},{"name":"GetCount","description":"Returns how many Entities of this class exist","authority":"both","return":[{"type":"integer","description":"Number of Entities of this class"}]},{"name":"GetPairs","description":"Returns an iterator with all Entities of this class to be used with <code>pairs()</code>","description_long":"Returns an iterator with all Entities of this class to be used with <code>pairs()</code>. This is a more performant method than <code>GetAll()</code>, as it will return the iterator to access the Entities directly instead of creating and returning a copy of the Entities table.<br><br><b>Note:</b> Destroying Entities from inside a <code>GetPairs()</code> loop will cause the iterable to change size during the process. If you want to loop-and-destroy, please use <code>GetAll()</code>.","authority":"both","return":[{"type":"iterator","description":"Iterator with all Entities of this class"}]},{"name":"Inherit","description":"Inherits this class with the <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"string","name":"name","description":"The name of the new Class"},{"type":"table?","name":"custom_values","description":"An optional table with custom values to be set in the inherited class table"}],"return":[{"type":"table","description":"The new Class table"}]},{"name":"GetInheritedClasses","description":"Gets a list of all directly inherited classes from this Class created with the <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"boolean","default":"false","name":"recursively","description":"Returns all inherited children"}],"return":[{"type":"table[]","description":"All children Classes"}]},{"name":"GetParentClass","description":"Gets the parent class if this Class was created with the <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","return":[{"type":"table?","description":"The parent class"}]},{"name":"IsChildOf","description":"Gets if this Class is child of another class if this Class was created with the <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","authority":"both","parameters":[{"type":"table","name":"class","description":"The other class to check"}],"return":[{"type":"boolean"}]},{"name":"Subscribe","description":"Subscribes to an <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/events-guide\'>Event</a> for all entities of this Class","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"SubscribeRemote","description":"Subscribes to a custom event called from server","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"Unsubscribe","description":"Unsubscribes all callbacks from this <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/events-guide\'>Event</a> in this Class within this Package, or only the callback passed","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to unsubscribe from"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to unsubscribe"}]}],"functions":[{"name":"GetID","description":"Gets the universal network ID of this Entity (same on both client and server)","authority":"both","return":[{"type":"integer"}]},{"name":"GetClass","description":"Gets the class of this entity","authority":"both","return":[{"type":"table"}]},{"name":"IsA","description":"Recursively checks if this entity is <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>inherited</a> from a Class","authority":"both","parameters":[{"type":"table","name":"class","description":"The Class"}],"return":[{"type":"boolean"}]},{"name":"Subscribe","description":"Subscribes to an <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/events-guide\'>Event</a> on this specific entity","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"SubscribeRemote","description":"Subscribes to a custom event called from server on this specific entity","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to subscribe to"},{"type":"function","name":"callback","description":"Function to call when the event is triggered"}],"return":[{"type":"function","description":"Callback that was passed (useful for unsubscribing later if your callback is an anonymous function)"}]},{"name":"Unsubscribe","description":"Unsubscribes all callbacks from this <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/events-guide\'>Event</a> in this Entity within this Package, or only the callback passed","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Name of the event to unsubscribe from"},{"type":"function","name":"callback","default":"nil","description":"Optional callback to unsubscribe"}]},{"name":"SetValue","description":"Sets a <a href=\'https://docs.nanos.world/docs/core-concepts/scripting/entity-values\'>Value</a> in this Entity","description_long":"Sets a value in this Entity, which can be accessed by any package (optionally sync on clients if called from server)<br><br>Please refer to <a href=\\"https://docs.nanos.world/docs/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"both","parameters":[{"type":"string","name":"key"},{"type":"any","name":"value"},{"type":"boolean","name":"sync_on_clients","default":"false","description":"Server side parameter, if enabled will sync this value with all clients"}]},{"name":"GetValue","description":"Gets a <a href=\'https://docs.nanos.world/docs/core-concepts/scripting/entity-values\'>Value</a> stored on this Entity at the given key","description_long":"Gets a <a href=\'https://docs.nanos.world/docs/core-concepts/scripting/entity-values\'>Value</a> stored on this Entity at the given key. Please refer to <a href=\\"https://docs.nanos.world/docs/core-concepts/scripting/entity-values\\">Entity Values</a> for more information","authority":"both","parameters":[{"type":"string","name":"key"},{"type":"any","name":"fallback","description":"Fallback value if key doesn\'t exist"}],"return":[{"type":"any","description":"Value at key or fallback if key doesn\'t exist"}]},{"name":"Destroy","description":"Destroys this Entity","authority":"authority"},{"name":"IsValid","description":"Returns true if this Entity is valid (i.e. wasn\'t destroyed and points to a valid Entity)","authority":"both","return":[{"type":"boolean"}]},{"name":"CallRemoteEvent","description":"Calls a custom remote event directly on this entity to a specific Player","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"Player","name":"player","description":"The remote player to send this event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"name":"CallRemoteEvent","description":"Calls a custom remote event directly on this entity","authority":"client","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]},{"name":"BroadcastRemoteEvent","description":"Calls a custom remote event directly on this entity to all Players","authority":"server","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","default":"nil","description":"Arguments to pass to the event"}]}],"events":[{"authority":"both","name":"Spawn","description":"Triggered when an Entity is spawned/created","arguments":[{"type":"Entity","name":"self","description":"The Entity that was spawned"}]},{"authority":"both","name":"Destroy","description":"Triggered when an Entity is destroyed","arguments":[{"type":"Entity","name":"self","description":"The Entity which that was destroyed"}]},{"authority":"both","name":"ValueChange","description":"Triggered when an Entity has a value changed with <code>:SetValue()</code>","arguments":[{"type":"Entity","name":"self","description":"The Entity that just had a value changed"},{"type":"string","name":"key","description":"The key used"},{"type":"any","name":"value","description":"The value that was set"}]},{"authority":"both","name":"ClassRegister","description":"Triggered when a new Class is registered with the <a href=\'https://docs.nanos.world/docs/next/core-concepts/scripting/inheriting-classes\'>Inheriting System</a>","arguments":[{"type":"table","name":"class","description":"The inherited Class"}]}]}')},85274:e=>{e.exports=JSON.parse('{"name":"Paintable","description":"Base class for all Paintable entities. This class provides customization for materials, exposing common functions to allow you to set custom material parameters, including loading textures from disk.","functions":[{"authority":"both","name":"SetMaterial","description":"Sets the material at the specified index of this Actor","parameters":[{"type":"MaterialPath","name":"material_path","description":"The new Material to apply"},{"type":"integer","name":"index","default":"-1","description":"The index to apply<br/>-1 means all indices"}]},{"authority":"client","name":"SetMaterialFromCanvas","description":"Sets the material at the specified index of this Actor to a Canvas object","parameters":[{"type":"Canvas","name":"canvas","description":"The Canvas object to use as a materia"},{"type":"integer","name":"index","default":"-1","description":"The index to apply<br/>-1 means all indices"}]},{"authority":"client","name":"SetMaterialFromSceneCapture","description":"Sets the material at the specified index of this Actor to a SceneCapture object","parameters":[{"type":"SceneCapture","name":"scene_capture","description":"The SceneCapture object to use as a material"},{"type":"integer","name":"index","default":"-1","description":"The index to apply<br/>-1 means all indices"}]},{"authority":"client","name":"SetMaterialFromWebUI","description":"Sets the material at the specified index of this Actor to a WebUI object","parameters":[{"type":"WebUI","name":"webui","description":"The WebUI object to use as a material"},{"type":"integer","name":"index","default":"-1","description":"The index to apply<br/>-1 means all indices"}]},{"authority":"both","name":"ResetMaterial","description":"Resets the material from the specified index to the original one","parameters":[{"type":"integer","name":"index","default":"-1","description":"The index to apply<br/>-1 means all indices"}]},{"authority":"both","name":"SetMaterialColorParameter","description":"Sets a Color parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"Color","name":"color","description":"The value to set"}]},{"authority":"both","name":"SetMaterialScalarParameter","description":"Sets a Scalar parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"float","name":"scalar","description":"The value to set"}]},{"authority":"both","name":"SetMaterialTextureParameter","description":"Sets a texture parameter in this Actor\'s material to an image on disk","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"ImagePath","name":"texture_path","description":"The path to the texture"}]},{"authority":"both","name":"SetMaterialVectorParameter","description":"Sets a Vector parameter in this Actor\'s material","parameters":[{"type":"string","name":"parameter_name","description":"The name of the material parameter"},{"type":"Vector","name":"vector","description":"The value to set"}]},{"authority":"both","name":"SetPhysicalMaterial","description":"Overrides this Actor\'s Physical Material with a new one","parameters":[{"type":"MaterialPath","name":"physical_material_path","description":"The Physical Material to override"}]}]}')},25767:e=>{e.exports=JSON.parse('{"name":"Pickable","description":"<b>Pickables</b> are special Actors which can be <b>grabbed</b>, <b>held</b> and <b>used</b> by Characters.","functions":[{"authority":"both","name":"AddSkeletalMeshAttached","description":"Attaches a Skeletal Mesh as master pose to this entity","description_long":"Spawns and attaches a SkeletalMesh to this Pickable, the SkeletalMesh must have the same skeleton used by this Actor\'s mesh, and will follow all animations from it. Uses a custom ID to be used for removing it later.<br><br>For customizing the Materials specific to a mesh attached with this function, use the following syntax as the <code>parameter_name</code> in the <a href=\\"https://docs.nanos.world/docs/scripting-reference/classes/base-classes/paintable\\">Base Paintable</a> methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where <code>[ATTACHABLE_ID]</code> is the ID of the Attachable, and <code>[PARAMETER_NAME]</code> is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Unique ID to assign to the SkeletalMesh"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_path","description":"Path to SkeletalMesh asset to attach"}]},{"authority":"both","name":"AddStaticMeshAttached","description":"Attaches a Static Mesh to this entity","description_long":"Spawns and attaches a StaticMesh to this Pickable in a Socket with a relative location and rotation. Uses a custom ID to be used for removing it later<br><br>For customizing the Materials specific to a mesh attached with this function, use the following syntax as the <code>parameter_name</code> in the <a href=\\"https://docs.nanos.world/docs/scripting-reference/classes/base-classes/paintable\\">Base Paintable</a> methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where <code>[ATTACHABLE_ID]</code> is the ID of the Attachable, and <code>[PARAMETER_NAME]</code> is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Unique ID to assign to the StaticMesh"},{"type":"StaticMeshPath","name":"static_mesh_path","description":"Path to StaticMesh asset to attach"},{"type":"string","name":"socket","default":"","description":"Bone socket to attach to"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)","description":"Relative location"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Relative rotation"}]},{"authority":"server","name":"PullUse","description":"Pulls the usage of this Pickable (will start firing if this is a weapon)","parameters":[{"type":"float","name":"release_use_after","default":"-1","description":"Time in seconds to automatically release the usage (-1 will not release, 0 will release one tick after)"}]},{"authority":"server","name":"ReleaseUse","description":"Releases the usage of this Pickable (will stop firing if this is a weapon)"},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if it exists, a SkeletalMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the SkeletalMesh to remove"}]},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if it exists, a StaticMesh from this Pickable given its custom ID","parameters":[{"type":"string","name":"id","description":"Unique ID of the StaticMesh to remove"}]},{"authority":"server","name":"SetAttachmentSettings","description":"Sets the Attachment Settings for this Pickable (how it attaches to the Character when Picking up)","parameters":[{"type":"Vector","name":"relative_location","description":"Location relative to the Socket"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":"Rotation relative to the Socket"},{"type":"string","name":"socket","default":"hand_r_socket","description":"Character Socket to attach to when picked up"}]},{"authority":"server","name":"SetCrosshairMaterial","description":"Sets the crosshair material for this Pickable","parameters":[{"type":"MaterialPath","name":"material_asset","description":"Asset path to the crosshair material"}]},{"authority":"server","name":"SetPickable","description":"Sets if this Pickable can be picked up from ground by the player","parameters":[{"type":"boolean","name":"is_pickable"}]},{"authority":"both","name":"GetMesh","description":"Gets the name of the asset this Pickable uses","return":[{"type":"SkeletalMeshPath"}]},{"authority":"both","name":"GetHandler","description":"Gets the Character, if it exists, that\'s holding this Pickable","return":[{"type":"Character?"}]}],"events":[{"authority":"both","name":"Drop","description":"When a Character drops this Pickable","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has been dropped"},{"type":"Character","name":"character","description":"The Character that dropped it"},{"type":"boolean","name":"was_triggered_by_player","description":"If the Player actively pressed the Drop binding to drop"}]},{"authority":"both","name":"Hit","description":"When this Pickable hits something","arguments":[{"type":"Pickable","name":"self","description":"The Actor that was hit"},{"type":"float","name":"impact_force","description":"The intensity of the hit normalized by the Pickable\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction of the hit"},{"type":"Vector","name":"impact_location","description":"The world space location of the impact"},{"type":"Vector","name":"velocity","description":"The Pickable\'s velocity at the moment it hit"}]},{"authority":"server","name":"Interact","description":"Triggered when a Character interacts with this Pickable (i.e. tries to pick it up)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable that just got interacted with"},{"type":"Character","name":"character","description":"The Character that interacted with it"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent the interaction"}]},{"authority":"both","name":"PickUp","description":"Triggered When a Character picks this up","arguments":[{"type":"Pickable","name":"self","description":"The Pickable that just got picked up"},{"type":"Character","name":"character","description":"The Character that picked it up"}]},{"authority":"both","name":"PullUse","description":"Triggered when a Character presses the use button for this Pickable (i.e. clicks left mouse button with this equipped)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has just been used"},{"type":"Character","name":"character","description":"The Character that used it"}]},{"authority":"both","name":"ReleaseUse","description":"Triggered when a Character releases the use button for this Pickable (i.e. releases left mouse button with this equipped)","arguments":[{"type":"Pickable","name":"self","description":"The Pickable which has just stopped being used"},{"type":"Character","name":"character","description":"The Character that stopped using it"}]}]}')},68088:e=>{e.exports=JSON.parse('{"name":"Billboard","description":"A Billboard is a 2D Material that will be rendered always facing the camera.","authority":"client","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"MaterialPath","name":"material_asset","default":""},{"type":"Vector2D","name":"size","default":"Vector2D(32, 32)"},{"type":"boolean","name":"size_in_screen_space","default":"false","description":"Size is in Screen or World Space"}]}]}')},22551:e=>{e.exports=JSON.parse('{"name":"Blueprint","description":"A Blueprint Class allows spawning any Unreal Blueprint Actor in nanos world.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"BlueprintPath","name":"blueprint_asset","default":""}]}],"functions":[{"name":"CallBlueprintEvent","return":[{"type":"any","description":"The event return values"}],"description":"Calls a Blueprint Event or Function","description_long":"Calls a Blueprint Event or Function<br/>Returns all Function return values on <strong>Client Side</strong>","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event or Function name"},{"type":"any","name":"arguments...","default":"nil","description":"Sequence of arguments to pass to the event"}]},{"name":"BindBlueprintEventDispatcher","description":"Assigns and Binds a Blueprint Event Dispatcher","authority":"client","parameters":[{"type":"string","name":"dispatcher_name","description":"Event Dispatcher name"},{"type":"function","name":"callback","description":"Callback function to call (the first argument is the blueprint itself)"}]},{"name":"SetBlueprintPropertyValue","description":"Sets a Blueprint Property/Variable value directly","authority":"client","parameters":[{"type":"string","name":"property_name"},{"type":"any","name":"value"}]},{"name":"GetBlueprintPropertyValue","description":"Gets a Blueprint Property/Variable value","authority":"client","return":[{"type":"any","description":"the value"}],"parameters":[{"type":"string","name":"property_name"}]}]}')},2627:e=>{e.exports=JSON.parse('{"name":"Cable","description":"A Cable represents a Physics Constraint which joins two Actors with a rope-like visual representation between them.","authority":"server","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"boolean","name":"enable_visuals","default":"true","description":"Toggles the cable visuals"}]}],"functions":[{"authority":"server","name":"AttachStartTo","description":"Attached the beginning of this cable to another Actor at a specific bone or relative location","parameters":[{"type":"Actor","name":"other"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"string","name":"bone_name","default":""}]},{"authority":"server","name":"AttachEndTo","description":"Attached the end of this cable to another Actor at a specific bone or relative location","parameters":[{"type":"Actor","name":"other"},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"string","name":"bone_name","default":""}]},{"authority":"server","name":"DetachEnd","description":"Detaches the End of this Cable"},{"authority":"server","name":"DetachStart","description":"Detaches the Start of this Cable"},{"authority":"both","name":"SetCableSettings","description":"Set the overall settings for this cable (visuals only)","parameters":[{"type":"float","name":"length","description":"Rest length of the cable. Default is 100"},{"type":"integer","name":"num_segments","description":"How many segments the cable has. Default is 10"},{"type":"integer","name":"solver_iterations","description":"The number of solver iterations controls how \'stiff\' the cable is. Default is 0"}]},{"authority":"both","name":"SetForces","description":"Set the forces the cable has applied (visuals only)","parameters":[{"type":"Vector","name":"force","description":"Force vector (world space) applied to all particles in cable. Default is Vector(0, 0, 0)"},{"type":"float","name":"gravity_scale","default":"1","description":"Scaling applied to world gravity affecting this cable. Default is 1"}]},{"authority":"server","name":"SetAngularLimits","description":"Sets the Physics Angular Limits of this cable","parameters":[{"type":"ConstraintMotion","name":"swing_1_motion","description":"Indicates whether the Swing1 limit is used"},{"type":"ConstraintMotion","name":"swing_2_motion","description":"Indicates whether the Swing2 limit is used"},{"type":"ConstraintMotion","name":"twist_motion","description":"Indicates whether the Twist limit is used"},{"type":"float","name":"swing_1_limit","default":"0","description":"Angle of movement along the XY plane. This defines the first symmetric angle of the cone"},{"type":"float","name":"swing_2_limit","default":"0","description":"Angle of movement along the XZ plane. This defines the second symmetric angle of the cone"},{"type":"float","name":"twist_limit","default":"0","description":"Symmetric angle of roll along the X-axis"}]},{"authority":"server","name":"SetLinearLimits","description":"Sets the Physics Linear Limits of this cable","description_long":"Sets the Physics Linear Limits of this cable. If use_soft_constraint is enabled, then stiffness and damping will be used, otherwise restitution will be used.","parameters":[{"type":"ConstraintMotion","name":"x_motion","description":"Indicates the linear constraint applied along the X-axis. Free implies no constraint at all. Locked implies no movement along X is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"ConstraintMotion","name":"y_motion","description":"Indicates the linear constraint applied along the Y-axis. Free implies no constraint at all. Locked implies no movement along Y is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"ConstraintMotion","name":"z_motion","description":"Indicates the linear constraint applied along theZX-axis. Free implies no constraint at all. Locked implies no movement along Z is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"float","name":"limit","default":"0","description":"The distance allowed between between the two joint reference frames. Distance applies on all axes enabled (one axis means line, two axes implies circle, three axes implies sphere)"},{"type":"float","name":"restitution","default":"0","description":"Controls the amount of bounce when the constraint is violated. A restitution value of 1 will bounce back with the same velocity the limit was hit. A value of 0 will stop dead"},{"type":"boolean","name":"use_soft_constraint","default":"false","description":"Whether we want to use a soft constraint (spring)"},{"type":"float","name":"stiffness","default":"0","description":"Stiffness of the soft constraint. Only used when Soft Constraint is on"},{"type":"float","name":"damping","default":"0","description":"Damping of the soft constraint. Only used when Soft Constraint is on"}]},{"authority":"both","name":"SetRenderingSettings","description":"Set the rendering settings of this cable (visuals only)","parameters":[{"type":"float","name":"width","description":"How wide the cable geometry is. Default is 6"},{"type":"integer","name":"num_sides","description":"Number of sides of the cable geometry. Default is 4"},{"type":"integer","name":"tile_material","description":"How many times to repeat the material along the length of the cable. Default is 1"}]},{"authority":"both","name":"GetAttachedStartTo","description":"Gets the Actor attached to Start","return":[{"type":"Actor","description":"the Actor or nil"}]},{"authority":"both","name":"GetAttachedEndTo","description":"Gets the Actor attached to End","return":[{"type":"Actor","description":"the Actor or nil"}]}]}')},89252:e=>{e.exports=JSON.parse('{"name":"Canvas","description":"Canvas is an entity which you can draw onto it.","authority":"client","constructors":[{"description":"Default Constructor","parameters":[{"type":"boolean","name":"is_visible","default":"true","description":"Whether to draw it on screen"},{"type":"Color","name":"clear_color","default":"Color.TRANSPARENT","description":"Color to clear with (background color)"},{"type":"float","name":"auto_repaint_rate","default":"-1","description":"Rate to auto repaint (call Update event), pass 0 for every frame, -1 to disable"},{"type":"boolean","name":"should_clear_before_update","default":"true","description":"Whether to clear with Clear Color before updates"},{"type":"boolean","name":"auto_resize","default":"true","description":"Auto resize with screen\'s size"},{"type":"integer","name":"width","default":"0","description":"If not using auto_resize"},{"type":"integer","name":"height","default":"0","description":"If not using auto_resize"}]}],"functions":[{"authority":"client","name":"DrawBox","description":"Draws an unfilled box on the Canvas","description_long":"Draws an unfilled box on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"float","name":"thickness"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawLine","description":"Draws a line on the Canvas","description_long":"Draws a line on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"Vector2D","name":"screen_position_a"},{"type":"Vector2D","name":"screen_position_b"},{"type":"float","name":"thickness"},{"type":"Color","name":"render_color"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterial","description":"Draws a Material on the Canvas","description_long":"Draws a Material on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"MaterialPath","name":"material_path"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterialFromWebUI","description":"Draws a WebUI on the Canvas","description_long":"Draws a WebUI on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"WebUI","name":"webui_entity"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawMaterialFromSceneCapture","description":"Draws a SceneCapture on the Canvas","description_long":"Draws a SceneCapture on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/><strong>Note:</strong> Due how Unreal handles Render Targets, drawing material on Canvas result on a weird translucent effect. Hope in the future to be improved.","parameters":[{"type":"SceneCapture","name":"scenecapture_entity"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawText","description":"Draws a Text on the Canvas","description_long":"Draws a Text on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event<br/><br/>Shadow and Outline won\'t work properly with Transparent <code>clear_color</code>","parameters":[{"type":"string","name":"text"},{"type":"Vector2D","name":"screen_position"},{"type":"FontType","name":"font_type","default":"FontType.Roboto"},{"type":"integer","name":"font_size","default":"12"},{"type":"Color","name":"text_color","default":"Color.WHITE"},{"type":"float","name":"kerning","default":"0"},{"type":"boolean","name":"center_x","default":"false"},{"type":"boolean","name":"center_y","default":"false"},{"type":"Color","name":"shadow_color","default":"Color.TRANSPARENT"},{"type":"Vector2D","name":"shadow_offset","default":"Vector2D(1, 1)"},{"type":"boolean","name":"outlined","default":"false"},{"type":"Color","name":"outline_color","default":"Color.BLACK"}]},{"authority":"client","name":"DrawTexture","description":"Draws a Texture on the Canvas","description_long":"Draws a Texture on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Vector2D","name":"coordinate_position"},{"type":"Vector2D","name":"coordinate_size","default":"Vector2D(1, 1)"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"},{"type":"float","name":"rotation","default":"0"},{"type":"Vector2D","name":"pivot_point","default":"Vector2D(0.5, 0.5)"}]},{"authority":"client","name":"DrawPolygon","description":"Draws a N-Polygon on the Canvas","description_long":"Draws a N-Polygon on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path","description":"Pass empty to use default white Texture"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"radius","default":"Vector2D(1, 1)"},{"type":"integer","name":"number_of_sides","default":"3"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"DrawRect","description":"Draws a filled Rect on the Canvas","description_long":"Draws a fille Rect on the Canvas<br/></br>This method can only be called from inside <code>Update</code> event","parameters":[{"type":"ImagePath","name":"texture_path","description":"Pass empty to use default white Texture"},{"type":"Vector2D","name":"screen_position"},{"type":"Vector2D","name":"screen_size"},{"type":"Color","name":"render_color","default":"Color.WHITE"},{"type":"BlendMode","name":"blend_mode","default":"BlendMode.Opaque"}]},{"authority":"client","name":"SetAutoRepaintRate","description":"Sets the repaint rate","description_long":"Sets it to -1 to stop auto repainting or 0 to repaint every frame","parameters":[{"type":"boolean","name":"auto_repaint_rate"}]},{"authority":"client","name":"SetVisibility","description":"Sets if it\'s visible on screen","parameters":[{"type":"boolean","name":"visible"}]},{"authority":"client","name":"Repaint","description":"Forces the repaint","description_long":"Forces the repaint, this will trigger Update event"},{"authority":"client","name":"Clear","description":"Clear the Canvas with a specific Color","parameters":[{"type":"Color","name":"clear_color"}]}],"events":[{"name":"Update","authority":"client","description":"Called when the Canvas needs to be painted<br/><br/>You can only call <code>:Draw...()</code> methods from inside this event","arguments":[{"name":"self","type":"Canvas"},{"name":"width","type":"integer"},{"name":"height","type":"integer"}]}]}')},60080:e=>{e.exports=JSON.parse('{"name":"Character","description":"Characters represents Actors which can be possessed, can move and interact with world. They are the default Skeletal Mesh Character built for nanos world.","authority":"server","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath","name":"skeletal_mesh"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"integer","name":"max_health","default":"100","description":"Current / Max Health"},{"type":"SoundPath","name":"death_sound","default":"nanos-world::A_Male_01_Death","description":"Played when Character dies"},{"type":"SoundPath","name":"pain_sound","default":"nanos-world::A_Male_01_Pain","description":"Played when Character takes damage"}]}],"functions":[{"authority":"server","name":"ApplyDamage","return":[{"type":"integer","description":"the damage applied"}],"description":"Do damage to a character","description_long":"Do damage to a character, will trigger all related events and apply modified damage based on bone. Also will apply impulse if it\'s a heavy explosion","parameters":[{"type":"integer","name":"damage"},{"type":"string","name":"bone_name","default":""},{"type":"DamageType","name":"damage_type","default":"DamageType.Shot"},{"type":"Vector","name":"from_direction","default":"Vector(0, 0, 0)"},{"type":"Player","name":"instigator","default":"nil","description":"The player which caused the damage"},{"type":"any","name":"causer","default":"nil","description":"The object which caused the damage"}]},{"authority":"both","name":"AddSkeletalMeshAttached","description":"Spawns and Attaches a SkeletalMesh into this Character","description_long":"Spawns and Attaches a SkeletalMesh into this Character, the SkeletalMesh must have the same Skeletal used by the Character Mesh, and will follow all animations from it. Uses a custom ID to be used for removing it further.<br/><br/>For customizing the Materials specific of a SkeletalMeshAttached, please use the following syntax in the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset","default":""}]},{"authority":"both","name":"AddStaticMeshAttached","description":"Spawns and Attaches a StaticMesh into this Character","description_long":"Spawns and Attaches a StaticMesh into this Character in a Socket with relative Location and Rotation. Uses a custom ID to be used for removing it further<br/><br/>For customizing the Materials specific of a StaticMeshAttached, please use the following syntax as the <code>parameter_name</code> in the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":""},{"type":"string","name":"socket","default":""},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)"}]},{"authority":"server","name":"Drop","description":"Drops any Pickable the Character is holding","parameters":[]},{"authority":"server","name":"EnterVehicle","description":"Enters the Vehicle at Seat (0 - Driver)","parameters":[{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat","default":"0"}]},{"authority":"server","name":"GrabProp","description":"Gives a Prop to the Character","parameters":[{"type":"Prop","name":"prop"}]},{"authority":"both","name":"HideBone","description":"Hides a bone of this Character","description_long":"Hides a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","default":"","description":"Bone to hide"}]},{"authority":"both","name":"UnHideBone","description":"UnHide a bone of this Character","description_long":"UnHide a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","description":"Bone to unhide"}]},{"authority":"both","name":"IsBoneHidden","return":[{"type":"boolean","description":"if the bone is hidden"}],"description":"Gets if a bone is hidden","parameters":[{"type":"string","name":"bone_name","description":"Bone to check"}]},{"authority":"server","name":"Jump","description":"Triggers this Character to jump"},{"authority":"server","name":"LeaveVehicle","description":"Leaves the current Vehicle"},{"authority":"server","name":"LookAt","description":"AI: Tries to make this Character to look at Location","parameters":[{"type":"Vector","name":"location","description":"World location to look"}]},{"authority":"server","name":"MoveTo","description":"AI: Makes this Character to walk to the Location","description_long":"AI: Makes this Character to walk to the Location<br/><br/>Triggers event <a href=\'character#movecompleted\'>MoveCompleted</a>","parameters":[{"type":"Vector","name":"location"},{"type":"float","name":"acceptance_radius","default":"50"}]},{"authority":"server","name":"Follow","description":"AI: Makes this Character to follow another actor","description_long":"AI: Makes this Character to follow another actor<br/><br/>Triggers event <a href=\'character#movecompleted\'>MoveCompleted</a>","parameters":[{"type":"Actor","name":"actor","description":"Actor to follow"},{"type":"float","name":"acceptance_radius","default":"50","description":"Radius to consider success"},{"type":"boolean","name":"stop_on_succeed","default":"false","description":"Whether to stop when reaching the target"},{"type":"boolean","name":"stop_on_fail","default":"false","description":"Whether to stop when failed to reach the target"},{"type":"float","name":"update_rate","default":"0.25","description":"How often to recalculate the AI path"}]},{"authority":"server","name":"StopMovement","description":"AI: Stops the movement","description_long":"AI: Stops the movement<br/><br/>Triggers event [MoveCompleted](character#movecompleted)"},{"authority":"server","name":"PickUp","description":"Gives a Melee/Grenade/Weapon (Pickable) to the Character","parameters":[{"type":"Pickable","name":"pickable"}]},{"authority":"server","name":"PlayAnimation","description":"Plays an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"AnimationSlotType","name":"slot_type","default":"AnimationSlotType.FullBody"},{"type":"boolean","name":"loop_indefinitely","default":"false"},{"type":"float","name":"blend_in_time","default":"0.25"},{"type":"float","name":"blend_out_time","default":"0.25"},{"type":"float","name":"play_rate","default":"1.0"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group"}]},{"authority":"server","name":"StopAnimation","description":"Stops an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_asset"}]},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if existing, a SkeletalMesh from this Character given it\'s custom ID","parameters":[{"type":"string","name":"id"}]},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if existing, a StaticMesh from this Character given it\'s custom ID","parameters":[{"type":"string","name":"id"}]},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"RemoveAllSkeletalMeshesAttached","description":"Removes all SkeletalMeshes attached"},{"authority":"server","name":"Respawn","description":"Respawns the Character, fullying it\'s Health and moving it to it\'s Initial Location","parameters":[{"type":"Vector","name":"location","default":"initial location","description":"If not passed will use the initial location passed when the Character spawned"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"}]},{"authority":"server","name":"SetAnimationIdleWalkRunStanding","description":"Sets the Blend Space (2D) Animation for Standing","description_long":"Sets the Blend Space (2D) Animation for Standing<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"Animation","name":"blend_space_path"},{"type":"boolean","name":"enable_turn_in_place","default":"false"}]},{"authority":"server","name":"SetAnimationIdleWalkRunCrouching","description":"Sets the Blend Space (2D) Animation for Crouching<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"Animation","name":"blend_space_path"},{"type":"boolean","name":"enable_turn_in_place","default":"false"}]},{"authority":"server","name":"SetAnimationIdleWalkRunProning","description":"Sets the Blend Space (2D) Animation for Proning<br/><br/>Horizontal Axis stands for Speed X and Vertical Axis for Speed Y","parameters":[{"type":"Animation","name":"blend_space_path"}]},{"authority":"server","name":"SetAnimationsTransitionStandingCrouching","description":"Sets the Transition Animation between Standing and Crouching","parameters":[{"type":"Animation","name":"standing_to_crouching"},{"type":"Animation","name":"crouching_to_standing"}]},{"authority":"server","name":"SetAnimationsTransitionCrouchingProning","description":"Sets the Transition Animation between Crouching and Proning","parameters":[{"type":"Animation","name":"crouching_to_proning"},{"type":"Animation","name":"pronng_to_crouching"}]},{"authority":"server","name":"SetAccelerationSettings","description":"Sets the Movement Max Acceleration of this Character","parameters":[{"type":"integer","name":"walking","default":"768"},{"type":"integer","name":"parachuting","default":"512"},{"type":"integer","name":"skydiving","default":"768"},{"type":"integer","name":"falling","default":"128"},{"type":"integer","name":"swimming","default":"256"},{"type":"integer","name":"swimming_surface","default":"256"},{"type":"integer","name":"flying","default":"1024"}]},{"authority":"server","name":"SetBrakingSettings","description":"Sets the Movement Braking Settings of this Character","parameters":[{"type":"float","name":"ground_friction","default":"2"},{"type":"float","name":"braking_friction_factor","default":"2"},{"type":"integer","name":"braking_walking","default":"96"},{"type":"integer","name":"braking_flying","default":"3000"},{"type":"integer","name":"braking_swimming","default":"10"},{"type":"integer","name":"braking_falling","default":"0"}]},{"authority":"server","name":"SetCameraMode","description":"Sets the Camera Mode","description_long":"Sets the Camera Mode (i.e. Only TPS, FPS or if allow both)<br/><br/>Using FPSOnly CameraMode on AI will lock his body rotation (when using LookAt)","parameters":[{"type":"CameraMode","name":"camera_mode"}]},{"authority":"client","name":"SetCameraOffset","description":"Sets the Camera Offset (only affects TPS)","parameters":[{"type":"Vector","name":"camera_offset"}]},{"authority":"server","name":"SetCanCrouch","description":"Sets if this Character is allowed to Crouch and to Prone","parameters":[{"type":"boolean","name":"can_crouch"}]},{"authority":"server","name":"SetCanAim","description":"Sets if this Character is allowed to Aim","parameters":[{"type":"boolean","name":"can_aim"}]},{"authority":"server","name":"SetCanDrop","description":"Sets if this Character is allowed to Drop the Picked up item","parameters":[{"type":"boolean","name":"can_drop"}]},{"authority":"server","name":"SetCanJump","description":"Sets if this Character is allowed to Jump","parameters":[{"type":"boolean","name":"can_jump"}]},{"authority":"server","name":"SetCanDive","description":"Sets if this Character is allowed to Dive","parameters":[{"type":"boolean","name":"can_dive"}]},{"authority":"server","name":"SetCanSprint","description":"Sets if this Character is allowed to Sprint","parameters":[{"type":"boolean","name":"can_sprint"}]},{"authority":"server","name":"SetCanGrabProps","description":"Sets if this Character is allowed to Grab any Prop","parameters":[{"type":"boolean","name":"can_grab_props"}]},{"authority":"server","name":"SetCanPickupPickables","description":"Sets if this Character is allowed to Pick up any Pickable (Weapon, Grenade, Melee...)","parameters":[{"type":"boolean","name":"can_pickup"}]},{"authority":"server","name":"SetCanPunch","description":"Sets if this Character is allowed to Punch","parameters":[{"type":"boolean","name":"can_punch"}]},{"authority":"server","name":"SetCanDeployParachute","description":"Sets if this Character is allowed to deploy the Parachute","parameters":[{"type":"boolean","name":"can_deploy_parachute"}]},{"authority":"server","name":"SetCapsuleSize","description":"Sets this Character\'s Capsule size","description_long":"Sets this Character\'s Capsule size (will affect Camera location and Character\'s collision)","parameters":[{"type":"integer","name":"radius","description":"Default is 42"},{"type":"integer","name":"half_height","description":"Default is 96"}]},{"authority":"server","name":"SetDamageMultiplier","description":"Changes how much damage this character takes on specific bones","parameters":[{"type":"string","name":"bone_name"},{"type":"float","name":"multiplier"}]},{"authority":"server","name":"SetDeathSound","description":"Changes the Death sound when Character dies","parameters":[{"type":"string","name":"sound_asset"}]},{"authority":"server","name":"SetFallDamageTaken","description":"Set the Fall Damage multiplier taken when falling from High places","description_long":"Set the Fall Damage multiplier taken when falling from High places.<br/><br/>Setting to 0 will make the Character to do not take any damage","parameters":[{"type":"integer","name":"damage","description":"Default is 10"}]},{"authority":"server","name":"SetFlyingMode","description":"Sets the Flying Mode","parameters":[{"type":"boolean","name":"flying_mode"}]},{"authority":"server","name":"SetFOVMultiplier","description":"Sets the Field of View multiplier","parameters":[{"type":"float","name":"multiplier"}]},{"authority":"server","name":"SetHighFallingTime","description":"Sets time to transition to HighFalling state","description_long":"Sets time elapsed until automatically transition to HighFalling state (from SmallFalling) in seconds<br/><br/>Set it to -1 to never enter HighFalling time and consequently do not ragdoll when falling","parameters":[{"type":"float","name":"time","description":"Default is 1 second"}]},{"authority":"server","name":"SetGaitMode","description":"Sets the Gait Mode","parameters":[{"type":"GaitMode","name":"mode"}]},{"authority":"server","name":"SetGravityScale","description":"Changes the Gravity Scale","description_long":"Changes the Gravity Scale of this Character (can be negative)","parameters":[{"type":"float","name":"scale"}]},{"authority":"server","name":"SetHealth","description":"Sets the Health of this Character","description_long":"Sets the Health of this Character. You can only call it on alive characters (call Respawn first)","parameters":[{"type":"integer","name":"new_health"}]},{"authority":"server","name":"SetImpactDamageTaken","description":"Set the Impact Damage taken when being roamed by things","description_long":"Set the Impact Damage taken when being roamed by things.<br/><br/>Setting to 0 will make the Character to do not take damage or enter ragdoll mode","parameters":[{"type":"integer","name":"damage","description":"Default is 10"}]},{"authority":"server","name":"SetRadialDamageToRagdoll","description":"Set the minimum radial damage (e.g. explosions) taken to enter in ragdoll mode","description_long":"Set the minimum radial damage taken (e.g. explosions) to enter in ragdoll mode.<br/><br/>Setting to -1 will make the Character to do not enter ragdoll mode when getting radial damage","parameters":[{"type":"integer","name":"damage","description":"Default is 50"}]},{"authority":"server","name":"SetFootstepVolumeMultiplier","description":"Set the Footstep Volume multiplier","parameters":[{"type":"float","name":"volume_multiplier"}]},{"authority":"server","name":"SetInvulnerable","description":"Sets if the Character can receive any damage","parameters":[{"type":"boolean","name":"is_invulnerable"}]},{"authority":"server","name":"SetJumpZVelocity","description":"Sets the velocity of the jump","parameters":[{"type":"integer","name":"velocity","description":"Default is 450"}]},{"authority":"server","name":"SetMaxHealth","description":"Sets the MaxHealth of this Character","parameters":[{"type":"integer","name":"new_max_health"}]},{"authority":"server","name":"SetMesh","description":"Changes the Character Mesh on the fly","parameters":[{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset"}]},{"authority":"both","name":"SetMorphTarget","description":"Set Morph Target with Name and Value","parameters":[{"type":"string","name":"name","description":"Morph Target Name"},{"type":"float","name":"value"}]},{"authority":"both","name":"GetMorphTarget","description":"Returns the value of a Morph Target","return":[{"type":"float","description":"value of the Morph Target"}],"parameters":[{"type":"string","name":"name","description":"Morph Target Name"}]},{"authority":"both","name":"ClearMorphTargets","description":"Clear all Morph Target that are set to this Mesh"},{"authority":"client","name":"GetAllMorphTargetNames","description":"Returns a table with all morph targets available","return":[{"type":"string[]","description":"table with all morph targets available"}]},{"authority":"both","name":"SetPhysicalAnimationSettings","description":"Applies the physical animation settings to the body given","parameters":[{"type":"string","name":"bone","description":"The body we will be driving"},{"type":"boolean","name":"include_self","description":"Whether to modify the given body"},{"type":"boolean","name":"is_local_simulation","description":"Whether the drive targets are in world space or local"},{"type":"float","name":"orientation_strength","default":"0","description":"The strength used to correct orientation error"},{"type":"float","name":"angular_velocity_strength","default":"0","description":"The strength used to correct angular velocity error"},{"type":"float","name":"position_strength","default":"0","description":"The strength used to correct linear position error. Only used for non-local simulation"},{"type":"float","name":"velocity_strength","default":"0","description":"The strength used to correct linear velocity error. Only used for non-local simulation"},{"type":"float","name":"max_linear_force","default":"0","description":"The max force used to correct linear errors"},{"type":"float","name":"max_angular_force","default":"0","description":"The max force used to correct angular errors"}]},{"authority":"both","name":"ResetPhysicalAnimationSettings","description":"Resets all Physical Animation settings"},{"authority":"server","name":"SetInputEnabled","description":"Enables/Disables Character\'s Input","parameters":[{"type":"boolean","name":"is_enabled"}]},{"authority":"server","name":"SetParachuteTexture","description":"Changes the Parachute Texture","parameters":[{"type":"ImagePath","name":"texture"}]},{"authority":"server","name":"SetPainSound","description":"Changes the Pain sound when Character takes damage","parameters":[{"type":"SoundPath","name":"sound_asset"}]},{"authority":"server","name":"SetPunchDamage","description":"Set the Punch Damage this Character will apply on others","parameters":[{"type":"integer","name":"damage","description":"Default is 15"}]},{"authority":"server","name":"SetRagdollMode","description":"Sets Character Ragdoll Mode","parameters":[{"type":"boolean","name":"ragdoll_enabled"}]},{"authority":"server","name":"SetSimulatePhysics","description":"Sets the Character Capsule to simulate physics","parameters":[{"type":"boolean","name":"simulate_physics"}]},{"authority":"server","name":"SetSpeedMultiplier","description":"Sets all speed multiplier","parameters":[{"type":"float","name":"multiplier","description":"1 is normal"}]},{"authority":"server","name":"SetStanceMode","description":"Sets the Stance Mode","parameters":[{"type":"StanceMode","name":"mode"}]},{"authority":"server","name":"SetTeam","description":"Sets a Team which will disable damaging same Team Members","parameters":[{"type":"integer","name":"team","description":"0 is neutral and default"}]},{"authority":"network-authority","name":"SetViewMode","description":"Sets the View Mode","parameters":[{"type":"ViewMode","name":"view_mode"}]},{"authority":"network-authority","name":"SetWeaponAimMode","description":"Sets the Weapon\'s Aim Mode","parameters":[{"type":"AimMode","name":"aim_mode"}]},{"authority":"server","name":"UnGrabProp","description":"UnGrabs/Drops the Prop the Character is holding"},{"authority":"both","name":"IsInRagdollMode","description":"Gets if Character is in ragdoll mode","return":[{"type":"boolean"}]},{"authority":"both","name":"IsInvulnerable","description":"Gets if is invulnerable","return":[{"type":"boolean"}]},{"authority":"both","name":"IsMovementEnabled","description":"Gets if has movement enabled","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCameraMode","description":"Gets the camera mode","return":[{"type":"CameraMode"}]},{"authority":"both","name":"GetCanDrop","description":"Gets if can drop","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanPunch","description":"Gets if can punch","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanAim","description":"Gets if can aim","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanCrouch","description":"Gets if can crouch","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanSprint","description":"Gets if can sprint","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanGrabProps","description":"Gets if can grab props","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCanPickupPickables","description":"Gets if can pickup Pickables (Weapons, Melee, Grenade...)","return":[{"type":"boolean"}]},{"authority":"both","name":"GetCapsuleSize","description":"Gets the Capsule Size","return":[{"type":"table","table_properties":[{"name":"Radius","type":"integer"},{"name":"HalfHeight","type":"integer"}]}]},{"authority":"client","name":"GetBoneTransform","description":"Gets a Bone Transform in world space given a bone name","return":[{"type":"table","table_properties":[{"name":"Location","type":"Vector"},{"name":"Rotation","type":"Rotator"}]}],"parameters":[{"name":"bone_name","type":"string"}]},{"authority":"both","name":"GetControlRotation","description":"Gets the Control Rotation","return":[{"type":"Rotator"}]},{"authority":"both","name":"GetDamageMultiplier","description":"Gets the Damage Multiplier of a bone","return":[{"type":"float","description":"the damage multiplier of the bone"}],"parameters":[{"name":"bone_name","type":"string"}]},{"authority":"both","name":"GetFallDamageTaken","description":"Gets the Fall Damage","return":[{"type":"integer"}]},{"authority":"both","name":"GetFallingMode","description":"Gets the FallingMode","return":[{"type":"FallingMode"}]},{"authority":"both","name":"GetFlyingMode","description":"Gets if it\'s in Flying mode","return":[{"type":"boolean"}]},{"authority":"both","name":"GetGaitMode","description":"Gets the GaitMode","return":[{"type":"GaitMode"}]},{"authority":"both","name":"GetGrabbedProp","description":"Gets the Grabbed Prop","return":[{"type":"Prop?"}]},{"authority":"both","name":"GetGravityScale","description":"Gets the gravity scale","return":[{"type":"float"}]},{"authority":"both","name":"GetHealth","description":"Gets the current health","return":[{"type":"integer"}]},{"authority":"both","name":"GetImpactDamageTaken","description":"Gets the impact damage taken","return":[{"type":"integer"}]},{"authority":"both","name":"GetJumpZVelocity","description":"Gets the Jump Z Velocity","return":[{"type":"integer"}]},{"authority":"both","name":"GetMaxHealth","description":"Gets the Max Health","return":[{"type":"integer"}]},{"authority":"both","name":"GetMesh","description":"Gets the Skeletal Mesh Asset","return":[{"type":"SkeletalMeshPath"}]},{"authority":"both","name":"GetMovingTo","description":"Gets the Moving To location","return":[{"type":"Vector","description":"the moving to location or Vector(0, 0, 0) if not moving"}]},{"authority":"both","name":"GetPicked","description":"Gets the Pickable if picking up","return":[{"type":"Pickable?"}]},{"authority":"both","name":"GetPlayer","description":"Gets the possessing Player","return":[{"type":"Player?"}]},{"authority":"both","name":"GetPunchDamage","description":"Gets the punch damage","return":[{"type":"integer"}]},{"authority":"both","name":"GetSpeedMultiplier","description":"Gets the speed multiplier","return":[{"type":"float"}]},{"authority":"both","name":"GetStanceMode","description":"Gets the Stance Mode","return":[{"type":"StanceMode"}]},{"authority":"both","name":"GetSwimmingMode","description":"Gets the Swimming Mode","return":[{"type":"SwimmingMode"}]},{"authority":"both","name":"GetTeam","description":"Gets the Team","return":[{"type":"integer"}]},{"authority":"both","name":"GetVehicle","description":"Gets the entered Vehicle","return":[{"type":"Vehicle?"}]},{"authority":"both","name":"GetViewMode","description":"Gets the View Mode","return":[{"type":"ViewMode"}]},{"authority":"both","name":"GetWeaponAimMode","description":"Gets the Weapon Aim Mode","return":[{"type":"AimMode"}]}],"events":[{"authority":"client","name":"AnimationBeginNotify","description":"When an Animation Montage Notify begins","arguments":[{"type":"Character","name":"self"},{"type":"string","name":"notify_name"}]},{"authority":"client","name":"AnimationEndNotify","description":"When an Animation Montage Notify ends","arguments":[{"type":"Character","name":"self"},{"type":"string","name":"notify_name"}]},{"name":"Attack","authority":"both","description":"Triggered when the Character effectively attacks with a Melee","arguments":[{"name":"self","type":"Character"},{"name":"melee","type":"Melee"}]},{"authority":"both","name":"Death","description":"When Character Dies","arguments":[{"type":"Character","name":"self"},{"type":"integer","name":"last_damage_taken"},{"type":"string","name":"last_bone_damaged"},{"type":"DamageType","name":"damage_type_reason"},{"type":"Vector","name":"hit_from_direction"},{"type":"Player?","name":"instigator"},{"type":"Actor?","name":"causer","description":"The object which caused the damage"}]},{"authority":"both","name":"Drop","description":"When Character drops the currently picked up Pickable","arguments":[{"type":"Character","name":"self"},{"type":"Pickable","name":"object"},{"type":"boolean","name":"triggered_by_player"}]},{"authority":"both","name":"EnterVehicle","description":"When Character enters a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat_index"}]},{"authority":"server","name":"AttemptEnterVehicle","description":"Triggered when a Character attempts to enter a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"},{"type":"integer","name":"seat_index"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"FallingModeChange","description":"Called when FallingMode changes","arguments":[{"type":"Character","name":"self"},{"type":"FallingMode","name":"old_state"},{"type":"FallingMode","name":"new_state"}]},{"authority":"both","name":"Fire","description":"When Character fires a Weapon","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"}]},{"authority":"both","name":"GaitModeChange","description":"Called when GaitMode changes","arguments":[{"type":"Character","name":"self"},{"type":"GaitMode","name":"old_state"},{"type":"GaitMode","name":"new_state"}]},{"authority":"both","name":"GrabProp","description":"When Character grabs up a Prop","arguments":[{"type":"Character","name":"self"},{"type":"Prop","name":"prop"}]},{"authority":"both","name":"HealthChange","description":"When Character has it\'s Health changed, or because took damage or manually set through scripting or respawning","arguments":[{"type":"Character","name":"self"},{"type":"integer","name":"old_health"},{"type":"integer","name":"new_health"}]},{"authority":"both","name":"Highlight","description":"When Character highlights/looks at a Prop or a Pickable","arguments":[{"type":"Character","name":"self"},{"type":"boolean","name":"is_highlighted","description":"Whether the object is being highlighted or not"},{"type":"Prop|Pickable","name":"object"}]},{"authority":"server","name":"Interact","description":"Triggered when a Character interacts with a Prop or Pickable","arguments":[{"type":"Character","name":"self"},{"type":"Prop|Pickable","name":"object"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"LeaveVehicle","description":"When Character leaves a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"}]},{"authority":"server","name":"AttemptLeaveVehicle","description":"Triggered when this Character attempts to leave a vehicle","arguments":[{"type":"Character","name":"self"},{"type":"Vehicle","name":"vehicle"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"MoveComplete","description":"Called when AI reaches it\'s destination, or when it fails","arguments":[{"type":"Character","name":"self"},{"type":"boolean","name":"succeeded"}]},{"authority":"both","name":"PickUp","description":"When Character picks up anything","arguments":[{"type":"Character","name":"self"},{"type":"Pickable","name":"object"}]},{"authority":"both","name":"Possess","description":"When Character is possessed","arguments":[{"type":"Character","name":"self"},{"type":"Player","name":"possesser"}]},{"authority":"both","name":"Punch","description":"When Character punches","arguments":[{"type":"Character","name":"self"}]},{"authority":"both","name":"RagdollModeChange","description":"When Character enters or leaves ragdoll","arguments":[{"type":"Character","name":"self"},{"type":"boolean","name":"old_state"},{"type":"boolean","name":"new_state"}]},{"authority":"both","name":"AttemptReload","description":"Triggered when this Character attempts to reload","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"}],"return":[{"type":"boolean","description":"Return <code>false</code> to prevent it"}]},{"authority":"both","name":"Reload","description":"When Character reloads a weapon","arguments":[{"type":"Character","name":"self"},{"type":"Weapon","name":"weapon"},{"type":"integer","name":"ammo_to_reload"}]},{"authority":"both","name":"Respawn","description":"When Character Respawns","arguments":[{"type":"Character","name":"self"}]},{"authority":"both","name":"StanceModeChange","description":"Called when StanceMode changes","arguments":[{"type":"Character","name":"self"},{"type":"StanceMode","name":"old_state"},{"type":"StanceMode","name":"new_state"}]},{"authority":"both","name":"SwimmingModeChange","description":"Called when Swimming Mode changes","arguments":[{"type":"Character","name":"self"},{"type":"SwimmingMode","name":"old_state"},{"type":"SwimmingMode","name":"new_state"}]},{"authority":"both","name":"TakeDamage","description":"Triggered when this Character takes damage","arguments":[{"type":"Character","name":"self"},{"type":"integer","name":"damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player","name":"instigator","description":"The player which caused the damage"},{"type":"any","name":"causer","description":"The object which caused the damage"}],"return":[{"type":"boolean","description":"Return <code>false</code> to cancel the damage (will still display animations, particles and apply impact forces)"}]},{"authority":"both","name":"UnGrabProp","description":"When Character drops a Prop","arguments":[{"type":"Character","name":"self"},{"type":"Prop","name":"prop"}]},{"authority":"both","name":"UnPossess","description":"When Character is unpossessed","arguments":[{"type":"Character","name":"self"},{"type":"Player","name":"old_possesser"}]},{"authority":"both","name":"ViewModeChange","description":"When Character changes it\'s View Mode","arguments":[{"type":"Character","name":"self"},{"type":"ViewMode","name":"old_state"},{"type":"ViewMode","name":"new_state"}]},{"authority":"both","name":"WeaponAimModeChange","description":"Called when Weapon Aim Mode changes","arguments":[{"type":"Character","name":"self"},{"type":"AimMode","name":"old_state"},{"type":"AimMode","name":"new_state"}]},{"authority":"both","name":"PullUse","description":"Triggered when a Character presses the use button for a Pickable (i.e. clicks left mouse button with this equipped)","arguments":[{"type":"Character","name":"self","description":"The Character that used it"},{"type":"Pickable","name":"pickable","description":"The Pickable which has just been used"}]},{"authority":"both","name":"ReleaseUse","description":"Triggered when a Character releases the use button for a Pickable (i.e. releases left mouse button with this equipped)","arguments":[{"type":"Character","name":"self","description":"The Character that stopped using it"},{"type":"Pickable","name":"pickable","description":"The Pickable which has just stopped being used"}]}]}')},17516:e=>{e.exports=JSON.parse('{"name":"Database","description":"The Database entity provides programmers a way to access SQL databases easily through scripting.","authority":"server","constructors":[{"description":"Default Constructor","parameters":[{"type":"DatabaseEngine","name":"database_engine","description":"Database Engine"},{"type":"string","name":"connection_string","description":"<a href=\'#connection-string\'>Connection String</a> used to create and connect to the database"},{"type":"integer","name":"pool_size","default":"10","description":"Size of the connection pool when calling several queries simultaneously"}]}],"functions":[{"name":"Close","authority":"server","description":"Closes the Database"},{"name":"ExecuteAsync","authority":"server","description":"Execute a query asyncronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"function","name":"callback","default":"nil","description":"Callback in the format (rows_affected, error)"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}]},{"name":"Execute","authority":"server","description":"Execute a query syncronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}],"return":[{"type":"integer","description":"affected rows"},{"type":"string","description":"error (if any)"}]},{"name":"SelectAsync","authority":"server","description":"Execute a select query asyncronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"function","name":"callback","default":"nil","description":"Callback in the format (rows: table[], error: string?)"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}]},{"name":"Select","authority":"server","description":"Selects a query syncronously","parameters":[{"type":"string","name":"query","description":"Query to execute"},{"type":"any","name":"parameters...","default":"nil","description":"Sequence of parameters to escape into the Query"}],"return":[{"type":"table[]","description":"rows fetched"},{"type":"string","description":"error (if any)"}]}]}')},16736:e=>{e.exports=JSON.parse('{"name":"Decal","description":"Decals are Materials that are projected onto meshes in your level, including Static Meshes and Skeletal Meshes.","authority":"client","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"MaterialPath","name":"material_asset","description":"Material Asset"},{"type":"Vector","name":"size","default":"Vector(128, 256, 256)","description":"Size of the Decal"},{"type":"float","name":"lifespan","default":"60","description":"Time until automatically destroyed in seconds"},{"type":"float","name":"fade_screen_size","default":"0.01","description":"Size percentage in screen to fade out"}]}]}')},3898:e=>{e.exports=JSON.parse('{"name":"File","description":"A File represents an entry to a system file.","authority":"server","constructors":[{"description":"Default Constructor","parameters":[{"type":"string","name":"file_path","description":"Path relative to server executable"},{"type":"boolean","name":"truncate","default":"false","description":"Whether or not to clear the file upon opening it"}]}],"functions":[{"name":"Close","authority":"server","description":"Closes the file and destroys the entity"},{"name":"Flush","authority":"server","description":"Flushes content to the file"},{"return":[{"type":"boolean","description":"if is EOF"}],"authority":"server","name":"IsEOF","description":"Checks if the file status is End of File"},{"return":[{"type":"boolean","description":"if status is Bad"}],"authority":"server","name":"IsBad","description":"Checks if the file status is Bad"},{"return":[{"type":"boolean","description":"if status is Good"}],"authority":"server","name":"IsGood","description":"Checks if the file status is Good"},{"return":[{"type":"boolean","description":"if last operation failed"}],"authority":"server","name":"HasFailed","description":"Checks if the last operation has Failed"},{"return":[{"type":"string","description":"file data"}],"authority":"server","name":"Read","description":"Reads characters from the File and returns it. Also moves the file pointer to the latest read position. Pass 0 to read the whole file","parameters":[{"type":"integer","name":"length","default":"0","description":"Length to be read from file"}]},{"authority":"server","name":"ReadAsync","description":"Reads characters from the File asynchronously.","parameters":[{"type":"integer","name":"length","description":"Length to be read from file"},{"type":"function","name":"callback","description":"Callback with the file read"}]},{"return":[{"type":"string","description":"file line data"}],"authority":"server","name":"ReadLine","description":"Reads and returns the next file line"},{"return":[{"type":"table","description":"parsed table"}],"authority":"server","name":"ReadJSON","description":"Reads the whole file as a JSON and returns it."},{"authority":"server","name":"ReadJSONAsync","description":"Reads the whole file as a JSON and returns it asynchronously.","parameters":[{"type":"function","name":"callback","description":"Callback with the file read"}]},{"name":"Seek","authority":"server","description":"Sets the file pointer to a specific position","parameters":[{"type":"integer","name":"position","description":"Position to offset the file pointer"}]},{"return":[{"type":"integer","description":"file size"}],"authority":"server","name":"Size","description":"Returns the size of the file"},{"name":"Skip","authority":"server","description":"Skips n (amount) positions from the current file pointer position","parameters":[{"type":"integer","name":"amount","description":"Amount to offset the file pointer"}]},{"return":[{"type":"integer","description":"current file pointer position"}],"authority":"server","name":"Tell","description":"Returns the current file pointer position"},{"name":"Write","authority":"server","description":"Writes the Data at the current position of the file","parameters":[{"type":"string","name":"data","description":"Data to write to the file"}]}],"static_functions":[{"type":"integer","name":"Time","return":[{"type":"integer","description":"the last update time in unix time"}],"description":"Returns when a file was last modified in Unix time","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to file"}]},{"type":"boolean","name":"CreateDirectory","return":[{"type":"boolean","description":"if succeeded"}],"description":"Creates a Directory (for every folder passed)","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to folder"}]},{"name":"Remove","return":[{"type":"integer","description":"amount of files deleted"}],"description":"Deletes a folder or file","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to file or folder"}]},{"name":"Exists","return":[{"type":"boolean","description":"if exists"}],"description":"Verifies if a entry exists in the file system","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to file or folder"}]},{"name":"IsDirectory","return":[{"type":"boolean","description":"if is a directory"}],"description":"Checks if a path is a directory","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to folder"}]},{"name":"IsRegularFile","return":[{"type":"boolean","description":"if is a regular file"}],"description":"Checks if a path is a file","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to filey"}]}]}')},81514:e=>{e.exports=JSON.parse('{"name":"Grenade","description":"Grenades are Pickables which Characters can grab and throw. It explodes after X seconds after thrown, causing damage around.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":"nanos-world::SM_Grenade_G67"},{"type":"ParticlePath","name":"explosion_particles","default":"nanos-world::P_Grenade_Special"},{"type":"SoundPath","name":"explosion_sound","default":"nanos-world::A_Explosion_Large"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"},{"type":"boolean","name":"gravity_enabled","default":"true"}]}],"functions":[{"authority":"server","name":"Explode","description":"Forces this grenade to Explode"},{"authority":"server","name":"SetDamage","description":"Sets Damage parameters of this Grenade","parameters":[{"type":"integer","name":"base_damage","default":"90","description":"Max damage when inner radius"},{"type":"integer","name":"minimum_damage","default":"0","description":"Min damage when outer radius"},{"type":"integer","name":"damage_inner_radius","default":"200","description":"Radius which damage will be 100%"},{"type":"integer","name":"damage_outer_radius","default":"1000","description":"Radius which damage will be interpoled through falloff"},{"type":"float","name":"damage_falloff","default":"1","description":"Lerp function between Max and Min damage"}]},{"authority":"server","name":"SetTimeToExplode","description":"Set Time until Explosion after thrown","parameters":[{"type":"float","name":"time","description":"Time in seconds"}]},{"authority":"server","name":"SetThrowForce","description":"Set Impulse applied when throwing","parameters":[{"type":"integer","name":"force"}]},{"authority":"both","name":"GetBaseDamage","description":"Damage at Inner Radius","return":[{"type":"float"}]},{"authority":"both","name":"GetDamageFalloff","description":"Radius which BaseDamage will apply proportionally","return":[{"type":"float"}]},{"authority":"both","name":"GetDamageInnerRadius","description":"Radius which MinimumDamage will apply","return":[{"type":"float"}]},{"authority":"both","name":"GetDamageOuterRadius","description":"Radius which BaseDamage will apply","return":[{"type":"float"}]},{"authority":"both","name":"GetMinimumDamage","description":"Damage at Outer Radius","return":[{"type":"float"}]},{"authority":"both","name":"GetTimeToExplode","description":"Time until Explosion","return":[{"type":"float"}]},{"authority":"both","name":"GetThrowForce","description":"Impulse applied when throwing","return":[{"type":"float"}]}],"events":[{"name":"Explode","authority":"both","description":"Triggered when the grenade has exploded","arguments":[{"name":"self","type":"Grenade","description":"The grenade which exploded"}]},{"name":"Throw","authority":"both","description":"Triggered when the grenade has been thrown","arguments":[{"name":"self","type":"Grenade","description":"The grenade which exploded"},{"name":"handler","type":"Character","description":"The Character which has thrown it"}]}]}')},7832:e=>{e.exports=JSON.parse('{"name":"Light","description":"A Light represents a Lighting source.","authority":"both","inheritance":["Entity","Actor"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)","description":"Relevant only for Rect and Spot LightTypes"},{"type":"Color","name":"color","default":"Color(1, 1, 1)"},{"type":"LightType","name":"light_type","default":"LightType.Point"},{"type":"float","name":"intensity","default":"30"},{"type":"float","name":"attenuation_radius","default":"250"},{"type":"float","name":"cone_angle","default":"44","description":"Relevant only for Spot LightType"},{"type":"float","name":"inner_cone_angle_percent","default":"0","description":"Inner Cone Angle Percent (Relevant only for Spot LightType) (0-1)"},{"type":"float","name":"max_daw_distance","default":"5000","description":"Max Draw Distance (Good for performance) - 0 for infinite"},{"type":"boolean","name":"use_inverse_squared_falloff","default":"true","description":"Whether to use physically based inverse squared distance falloff, where Attenuation Radius is only clamping the light\'s contribution. (Spot and Point types only)"},{"type":"boolean","name":"cast_shadows","default":"true"},{"type":"boolean","name":"visible","default":"true"}]}],"functions":[{"name":"SetColor","description":"Sets the light color","authority":"both","parameters":[{"type":"Color","name":"color","description":"The light color"}]},{"name":"SetTextureLightProfile","description":"Sets the light Texture Profile","authority":"both","parameters":[{"type":"LightProfile","name":"light_profile","description":"The Light Profile to use"}],"relations":{"etc":[{"label":"\ud83d\udca1 Light Profiles","url":"#light-profiles"}]}},{"name":"SetCastShadows","authority":"both","parameters":[{"type":"boolean","name":"is_shadows_enabled"}]},{"name":"SetIntensity","authority":"both","parameters":[{"type":"float","name":"intensity"}]},{"name":"SetAttenuationRadius","authority":"both","parameters":[{"type":"float","name":"attenuation_radius"}]},{"name":"GetCastShadows","authority":"both","return":[{"type":"boolean"}]},{"name":"GetIntensity","authority":"both","return":[{"type":"float"}]},{"name":"GetAttenuationRadius","authority":"both","return":[{"type":"float"}]},{"name":"GetColor","authority":"both","return":[{"type":"Color"}]}]}')},95645:e=>{e.exports=JSON.parse('{"name":"Melee","description":"A Melee represents an Entity which can be Pickable by a Character and can be used to melee attack, Charactes can hold it with hands with pre-defined handling modes.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"StaticMeshPath","name":"asset","default":""},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"HandlingMode","name":"handling_mode","default":"HandlingMode.Torch"},{"type":"MaterialPath","name":"crosshair_material","default":""},{"type":"boolean","name":"can_use","default":"true"}]}],"functions":[{"authority":"server","name":"AddAnimationCharacterUse","description":"Sets an Animation when attacking","description_long":"Sets an Animation when attacking<br/><br/>You can add more than one animation, which will be selected randomly when attacking","parameters":[{"type":"AnimationPath","name":"asset_path","description":"The Animation used when attacking"},{"type":"float","name":"play_rate","description":"The Animation Play Rate"},{"type":"AnimationSlotType","name":"slot_Type","description":"Whether to play it on upper body or full body"}]},{"authority":"server","name":"ClearAnimationsCharacterUse","description":"Clears the Character Attack Animation list"},{"authority":"both","name":"SetImpactSound","description":"Sets the Sound when hitting something","description_long":"Sets the Sound when hitting something<br/><br/>Note: Surfaces <b>Water</b> and <b>Flesh</b> already have default sounds and must be explicitly set to override","parameters":[{"type":"SurfaceType","name":"surface_type","description":"The surface to apply the sound. Use <code>SurfaceType.Default</code> to be the default to all hits"},{"type":"SoundPath","name":"asset_path","description":"The Sound used when attacking"},{"type":"float","name":"volume"},{"type":"float","name":"pitch"}]},{"authority":"both","name":"SetSoundUse","description":"Sets the Sound when attacking","parameters":[{"type":"SoundPath","name":"asset_path","description":"The Sound used when attacking"}]},{"authority":"server","name":"SetBaseDamage","description":"Sets the Base Damage","parameters":[{"type":"integer","name":"damage","default":"","description":"The Base Damage value"}]},{"authority":"server","name":"SetDamageSettings","description":"Sets the times when to start applying damage and when to end","description_long":"Sets the times when to start applying damage and when to end. During this time the collision of the melee will be enabled and the damage will be applied if it hits something","parameters":[{"type":"float","name":"damage_start_time","description":"The initial time to start applying damage"},{"type":"float","name":"damage_duration_time","description":"The duration time to stop applying damage"}]},{"authority":"both","name":"SetCooldown","description":"Sets the cooldown between attacking","parameters":[{"type":"float","name":"cooldown"}]},{"authority":"both","name":"GetAnimationsCharacterUse","description":"Gets the Animations when Character uses it","return":[{"type":"AnimationPath[]"}]},{"authority":"both","name":"GetSoundUse","description":"Gets the Sound when Character uses it","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetBaseDamage","description":"Gets the Base Damage","return":[{"type":"integer"}]},{"authority":"both","name":"GetCooldown","description":"Gets the Cooldown between usages","return":[{"type":"float"}]}],"events":[{"name":"Attack","authority":"both","description":"Triggered when the Character effectively attacks with this Melee","arguments":[{"name":"self","type":"Melee"},{"name":"handler","type":"Character"}]}]}')},76662:e=>{e.exports=JSON.parse('{"name":"Particle","description":"Class to spawn Particle Systems used to create effects in the world.","authority":"both","inheritance":["Entity","Actor"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"ParticlePath","name":"asset"},{"type":"boolean","name":"auto_destroy","default":"true"},{"type":"boolean","name":"auto_activate","default":"true"}]}],"functions":[{"name":"Activate","description":"Activates the Emitter","authority":"both","parameters":[{"type":"boolean","name":"should_reset","description":"If should reset"}]},{"name":"Deactivate","description":"Deactivate the Emitter","authority":"both"},{"name":"SetParameterFloat","description":"Sets a float parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"float","name":"value","description":"The float value"}]},{"name":"SetParameterInt","description":"Sets an integer parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"integer","name":"value","description":"The int value"}]},{"name":"SetParameterBool","description":"Sets a boolean parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"boolean","name":"value","description":"The boolean value"}]},{"name":"SetParameterVector","description":"Sets a Vector parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Vector","name":"value","description":"The Vector value"}]},{"name":"SetParameterColor","description":"Sets a Color parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Color","name":"value","description":"The Color value"}]},{"name":"SetParameterMaterial","description":"Sets a Material parameter in this Particle System","authority":"both","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"MaterialPath","name":"value","description":"The Material value"}]},{"name":"SetParameterMaterialFromTexture","description":"Sets a Material from a Texture parameter in this Particle System","description_long":"This will create a Material and set this Texture as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"ImagePath","name":"value","description":"The Texture value"}]},{"name":"SetParameterMaterialFromCanvas","description":"Sets a Material from a Canvas parameter in this Particle System","description_long":"This will create a Material and set this Canvas as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"Canvas","name":"value","description":"The Canvas value"}]},{"name":"SetParameterMaterialFromWebUI","description":"Sets a Material from a Canvas parameter in this Particle System","description_long":"This will create a Material and set this WebUI as it\'s parameter internally, then set the Material into the Particle parameter","authority":"client","parameters":[{"type":"string","name":"parameter","description":"The parameter name"},{"type":"WebUI","name":"value","description":"The WebUI value"}]}]}')},38143:e=>{e.exports=JSON.parse('{"name":"Player","description":"Players are Entities that represents the individual behind the mouse and keyboard. Players are spawned automatically when connected to the server.","inheritance":["Entity"],"functions":[{"authority":"server","name":"Ban","description":"Bans the player from the server","parameters":[{"name":"reason","type":"string"}]},{"authority":"server","name":"Connect","description":"Redirects the player to another server","parameters":[{"name":"IP","type":"string"},{"name":"password","type":"string","default":"","description":"Server password"}]},{"authority":"server","name":"Kick","description":"Kicks the player from the server","parameters":[{"name":"reason","type":"string"}]},{"authority":"server","name":"Possess","description":"Makes a Player to possess and control a Character","parameters":[{"name":"new_character","type":"Character"},{"name":"blend_time","type":"float","default":"0"},{"name":"exp","type":"float","default":"0"}]},{"authority":"both","name":"StartCameraFade","description":"Does a camera fade to/from a solid color","description_long":"Does a camera fade to/from a solid color. Animates automatically","parameters":[{"name":"from_alpha","type":"float","description":"Alpha at which to begin the fade. Range [0..1], where 0 is fully transparent and 1 is fully opaque solid color."},{"name":"to_alpha","type":"float","description":"Alpha at which to finish the fade."},{"name":"duration","type":"float","description":"How long the fade should take, in seconds."},{"name":"to_color","type":"Color","description":"Color to fade to/from."},{"name":"should_fade_audio","type":"boolean","description":"True to fade audio volume along with the alpha of the solid color.","deafult":false},{"name":"hold_when_finished","type":"boolean","description":"True for fade to hold at the ToAlpha until explicitly stopped (e.g. with StopCameraFade)","deafult":false}]},{"authority":"both","name":"SetManualCameraFade","description":"Turns on camera fading at the given opacity","description_long":"Turns on camera fading at the given opacity. Does not auto-animate, allowing user to animate themselves. Call StopCameraFade to turn fading back off.","parameters":[{"name":"in_fade_amount","type":"float","description":"Range [0..1], where 0 is fully transparent and 1 is fully opaque solid color."},{"name":"color","type":"Color"},{"name":"in_fade_audio","type":"boolean"}]},{"authority":"both","name":"StopCameraFade","description":"Stops camera fading."},{"authority":"both","name":"SetCameraLocation","description":"Sets the Player\'s Camera Location (only works if not possessing any Character)","parameters":[{"name":"location","type":"Vector"}]},{"authority":"both","name":"SetCameraRotation","description":"Sets the Player\'s Camera Rotation","parameters":[{"name":"rotation","type":"Rotator"}]},{"authority":"both","name":"TranslateCameraTo","description":"Smoothly moves the Player\'s Camera Location (only works if not possessing any Character)","parameters":[{"name":"location","type":"Vector"},{"name":"time","type":"float"},{"name":"exp","type":"float","default":"0","description":"Exponential used to smooth interp, use 0 for linear movement"}]},{"authority":"both","name":"RotateCameraTo","description":"Smoothly moves the Player\'s Camera Rotation","parameters":[{"name":"rotation","type":"Rotator"},{"name":"time","type":"float"},{"name":"exp","type":"float","default":"0","description":"Exponential used to smooth interp, use 0 for linear movement"}]},{"authority":"both","name":"SetCameraSocketOffset","description":"Sets the Player\'s Camera Socket Offset (Spring Arm Offset)","parameters":[{"name":"socket_offset","type":"Vector"}]},{"authority":"both","name":"SetCameraArmLength","description":"Sets the Player\'s Camera Arm Length (Spring Arm length)","parameters":[{"name":"length","type":"float"}]},{"authority":"both","name":"AttachCameraTo","description":"Attaches the Player`s Camera to an Actor","parameters":[{"name":"actor","type":"Actor"},{"name":"socket_offset","type":"Vector"},{"name":"blend_speed","type":"float"}]},{"authority":"both","name":"ResetCamera","description":"Resets the Camera to default state (Unspectate and Detaches)"},{"authority":"both","name":"Spectate","description":"Spectates other Player","parameters":[{"name":"player","type":"Player"},{"name":"blend_speed","type":"float","default":"0"}]},{"authority":"server","name":"SetName","description":"Sets the player\'s name","parameters":[{"name":"new_name","type":"string"}]},{"authority":"server","name":"SetVOIPChannel","description":"Sets the VOIP Channel of this Player (will only communicate with other players in the same channel)","parameters":[{"name":"channel","type":"integer"}]},{"authority":"both","name":"SetVOIPSetting","description":"Sets the VOIP Settings of this Player","parameters":[{"name":"setting","type":"VOIPSetting"}]},{"authority":"both","name":"SetVOIPVolume","description":"Sets the VOIP Volume of this Player","parameters":[{"name":"volume","type":"float"}]},{"authority":"server","name":"UnPossess","description":"Release the Player from the Character"},{"authority":"both","name":"GetSteamID","return":[{"type":"string"}]},{"authority":"both","name":"GetAccountID","return":[{"type":"string"}]},{"authority":"both","name":"GetAccountName","return":[{"type":"string"}]},{"authority":"both","name":"GetAccountIconURL","description":"Return a URL which can be used through WebUI to display the Player\'s Steam Avatar (64x64)","return":[{"type":"string"}]},{"authority":"client","name":"GetCameraLocation","return":[{"type":"Vector"}]},{"authority":"client","name":"GetCameraArmLength","parameters":[{"name":"return_target","type":"boolean","default":"false","description":"Whether to return the current (false) or target (true) value"}],"return":[{"type":"float"}]},{"authority":"client","name":"GetCameraRotation","return":[{"type":"Rotator"}]},{"authority":"both","name":"GetControlledCharacter","return":[{"type":"Character?"}]},{"authority":"server","name":"GetIP","return":[{"type":"string"}]},{"name":"GetDimension","description":"Gets this Player\'s dimension","authority":"both","return":[{"type":"integer"}]},{"authority":"both","name":"GetName","return":[{"type":"string"}]},{"authority":"both","name":"GetPing","return":[{"type":"integer"}]},{"authority":"both","name":"GetVOIPChannel","return":[{"type":"integer"}]},{"authority":"both","name":"GetValue","parameters":[{"name":"key","type":"string"},{"name":"fallback","type":"any"}],"return":[{"type":"any"}]},{"authority":"client","name":"IsHost","return":[{"type":"boolean"}]},{"authority":"client","name":"IsLocalPlayer","return":[{"type":"boolean"}]},{"authority":"both","name":"GetVOIPSetting","return":[{"type":"VOIPSetting"}]}],"events":[{"authority":"server","name":"DimensionChange","description":"Triggered when a Player changes it\'s dimension","arguments":[{"name":"self","type":"Player"},{"name":"old_dimension","type":"integer"},{"name":"new_dimension","type":"integer"}]},{"authority":"both","name":"Possess","description":"Trigerred when Player starts controlling a Character","arguments":[{"name":"self","type":"Player"},{"name":"character","type":"Character"}]},{"authority":"server","name":"Ready","description":"Triggered when Player is ready (the client fully joined, loaded the map and all entities and is ready to play)","arguments":[{"name":"self","type":"Player"}]},{"authority":"both","name":"UnPossess","description":"A Character was released from the Player","arguments":[{"name":"self","type":"Player"},{"name":"character","type":"Character"}]},{"authority":"both","name":"VOIP","description":"When a Player starts/ends using VOIP","arguments":[{"name":"self","type":"Player"},{"name":"is_talking","type":"boolean"}],"return":[{"type":"boolean","description":"When \'is_talking\' is true, return false to prevent this voice stream from playing (on server will prevent for everyone, on client will prevent only for the client)"}]}]}')},83887:e=>{e.exports=JSON.parse('{"name":"Prop","description":"A Prop represents a Dynamic Mesh which can be spawned in the world, can be grabbed around by characters and have physics.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Auto","description":"Setting <code>CollisionType.Auto</code> will make it automatically switch between <b>Normal</b> and <b>IgnoreOnlyPawn</b> if they are smaller than radius <b>40</b> units."},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"GrabMode","name":"grab_mode","default":"GrabMode.Auto","description":"Whether or not the Prop can be grabbed"},{"type":"CCDMode","name":"ccd_mode","default":"CCDMode.Auto","description":"Whether or not the Prop should have CCD enabled (disabling it may cause Props passing through objects if it\'s kinda small). It\'s smart to force it disabled on \'visual only\' props."}]}],"functions":[{"name":"SetGrabMode","description":"Sets ability to Characters to Grab this Prop","parameters":[{"type":"GrabMode","name":"grab_mode","description":"If the Prop will be able to be grabbable or not. Set to Auto to automatically define based on Prop\'s size."}],"authority":"server"},{"name":"SetPhysicsDamping","description":"Sets the Physics damping of this Prop","parameters":[{"type":"float","name":"linear_damping","description":""},{"type":"float","name":"angular_damping","description":""}],"authority":"authority"},{"name":"SetMesh","description":"Changes the mesh in runtime","return":[{"type":"StaticMeshPath","description":"asset"}],"authority":"authority"},{"name":"GetMesh","description":"Gets the Asset name","return":[{"type":"string","description":"asset name"}],"authority":"both"},{"name":"GetHandler","description":"Gets the Character (if existing) which is holding this","return":[{"type":"Character?","description":"the character that holds the object"}],"authority":"both"},{"name":"GetGrabMode","description":"Gets ability to Grab this Prop","return":[{"type":"GrabMode"}],"authority":"both"}],"events":[{"name":"Grab","authority":"both","description":"Triggered when Character grabs a Prop","arguments":[{"type":"Prop","name":"self","description":"The prop which was Grabbed"},{"type":"Character","name":"character","description":"The new Grabber"}]},{"name":"Hit","authority":"both","description":"Triggered when this Prop hits something","arguments":[{"type":"Prop","name":"self","description":"The prop which has been hit"},{"type":"float","name":"impact_force","description":"The intensity of the Hit normalized by the Prop\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction it hits"},{"type":"Vector","name":"impact_location","description":"The world 3D location of the impact"},{"type":"Vector","name":"velocity","description":"The Prop velocity at the moment it hits"}]},{"name":"Interact","authority":"server","description":"When a Character interacts with this Prop (i.e. try to Grab it)","arguments":[{"type":"Prop","name":"self","description":"the object that undergoes an interaction"},{"type":"Character","name":"character","description":"the character who interacts with the object"}],"return":[{"type":"boolean","description":"Return false to prevent the interaction (i.e. prevent being grabbed)"}]},{"name":"TakeDamage","authority":"server","description":"When Prop takes Damage","arguments":[{"type":"Prop","name":"self","description":"the object that takes the damage"},{"type":"integer","name":"damage","description":"amount of damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player?","name":"instigator","description":"The player which caused the damage"},{"type":"Actor?","name":"causer","description":"The object which caused the damage"}]},{"name":"UnGrab","authority":"both","description":"Triggered when this Prop is ungrabbed","arguments":[{"type":"Prop","name":"self","description":"The prop which has been ungrabbed"},{"type":"Character","name":"character","description":"The old Grabber"}]}]}')},39526:e=>{e.exports=JSON.parse('{"name":"SceneCapture","description":"Scene Capture is an Actor which captures a fully dynamic image of the scene into a Texture. It captures the scene from its view frustum, stores that view as an image, which is then used within a Material.","authority":"client","inheritance":["Entity","Actor"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)","description":"Location"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)","description":"Rotation"},{"type":"integer","name":"width","default":"128","description":"Width of the generated Texture"},{"type":"integer","name":"height","default":"128","description":"Height of the generated Texture"},{"type":"float","name":"render_rate","default":"0.033","description":"Render Rate (how frequent is the capture)"},{"type":"float","name":"view_distance","default":"5000","description":"Maximum distance of capturing"},{"type":"float","name":"fov_angle","default":"90","description":"FOV"},{"type":"boolean","name":"enable_distance_optimization","default":"true","description":"Reduces the rendering frequency if the entities with this Material are too far or not visible. Disable it to always render at the render_rate"}]}],"functions":[{"name":"AddRenderActor","description":"Adds an Actor to the Render Only list","description_long":"Adds an Actor to the Render Only list<br/><br/>Note: adding one actor to this will make the SceneCapture only to render those Actors.","authority":"client","parameters":[{"type":"Actor","name":"actor"}],"relations":{"functions":["RemoveRenderActor","ClearRenderActors"]}},{"name":"RemoveRenderActor","description":"Removes an Actor from the Render Only list","authority":"client","parameters":[{"type":"Actor","name":"actor"}],"relations":{"functions":["AddRenderActor","ClearRenderActors"]}},{"name":"ClearRenderActors","description":"Clears the Render Only list","authority":"client","relations":{"functions":["AddRenderActor","RemoveRenderActor"]}},{"name":"SetFreeze","description":"Stops or Restore Capturing","authority":"client","parameters":[{"type":"boolean","name":"freeze"}]},{"name":"EncodeToBase64","description":"Takes a snapshot of the SceneCapture and returns a Base64 of it","authority":"client","parameters":[{"type":"ImageFormat","name":"image_format","default":"ImageFormat.JPEG","description":"Which format to generate - JPEG is fastest but discards Alpha channel"}],"return":[{"type":"string"}],"relations":{"functions":["EncodeToBase64Async"]}},{"name":"EncodeToBase64Async","description":"Takes a snapshot of the SceneCapture and returns a Base64 of it (asynchronously)","authority":"client","parameters":[{"type":"ImageFormat","name":"image_format","default":"ImageFormat.JPEG","description":"Which format to generate - JPEG is fastest but discards Alpha channel"},{"type":"function","name":"callback","description":"Callback in the format (base_64: string)"}],"relations":{"functions":["EncodeToBase64"]}},{"name":"SetFOVAngle","description":"Sets the FOV","authority":"client","parameters":[{"type":"float","name":"angle"}]},{"name":"SetShowFlag","description":"Enables/Disables rendering features from being captured","description_long":"Enables/Disables rendering features from being captured<br/>A complete list of available flags can be found in the <a href=\'https://docs.unrealengine.com/5.0/en-US/API/Runtime/Engine/FEngineShowFlags/\'>Official Unreal Documentation</a>","authority":"client","parameters":[{"type":"string","name":"flag"},{"type":"boolean","name":"enable"}]},{"name":"Resize","description":"Change the output Texture size\\nNote: too high texture will make the capture slower and will affect game performance","authority":"client","parameters":[{"type":"integer","name":"width"},{"type":"integer","name":"height"}]},{"name":"SetRenderRate","description":"Set how frequent is the capture\\nNote: Setting to 0 will make it capture every frame","authority":"client","parameters":[{"type":"float","name":"render_rate"}]},{"name":"SetDistanceOptimizationEnabled","description":"Enables or not the rendering frequency optimization if the entities with this Material are too far","authority":"client","parameters":[{"type":"boolean","name":"enabled"}]}],"events":[{"name":"Capture","authority":"client","description":"Triggered when this SceneCapture does an update/renders a frame","arguments":[{"type":"SceneCapture","name":"self"}]}]}')},19093:e=>{e.exports=JSON.parse('{"name":"Sound","description":"Class for playing in-game 2D and 3D sounds.","authority":"client","inheritance":["Entity","Actor"],"constructors":[{"description":"Normal","parameters":[{"type":"Vector","name":"location","description":"Only used if 3D sound"},{"type":"SoundPath","name":"asset","description":"The Sound Asset to load"},{"type":"boolean","name":"is_2D_sound","default":"false","description":"Whether to spawn it as 2D or 3D"},{"type":"boolean","name":"auto_destroy","default":"true","description":"Whether to destroy after finished playing"},{"type":"SoundType","name":"sound_type","default":"SoundType.SFX","description":"Used to apply user\'s volume settings"},{"type":"float","name":"volume","default":"1"},{"type":"float","name":"pitch","default":"1"},{"type":"float","name":"inner_radius","default":"400","description":"Only used if 3D sound"},{"type":"float","name":"falloff_distance","default":"3600","description":"Only used if 3D sound"},{"type":"AttenuationFunction","name":"attenuation_function","default":"Linear","description":"Only used if 3D sound"},{"type":"boolean","name":"keep_playig_when_silent","default":"false","description":"Only used if 3D sound - Use with caution, it may cause performance issues!"},{"type":"SoundLoopMode","name":"loop_mode","default":"Default","description":"Whether should force sound to loop"}]}],"functions":[{"name":"FadeIn","authority":"client","description":"Plays the sound with a fade effect","parameters":[{"type":"float","name":"fade_in_duration"},{"type":"float","name":"fade_volume_level","default":"1"},{"type":"float","name":"start_time","default":"0"}]},{"name":"FadeOut","authority":"client","description":"Stops the sound with a fade effect","parameters":[{"type":"float","name":"fade_out_duration"},{"type":"float","name":"fade_volume_level","default":"0"},{"type":"boolean","name":"destroy_after_fadeout","default":"false"}]},{"name":"Play","authority":"client","description":"Starts the sound","parameters":[{"type":"float","name":"start_time","default":"0"}]},{"name":"SetFalloffDistance","authority":"client","description":"If a 3D Sound, sets the distance which the sound is inaudible","parameters":[{"type":"float","name":"falloff_distance"}]},{"name":"SetInnerRadius","authority":"client","description":"If a 3D Sound, sets the distance within the volume is 100%","parameters":[{"type":"float","name":"inner_radius"}]},{"name":"SetLowPassFilter","authority":"client","description":"Sets lowpass filter frequency. Sets 0 to disable it.","parameters":[{"type":"float","name":"frequency"}]},{"name":"SetPaused","authority":"client","description":"Pauses the sound","parameters":[{"type":"boolean","name":"pause","default":"true"}]},{"name":"SetPitch","authority":"client","description":"Sets the Sound\'s pitch","parameters":[{"type":"float","name":"new_pitch"}]},{"name":"SetVolume","authority":"client","description":"Sets the Sound\'s volume","parameters":[{"type":"float","name":"new_volume","description":"0-1"}]},{"name":"Stop","authority":"client","description":"Stops the sound"},{"name":"StopDelayed","authority":"client","description":"Stops the sound after the provided delay","parameters":[{"type":"float","name":"delay"}]},{"return":[{"type":"boolean"}],"name":"Is2D","authority":"client","description":"Gets if the sound is 2D"},{"return":[{"type":"boolean"}],"name":"IsPlaying","authority":"client","description":"Gets if the sound is playing"},{"return":[{"type":"float"}],"name":"GetDuration","authority":"client","description":"Gets the duration of the Sound"},{"return":[{"type":"float"}],"name":"GetPitch","authority":"client"},{"return":[{"type":"float"}],"name":"GetVolume","authority":"client"},{"return":[{"type":"float"}],"name":"GetLowPassFilter","authority":"client"},{"return":[{"type":"float"}],"name":"GetInnerRadius","authority":"client"},{"return":[{"type":"float"}],"name":"GetFalloffDistance","authority":"client"},{"return":[{"type":"float"}],"name":"GetSoundType","authority":"client"}]}')},75938:e=>{e.exports=JSON.parse('{"name":"StaticMesh","description":"A StaticMesh entity represents a Mesh which can be spawned in the world, can\'t move and is more optimized for using in decorating the world.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"StaticMeshPath","name":"static_mesh_asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"}]}],"functions":[{"name":"SetMesh","description":"Changes the mesh in runtime","return":[{"type":"StaticMeshPath","description":"asset"}],"authority":"authority"},{"name":"GetMesh","description":"Gets the Asset path mesh used","return":[{"type":"StaticMeshPath","description":"asset path"}],"authority":"both"},{"name":"IsFromLevel","description":"Gets if this StaticMesh is from the Level","return":[{"type":"boolean","description":"if this StaticMesh is from the level"}],"authority":"client"}]}')},18259:e=>{e.exports=JSON.parse('{"name":"TextRender","description":"A Text Render class is useful for spawning Texts in 3D world, you can even attach it to other entities.","authority":"both","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"string","name":"text"},{"type":"Vector","name":"scale","default":"Vector(1, 1, 1)"},{"type":"Color","name":"color","default":"Color(1, 1, 1, 1)"},{"type":"FontType","name":"font_type","default":"FontType.Roboto"},{"type":"TextRenderAlignCamera","name":"align_camera","default":"TextRenderAlignCamera.Unaligned"}]}],"functions":[{"name":"SetColor","authority":"both","description":"Sets the Color","description_long":"Sets the Color (Internally this will call the <code>SetMaterialColorParameter(\\"Tint\\", color)</code> method)","parameters":[{"name":"color","type":"Color"}]},{"name":"SetFont","authority":"both","description":"Sets the Font","parameters":[{"name":"font_type","type":"FontType"}]},{"name":"SetFreeze","authority":"both","description":"Freeze mesh rebuild, to avoid unnecessary mesh rebuilds when setting a few properties together","parameters":[{"name":"freeze","type":"boolean"}]},{"name":"SetGlyphSettings","authority":"both","description":"Sets the Glyph representation settings to generate the 3D Mesh for this text render","parameters":[{"type":"float","name":"extrude","default":"0"},{"type":"float","name":"level","default":"0"},{"type":"TextRenderBevelType","name":"bevel_type","default":"TextRenderBevelType.Convex"},{"type":"integer","name":"bevel_segments","default":"8"},{"type":"boolean","name":"outline","default":"false"}]},{"name":"SetMaxSize","authority":"both","description":"Sets the Max Size of the TextRender, optionally scaling it proportionally","parameters":[{"type":"integer","name":"max_width","default":"0"},{"type":"integer","name":"max_height","default":"0"},{"type":"boolean","name":"scale_proportionally","default":"true"}]},{"name":"SetText","authority":"both","description":"Sets the Text","parameters":[{"name":"text","type":"string"}]},{"name":"SetTextSettings","authority":"both","description":"Sets the Text & Font settings for this text render","parameters":[{"type":"float","name":"kerning","default":"0"},{"type":"float","name":"line_spacing","default":"0"},{"type":"float","name":"word_spacing","default":"0"},{"type":"TextRenderHorizontalAlignment","name":"horizontal_alignment","default":"TextRenderHorizontalAlignment.Center"},{"type":"TextRenderVerticalAlignment","name":"vertical_alignment","default":"0TextRenderVerticalAlignment.Center"}]}]}')},12553:e=>{e.exports=JSON.parse('{"name":"Trigger","description":"A Trigger class is a utility class to trigger events when any Entity enters an Area.","authority":"server","inheritance":["Entity","Actor"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"Vector","name":"extent","description":"Size of the Trigger. If using Sphere, only the X is used"},{"type":"TriggerType","name":"trigger_type","default":"TriggerType.Sphere"},{"type":"boolean","name":"is_visible","default":"false","description":"Useful for debugging"},{"type":"Color","name":"color","default":"Color.RED","description":"Color to paint the Trigger bounds - if Visible"},{"type":"string[]","name":"overlap_only_classes","default":"{}","description":"Filter Trigger to only overlap specific Classes. Leave it empty for all Classes"}]}],"functions":[{"name":"ForceOverlapChecking","description":"Forces a Overlap checking to occur, will immediately trigger overlaps","authority":"server"},{"name":"SetExtent","description":"Sets the extent size of this trigger (sphere triggers will use only the .X component for radius)","authority":"server","parameters":[{"type":"Vector","name":"extent"}]},{"name":"SetOverlapOnlyClasses","description":"Sets the filter to Trigger to only overlap specific Classes. Leave it empty for all Classes","authority":"server","parameters":[{"type":"string[]","name":"overlap_only_classes"}]}],"events":[{"name":"BeginOverlap","description":"Triggered when something overlaps this Trigger","arguments":[{"type":"Trigger","name":"self","description":"The Trigger entity"},{"type":"Actor","name":"entity","description":"Any Actor which overlaps"}]},{"name":"EndOverlap","description":"Triggered when something leaves this Trigger","arguments":[{"type":"Trigger","name":"self","description":"The Trigger entity"},{"type":"Actor","name":"entity","description":"Any Actor which left the Trigger"}]}]}')},38019:e=>{e.exports=JSON.parse('{"name":"Vehicle","description":"Vehicles are wheeled entities which Characters can possesses and drive.","authority":"server","inheritance":["Entity","Actor","Paintable"],"constructors":[{"description":"Default Constructor","parameters":[{"type":"Vector","name":"location"},{"type":"Rotator","name":"rotation"},{"type":"SkeletalMeshPath","name":"asset"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"boolean","name":"auto_create_physics","default":"true","description":"Can be disabled to improve performance when setting several configs. Must call <code>RecreatePhysics()</code> after all"},{"type":"boolean","name":"auto_unflip","default":"true","description":"Auto rotates the vehicle if flipped"},{"type":"SoundPath","name":"engine_sound","default":"nanos-world::A_Vehicle_Engine_01"},{"type":"SoundPath","name":"horn_sound","default":"nanos-world::A_Vehicle_Horn_Toyota"},{"type":"SoundPath","name":"brake_sound","default":"nanos-world::A_Vehicle_Brake"},{"type":"SoundPath","name":"engine_start_sound","default":"nanos-world::A_Car_Engine_Start"},{"type":"SoundPath","name":"vehicle_door_sound","default":"nanos-world::A_Vehicle_Door"},{"type":"boolean","name":"auto_start_engine","default":"true"},{"type":"BlueprintPath","name":"custom_animation_blueprint","default":""}]}],"functions":[{"authority":"both","name":"AddStaticMeshAttached","description":"Spawns and Attaches a StaticMesh into this Vehicle","description_long":"Spawns and Attaches a StaticMesh into this Vehicle in a Socket with relative Location and Rotation. Uses a custom ID to be used for removing it further<br/><br/>For customizing the Materials specific of a StaticMeshAttached, please use the following syntax as the <code>parameter_name</code> in the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":""},{"type":"string","name":"socket","default":""},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)"}]},{"authority":"server","name":"Horn","description":"Starts or stops the vehicles horn","parameters":[{"type":"boolean","name":"enable_horn"}]},{"authority":"server","name":"RecreatePhysics","description":"Recreate the Vehicle Physics","description_long":"Call this after configuring the vehicle if passed <code>auto_create_physics</code> to constructor"},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if existing, a StaticMesh from this Vehicle given it\'s custom ID","parameters":[{"type":"string","name":"id"}]},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"SetCameraOffset","description":"Sets the Vehicle Camera Offset","parameters":[{"type":"Vector","name":"offset"}]},{"authority":"server","name":"SetAutoStartEngine","description":"Sets if the Engine auto starts when the driver enters the Vehicle","parameters":[{"type":"boolean","name":"auto_start"}]},{"authority":"server","name":"SetEngineStarted","description":"Sets if the Engine is turned off/on","description_long":"Sets if the Engine is turned off/on (this will affect Lights, Sounds and ability to Throttle)","parameters":[{"type":"boolean","name":"started"}]},{"authority":"server","name":"SetDifferentialSetup","description":"Configures the Vehicle Differential","parameters":[{"type":"DifferentialType","name":"differential_type","default":"LimitedSlip_4W"},{"type":"float","name":"front_rear_split","default":"0.45","description":"Ratio of torque split between front and rear<br/>bigger than 0.5 means more to front<br/>lower than 0.5 means more to rear (works only with 4W type)"},{"type":"float","name":"front_left_right_split","default":"0.5","description":"Ratio of torque split between front-left and front-right<br/>bigger than 0.5 means more to front-left<br/>lower than 0.5 means more to front-right (works only with 4W and LimitedSlip_FrontDrive)"},{"type":"float","name":"rear_left_right_split","default":"0.5","description":"Ratio of torque split between rear-left and rear-right<br/>bigger than 0.5 means more to rear-left<br/>lower than 0.5 means more to rear-right (works only with 4W and LimitedSlip_RearDrive)"},{"type":"float","name":"center_bias","default":"1.3","description":"Maximum allowed ratio of average front wheel rotation speed and rear wheel rotation speeds Acceptable range: 1 .. infinite (works only with LimitedSlip_4W)"},{"type":"float","name":"front_bias","default":"1.3","description":"Maximum allowed ratio of front-left and front-right wheel rotation speeds Acceptable range: 1 .. infinite (works only with LimitedSlip_4W, LimitedSlip_FrontDrive)"},{"type":"float","name":"rear_bias","default":"1.3","description":"Maximum allowed ratio of rear-left and rear-right wheel rotation speeds Acceptable range: 1 .. infinite (works only with LimitedSlip_4W, LimitedSlip_FrontDrive)"}]},{"authority":"server","name":"SetEngineSetup","description":"Configures the Vehicle Engine (Torque, RPM, Braking)","parameters":[{"type":"integer","name":"max_torque","default":"700","description":"Max Engine Torque (Nm) is multiplied by TorqueCurve"},{"type":"integer","name":"max_rpm","default":"5700","description":"Maximum revolutions per minute of the engine"},{"type":"integer","name":"idle_rpm","default":"1200","description":"Idle RMP of engine then in neutral/stationary"},{"type":"float","name":"brake_effect","default":"0.05","description":"Braking effect from engine, when throttle released"},{"type":"integer","name":"rev_up_moi","default":"5","description":"Affects how fast the engine RPM speed up"},{"type":"integer","name":"rev_down_rate","default":"600","description":"Affects how fast the engine RPM slows down"}]},{"authority":"server","name":"SetAerodynamicsSetup","description":"Configures the Vehicle Aerodynamics Settings","parameters":[{"type":"integer","name":"mass","default":"1500","description":"Mass of the vehicle chassis"},{"type":"float","name":"drag_coefficient","default":"0.3","description":"Force resisting forward motion at speed"},{"type":"integer","name":"vehicle_chassis_width","default":"180","description":"Chassis width used for drag force computation (cm)"},{"type":"integer","name":"vehicle_chassis_height","default":"140","description":"Chassis height used for drag force computation (cm)"},{"type":"float","name":"vehicle_downforce_coefficient","default":"0.3","description":"Force pressing vehicle into ground at speed"},{"type":"Vector","name":"center_of_mass_override","default":"Vector(0, 0, 50)","description":"Overrides the center of mass. Good for curves stabilization. Ideally the Z should be the same as the wheels radius"}]},{"authority":"server","name":"SetTransmissionSetup","description":"Configures the Vehicle Transmission","parameters":[{"type":"float","name":"transmission_final_ratio","default":"3.08","description":"The final gear ratio multiplies the transmission gear ratios"},{"type":"integer","name":"transmission_change_up_rpm","default":"4500","description":"Engine Revs at which gear up change ocurrs"},{"type":"integer","name":"transmission_change_down_rpm","default":"2000","description":"Engine Revs at which gear down change ocurrs"},{"type":"float","name":"transmission_gear_change_time","default":"0.4","description":"Time it takes to switch gears (seconds)"},{"type":"float","name":"transmission_efficiency","default":"0.94","description":"Mechanical frictional losses mean transmission might operate at 0.94 (94% efficiency)"}]},{"authority":"server","name":"SetWheel","description":"Configures a Vehicle Wheel","description_long":"Wheels can be updated in runtime by calling SetWheel again, you can for example change the suspension high or disable a wheel totally by toggling affected_by_engine off or setting radius to 0.","parameters":[{"type":"integer","name":"index","description":"Index of the wheel (0-N). Set it in ASC order"},{"type":"string","name":"bone_name","description":"Name of the bone to attach this wheel to"},{"type":"integer","name":"radius","default":"32","description":"Radius of the wheel"},{"type":"integer","name":"width","default":"20","description":"Width of the wheel"},{"type":"integer","name":"max_steer_angle","default":"50","description":"Steer angle in degrees for this wheel"},{"type":"Vector","name":"offset","default":"Vector(0, 0, 0)","description":"If bone_name is specified, offset the wheel from the bone\'s location. Otherwise this offsets the wheel from the vehicle\'s origin"},{"type":"boolean","name":"is_affected_by_engine","default":"true","description":"Whether engine should power this wheel"},{"type":"boolean","name":"is_affected_by_brake","default":"true","description":"Whether brake should affect this wheel"},{"type":"boolean","name":"is_affected_by_handbrake","default":"true","description":"Whether handbrake should affect this wheel"},{"type":"boolean","name":"has_abs_enabled","default":"false","description":"Advanced Braking System Enabled"},{"type":"boolean","name":"has_traction_control_enabled","default":"false","description":"Straight Line Traction Control Enabled"},{"type":"integer","name":"max_brake_torque","default":"1500","description":"Max brake torque for this wheel (Nm)"},{"type":"integer","name":"max_handbrake_torque","default":"3000","description":"Max handbrake brake torque for this wheel (Nm). A handbrake should have a stronger brake torque than the brake"},{"type":"integer","name":"cornering_stiffness","default":"1000","description":"Tyre Cornering Ability"},{"type":"float","name":"side_slip_modifier","default":"1.0","description":"Wheel Lateral Skid Grip Loss, lower number less grip on skid"},{"type":"float","name":"friction_force_multiplier","default":"2.0","description":"Friction Force Multiplier"},{"type":"float","name":"slip_threshold","default":"20.0","description":"Wheel Longitudinal Slip Threshold"},{"type":"float","name":"skid_threshold","default":"20.0","description":"Wheel Lateral Skid Threshold"},{"type":"float","name":"suspension_spring_rate","default":"250.0","description":"Spring Force (N/m)"},{"type":"float","name":"suspension_spring_preload","default":"50.0","description":"Spring Preload (N/m)"},{"type":"float","name":"suspension_max_raise","default":"10.0","description":"How far the wheel can go above the resting position"},{"type":"float","name":"suspension_max_drop","default":"10.0","description":"How far the wheel can drop below the resting position"},{"type":"float","name":"suspension_smoothing","default":"0.0","description":"Smooth suspension [0-off, 10-max] - Warning might cause momentary visual inter-penetration of the wheel against objects/terrain"},{"type":"float","name":"suspension_damping_ratio","default":"0.5","description":"Suspension damping, larger value causes the suspension to come to rest faster [range 0 to 1]"},{"type":"float","name":"suspension_wheel_load_ratio","default":"0.5","description":"Amount wheel load effects wheel friction. <br/> - At 0 wheel friction is completely independent of the loading on the wheel (This is artificial as it always assumes even balance between all wheels) <br/> - At 1 wheel friction is based on the force pressing wheel into the ground. This is more realistic. <br/> - Lower value cures lift off over-steer, generally makes vehicle easier to handle under extreme motions."},{"type":"Vector","name":"suspension_axis","default":"Vector(0, 0, -1)","description":"Local body direction in which where suspension forces are applied (typically along -Z-axis)"},{"type":"Vector","name":"suspension_force_offset","default":"Vector(0, 0, 0)","description":"Vertical offset from where suspension forces are applied (along Z-axis)"}]},{"authority":"server","name":"SetDoor","description":"Adds a Door to the Vehicle","description_long":"Adds a Door at offset_location from root which will pose the Character at seat_location with seat_rotation rotation.","parameters":[{"type":"integer","name":"seat_index"},{"type":"Vector","name":"offset_location"},{"type":"Vector","name":"seat_location"},{"type":"Rotator","name":"seat_rotation"},{"type":"integer","name":"trigger_radius"},{"type":"integer","name":"leave_lateral_offset","description":"It\'s where the Character will be ejected when leaving it (e.g. -150 for left door or 150 for right door)"}]},{"authority":"server","name":"SetSteeringWheelSetup","description":"Configures where the Steering Wheel is located","description_long":"Configures where the Steering Wheel is located, so Characters can grab it procedurally properly","parameters":[{"type":"Vector","name":"location"},{"type":"integer","name":"radius"}]},{"authority":"server","name":"SetHeadlightsSetup","description":"Configures the Headlights Offset and Color.","parameters":[{"type":"Vector","name":"location"},{"type":"Color","name":"color","default":"Color(1, 0.86, 0.5)"}]},{"authority":"server","name":"SetTaillightsSetup","description":"Configures the Taillights Offset.","parameters":[{"type":"Vector","name":"location"}]},{"authority":"both","name":"PlayAnimation","description":"Plays an Animation on this Vehicle","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"string","name":"slot_name","default":"DefaultSlot"},{"type":"boolean","name":"loop_indefinitely","default":"false","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"blend_in_time","default":"0.25","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"blend_out_time","default":"0.25","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"float","name":"play_rate","default":"1.0","description":"This parameter is only used if the Vehicle has an Animation Blueprint"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group. This parameter is only used if the Vehicle has an Animation Blueprint"}]},{"authority":"both","name":"GetMesh","description":"Gets the Asset name","return":[{"type":"VehiclePath","description":"asset path"}]},{"authority":"client","name":"GetBoneTransform","description":"Gets a Bone Transform in world space given a bone name","return":[{"type":"table","table_properties":[{"name":"Location","type":"Vector"},{"name":"Rotation","type":"Rotator"}]}],"parameters":[{"name":"bone_name","type":"string"}]},{"authority":"both","name":"GetPassenger","description":"Gets a passenger from a seat","parameters":[{"type":"integer","name":"seat"}],"return":[{"type":"Character","description":"or nil if no passenger in seat"}]},{"authority":"both","name":"GetPassengers","description":"Gets all passengers","return":[{"type":"Character[]"}]},{"authority":"client","name":"GetRPM","description":"Gets the current RPM","return":[{"type":"integer"}]},{"authority":"client","name":"GetGear","description":"Gets the current Gear","return":[{"type":"integer"}]}],"events":[{"name":"Horn","description":"Triggered when Vehicle honks","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"boolean","name":"is_honking"}]},{"name":"Hit","description":"Triggered when Vehicle hits something","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"integer","name":"impact_force","description":"The intensity of the Hit normalized by the Vehicle\'s weight"},{"type":"Vector","name":"normal_impulse","description":"The impulse direction it hits"},{"type":"Vector","name":"impact_location","description":"The world 3D location of the impact"},{"type":"Vector","name":"velocity","description":"The Vehicle velocity at the moment it hits"}]},{"name":"CharacterEnter","description":"Triggered when a Character fully enters the Vehicle","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"},{"type":"integer","name":"seat","description":"The seat index"}]},{"name":"CharacterLeave","description":"Triggered when a Character fully leaves the Vehicle","authority":"both","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"}]},{"name":"CharacterAttemptEnter","description":"Triggered when a Character attempts to enter the Vehicle","authority":"server","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"},{"type":"integer","name":"seat","description":"The seat index"}],"return":[{"type":"boolean","description":"Return false to prevent it"}]},{"name":"CharacterAttemptLeave","description":"Triggered when a Character attempts to leave the Vehicle","authority":"server","arguments":[{"type":"Vehicle","name":"self"},{"type":"Character","name":"character"}],"return":[{"type":"boolean","description":"Return false to prevent it"}]},{"name":"TakeDamage","authority":"server","description":"Triggered when this Vehicle takes damage","arguments":[{"type":"Vehicle","name":"self"},{"type":"integer","name":"damage"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player","name":"instigator","description":"The player which caused the damage"},{"type":"any","name":"causer","description":"The object which caused the damage"}],"return":[{"type":"boolean","description":"Return <code>false</code> to cancel the damage (will still display animations, particles and apply impact forces)"}]}]}')},98763:e=>{e.exports=JSON.parse('{"name":"Weapon","description":"Weapons are entities with firing, reloading and aiming functionalities.<br/><br/>They are fully customizable, all pieces of the weapon can be changed with immense possibility of creation.","authority":"server","inheritance":["Entity","Actor","Paintable","Pickable"],"constructors":[{"description":"Default Constructor","parameters":[{"name":"location","type":"Vector"},{"name":"rotation","type":"Rotator"},{"name":"asset","type":"SkeletalMeshPath"},{"name":"collision_type","type":"CollisionType","default":"CollisionType.Normal"},{"name":"gravity_enabled","type":"boolean","default":"true"}]}],"functions":[{"authority":"server","name":"Reload","description":"Forces this Weapon to reload","description_long":"Forces this Weapon to reload (only if being handled by a Character)"},{"authority":"server","name":"SetAmmoBag","description":"Sets this Weapon\'s Ammo in the Bag","parameters":[{"name":"new_ammo","type":"integer"}]},{"authority":"server","name":"SetAmmoClip","description":"Sets this Weapon\'s Ammo in the Clip","parameters":[{"name":"new_ammo","type":"integer"}]},{"authority":"server","name":"SetAmmoSettings","description":"Aux for setting and configuring ammo","parameters":[{"name":"ammo_clip","type":"integer"},{"name":"ammo_bag","type":"integer"},{"name":"ammo_to_reload","type":"integer","default":"ammo_clip"},{"name":"clip_capacity","type":"integer","default":"ammo_clip"}]},{"authority":"server","name":"SetAnimationFire","description":"Animation played by the Weapon when Firing","parameters":[{"name":"animation_asset_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}]},{"authority":"server","name":"SetAnimationCharacterFire","description":"Animation played by the Character when Firing","parameters":[{"name":"animation_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}]},{"authority":"server","name":"SetAnimationReload","description":"Animation played by the Character when Reloading","parameters":[{"name":"animation_path","type":"AnimationPath"},{"name":"play_rate","type":"float","default":"1"}]},{"authority":"both","name":"GetAnimationReload","description":"Gets the reload animation","return":[{"type":"AnimationPath"}]},{"authority":"server","name":"SetAutoReload","description":"If the Character will reload automatically when ammo empties","description_long":"If the Character will reload automatically when ammo empties. Default is true","parameters":[{"name":"auto_reload","type":"boolean"}]},{"authority":"server","name":"SetBulletColor","description":"Set the Bullet Color","description_long":"Set the Bullet Color<br/><br/>Only has effect if using Bullet Trail particle P_Bullet_Trail or if you particle has the Color parameter","parameters":[{"name":"color","type":"Color"}]},{"authority":"server","name":"SetAutoReload","description":"Sets if the Weapon auto reloads when ammo empties","parameters":[{"name":"auto_reload","type":"boolean"}]},{"authority":"server","name":"SetBulletSettings","description":"Aux for setting and configuring the Bullet","parameters":[{"name":"bullet_count","type":"integer","description":"1 for common weapons<br/>> 1 for shotguns"},{"name":"bullet_max_distance","type":"integer"},{"name":"bullet_velocity","type":"integer","description":"Visuals only"},{"name":"bullet_color","type":"Color"}]},{"authority":"server","name":"SetCadence","description":"Speed of shots","parameters":[{"name":"cadence","type":"float","description":"1 shot at each <code>cadence</code> second"}]},{"authority":"server","name":"SetClipCapacity","description":"Capacity of the Weapon\'s clip","parameters":[{"name":"clip","type":"integer"}]},{"authority":"server","name":"SetDamage","description":"Set the Base Weapon\'s Damage","description_long":"Base Weapon\'s Damage<br/><br/>This will be multiplied by multiplier factors when hitting specific bones","parameters":[{"name":"damage","type":"integer"}]},{"authority":"server","name":"SetHandlingMode","description":"Sets how the Character grabs this Weapon","parameters":[{"name":"mode","type":"HandlingMode"}]},{"authority":"server","name":"SetLeftHandTransform","description":"Left Hand Offset","parameters":[{"name":"location","type":"Vector"},{"name":"rotation","type":"Rotator"}]},{"authority":"server","name":"SetMagazineMesh","description":"Set the mesh used when the Character reloads the weapon","description_long":"Set the mesh used when the Character reloads the weapon.<br/><br/>Will drop this Mesh as an animation effect.","parameters":[{"name":"static_mesh_asset_path","type":"StaticMeshPath"},{"name":"magazine_mesh_hide_bone","type":"string","default":"b_gun_mag","description":"Weapon bone to hide when reloading it"}]},{"authority":"both","name":"PlayAnimation","description":"Plays an Animation on this Weapon","parameters":[{"type":"AnimationPath","name":"animation_path"},{"type":"string","name":"slot_name","default":"DefaultSlot"},{"type":"boolean","name":"loop_indefinitely","default":"false","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"blend_in_time","default":"0.25","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"blend_out_time","default":"0.25","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"float","name":"play_rate","default":"1.0","description":"This parameter is only used if the Weapon has an Animation Blueprint"},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group. This parameter is only used if the Weapon has an Animation Blueprint"}]},{"authority":"server","name":"SetParticlesBulletTrail","description":"Particle of the Bullet flying","parameters":[{"name":"particle_asset_path","type":"ParticlePath"}]},{"authority":"server","name":"SetParticlesBarrel","description":"Particle of the Fire Blast in the muzzle","parameters":[{"name":"particle_asset_path","type":"ParticlePath"}]},{"authority":"server","name":"SetParticlesShells","description":"Particle of the empty bullet flying from the weapon when shooting","parameters":[{"name":"particle_asset_path","type":"ParticlePath"}]},{"authority":"server","name":"SetRightHandOffset","description":"Set the offset of Right Hand","description_long":"Set the Offset of Right Hand. To position relative to the camera.","parameters":[{"name":"offset","type":"Vector"}]},{"authority":"server","name":"SetSightFOVMultiplier","description":"The FOV multiplier when ADS","parameters":[{"name":"multiplier","type":"float"}]},{"authority":"server","name":"SetSightTransform","description":"Offset applied to align player\'s head to weapon\'s sight and rotation applied on the weapon when ADS","parameters":[{"name":"location","type":"Vector"},{"name":"rotation","type":"Rotator"}]},{"authority":"server","name":"SetSoundDry","description":"Sound when weapon has not bullet and try to shoot","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundLoad","description":"Sound when Loading a magazine","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundUnload","description":"Sound when Unloading a magazine","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundZooming","description":"Sound when Zooming","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundFire","description":"Sound when Shooting","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundAim","description":"Sound when Aiming","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"volume","type":"float","default":"1"},{"name":"pitch","type":"float","default":"1"}]},{"authority":"server","name":"SetSoundFireLastBullets","description":"Sound when firing with only having X remaining bullets in the magazine","description_long":"Sound when firing with only having X remaining bullets in the magazine, useful for last shot \'ping\' or sound when low on bullets","parameters":[{"name":"sound_asset_path","type":"SoundPath"},{"name":"remaining_bullets_count","type":"integer","default":"1","description":"The amount of remaining bullet to start playing this sound"}]},{"authority":"server","name":"SetSpread","description":"Base Weapon\'s Spread","parameters":[{"name":"spread","type":"float","description":"the higher the less precision - recommended value: 20"}]},{"authority":"server","name":"SetRecoil","description":"Base Weapon\'s Recoil","parameters":[{"name":"recoil","type":"float","description":"0 means no Recoil, default is 1"}]},{"authority":"server","name":"SetUsageSettings","description":"Sets if the Weapon can hold to keep firing and if it needs to release to fire","parameters":[{"name":"can_hold_use","type":"boolean"},{"name":"hold_release_use","type":"boolean"}]},{"authority":"server","name":"SetWallbangSettings","description":"Sets how the bullet will pass through walls","parameters":[{"name":"max_distance","type":"integer","description":"Max distance to pass through another wall"},{"name":"damage_multiplier","type":"float","description":"Damage given if wallbangged"}]},{"authority":"both","name":"GetAmmoBag","description":"Gets this Weapon\'s Ammo Bag","return":[{"type":"integer"}]},{"authority":"both","name":"GetAmmoClip","description":"Gets this Weapon\'s Ammo Clip","return":[{"type":"integer"}]},{"authority":"both","name":"GetAmmoToReload","return":[{"type":"integer"}]},{"authority":"both","name":"GetHandlingMode","return":[{"type":"HandlingMode"}]},{"authority":"both","name":"GetAnimationCharacterFire","return":[{"type":"AnimationPath"}]},{"authority":"both","name":"GetAnimationFire","return":[{"type":"AnimationPath"}]},{"authority":"both","name":"GetMagazineMesh","return":[{"type":"StaticMeshPath"}]},{"authority":"both","name":"GetParticlesBulletTrail","return":[{"type":"ParticlePath"}]},{"authority":"both","name":"GetParticlesShells","return":[{"type":"ParticlePath"}]},{"authority":"both","name":"GetSoundDry","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetSoundLoad","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetSoundUnload","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetSoundZooming","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetSoundAim","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetSoundFire","return":[{"type":"SoundPath"}]},{"authority":"both","name":"GetCanHoldUse","return":[{"type":"boolean"}]},{"authority":"both","name":"GetHoldReleaseUse","return":[{"type":"boolean"}]},{"authority":"client","name":"GetBoneTransform","description":"Gets a Bone Transform in world space given a bone name","return":[{"type":"table","table_properties":[{"name":"Location","type":"Vector"},{"name":"Rotation","type":"Rotator"}]}],"parameters":[{"name":"bone_name","type":"string"}]},{"authority":"both","name":"GetBulletCount","return":[{"type":"integer"}]},{"authority":"both","name":"GetBulletColor","return":[{"type":"Color"}]},{"authority":"both","name":"GetCadence","return":[{"type":"float"}]},{"authority":"both","name":"GetClipCapacity","return":[{"type":"integer"}]},{"authority":"both","name":"GetDamage","return":[{"type":"integer"}]},{"authority":"both","name":"GetRightHandOffset","return":[{"type":"Vector"}]},{"authority":"both","name":"GetLeftHandLocation","return":[{"type":"Vector"}]},{"authority":"both","name":"GetLeftHandRotation","return":[{"type":"Rotator"}]},{"authority":"both","name":"GetSightLocation","return":[{"type":"Vector"}]},{"authority":"both","name":"GetSightRotation","return":[{"type":"Rotator"}]},{"authority":"both","name":"GetSightFOVMultiplier","return":[{"type":"float"}]},{"authority":"both","name":"GetSpread","return":[{"type":"float"}]},{"authority":"both","name":"GetRecoil","return":[{"type":"float"}]}],"events":[{"authority":"both","name":"Fire","description":"Triggered when Weapon fires (this will be triggered for each shot)","arguments":[{"name":"self","type":"Weapon"},{"name":"shooter","type":"Character"}]},{"authority":"both","name":"Reload","description":"When a Weapon is reloaded, optionally by a Character","arguments":[{"name":"self","type":"Weapon"},{"name":"character","type":"Character"},{"name":"ammo_to_reload","type":"integer"}]},{"authority":"both","name":"AmmoClipChange","description":"When the Ammo Clip is changed, by reloading or manually setting through scripting","arguments":[{"name":"self","type":"Weapon"},{"name":"old_ammo_clip","type":"integer"},{"name":"new_ammo_clip","type":"integer"}]},{"authority":"both","name":"AmmoBagChange","description":"When the Ammo Bag is changed, by reloading or manually setting through scripting","arguments":[{"name":"self","type":"Weapon"},{"name":"old_ammo_clip","type":"integer"},{"name":"new_ammo_clip","type":"integer"}]}]}')},10747:e=>{e.exports=JSON.parse('{"name":"WebUI","description":"Class for spawning a dynamic Web Browser.","authority":"client","constructors":[{"description":"Default Constructor","parameters":[{"type":"string","name":"name","description":"Used for debugging logs"},{"type":"HTMLPath","name":"path","description":"Web URL or <a href=\'#html-path-searchers\'>HTML File Path</a> as <code>file://my_file.html</code>"},{"type":"WebUIVisibility","name":"visibility","default":"WebUIVisibility.Visible","description":"if WebUI is visible on screen"},{"type":"boolean","name":"is_transparent","default":"true","description":"if WebUI background is transparent"},{"type":"boolean","name":"auto_resize","default":"true","description":"if should auto resize when screen changes it\'s size (useful OFF when you are painting meshes with WebUI)"},{"type":"integer","name":"width","default":"0","description":"size of the WebUI width when you are not using auto_resize"},{"type":"integer","name":"height","default":"0","description":"size of the WebUI height when you are not using auto_resize"}]}],"functions":[{"name":"BringToFront","authority":"client","description":"Puts this WebUI in the front of all WebUIs"},{"name":"CallEvent","authority":"client","description":"Calls an Event on the Browser\'s JavaScript","parameters":[{"type":"string","name":"event_name","description":"The Event Name to trigger the event"},{"type":"any","name":"args...","description":"Arguments to pass to the event"}]},{"name":"Destroy","authority":"client","description":"Destroys this Browser"},{"name":"LoadURL","authority":"client","description":"Loads a new File/URL in this Browser","parameters":[{"type":"HTMLPath","name":"url"}]},{"name":"LoadHTML","authority":"client","description":"Loads a pure HTML in this Browser","parameters":[{"type":"string","name":"html"}]},{"name":"ExecuteJavaScript","authority":"client","description":"Executes a JavaScript code in the Browser","description_long":"Executes a JavaScript code in the Browser<br/>Note: This method is experimental and should be used cautiously. Events are still the preferred way of communicating between Packages and WebUI.","parameters":[{"type":"string","name":"javascript_code"}]},{"name":"SetFocus","authority":"client","description":"Enables the focus on this browser (i.e. can receive Keyboard input and will trigger input events)","description_long":"Enables the focus on this browser (i.e. can receive Keyboard input and will trigger input events<br/>Note: Only one browser can have focus per time."},{"name":"RemoveFocus","authority":"client","description":"Removes the focus from this WebUI (and sets it back to game viewport)","description_long":"Removes the focus from this WebUI (and sets it back to game viewport)<br/>You MUST call this after you don\'t need keyboard input anymore"},{"name":"SetLayout","authority":"client","description":"Sets the Layout as Canvas on Screen","description_long":"Sets the Layout as Canvas on Screen. <strong>Anchors</strong>:<br/><br/><img src=\'/img/docs/anchors.webp\' />","parameters":[{"type":"Vector2D","name":"screen_location/offset_left_top","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"size/offset_right_bottom","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_min","description":"","default":"Vector(0, 0)"},{"type":"Vector2D","name":"anchors_max","description":"","default":"Vector(1, 1)"},{"type":"Vector2D","name":"alignment","description":"","default":"Vector(0.5, 0.5)"}]},{"name":"SetFreeze","authority":"client","description":"Freezes the WebUI Rendering to the surface (it will still execute the JS under the hood)","parameters":[{"type":"boolean","name":"freeze"}]},{"name":"SetVisibility","authority":"client","description":"Sets the visibility in screen","parameters":[{"type":"WebUIVisibility","name":"visibility"}]},{"name":"SpawnSound","authority":"client","description":"Spawns a Sound entity to plays this WebUI sound","parameters":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"boolean","name":"is_2d","default":"true"},{"type":"float","name":"volume","default":"1.0"},{"type":"integer","name":"inner_radius","default":"400"},{"type":"integer","name":"falloff_distance","default":"3600"},{"type":"AttenuationFunction","name":"attenuation_function","default":"AttenuationFunction.Linear"}],"return":[{"type":"Sound"}]},{"name":"SendMouseWheelEvent","authority":"client","description":"Sends a Mouse Event into the WebUI programatically","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"float","name":"delta_x"},{"type":"float","name":"delta_y"}]},{"name":"SendKeyEvent","authority":"client","description":"Sends a Key Event into the WebUI programatically","parameters":[{"type":"WebUIKeyType","name":"key_type"},{"type":"integer","name":"key_code"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"}]},{"name":"SendMouseMoveEvent","authority":"client","description":"Sends a Mouse Move Event into the WebUI programatically","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"},{"type":"boolean","name":"mouse_leave","default":"false"}]},{"name":"SendMouseClickEvent","authority":"client","description":"Sends a Mouse Click into the WebUI programatically","description_long":"You must send both Down and Up to make it work properly","parameters":[{"type":"integer","name":"mouse_x","description":"Position X of the mouse"},{"type":"integer","name":"mouse_y","description":"Position Y of the mouse"},{"type":"WebUIMouseType","name":"mouse_type","description":"Which mouse button"},{"type":"boolean","name":"is_mouse_up","description":"Whether the event was up or down"},{"type":"WebUIModifier","name":"modifiers","default":"WebUIModifier.None","description":"Supports several modifiers separating by <code>|</code> (using bit-wise operations)"},{"type":"integer","name":"click_count","default":"1","description":"Use 2 for double click event"}]},{"name":"IsValid","authority":"client","description":"Gets if this entity is Valid","return":[{"type":"boolean"}]},{"name":"GetID","authority":"client","description":"Gets the network ID of this entity","return":[{"type":"integer"}]},{"name":"GetSize","authority":"client","description":"Gets the current size of this WebUI","return":[{"type":"Vector2D"}]},{"name":"GetClass","description":"Gets the class of this entity","authority":"both","return":[{"type":"table"}]},{"name":"GetVisibility","authority":"client","description":"Returns the current WebUI visibility","return":[{"type":"WebUIVisibility"}]},{"name":"IsFrozen","authority":"client","description":"Returns if this WebUI is currently frozen","return":[{"type":"boolean"}]},{"name":"Subscribe","authority":"client","description":"Subscribes for an Event","return":[{"type":"function","description":"the subscribed callback itself"}],"parameters":[{"type":"string","name":"event_name","description":"The Event Name to subscribe"},{"type":"function","name":"callback","description":"The callback function to execute"}]},{"name":"Unsubscribe","authority":"client","description":"Unsubscribes from all subscribed Events in this Entity and in this Package, optionally passing the function to unsubscribe only that callback","parameters":[{"type":"string","name":"event_name","description":"The Event Name to unsubscribe"},{"type":"function","name":"callback","default":"nil","description":"The callback function to unsubscribe"}]}],"events":[{"name":"Fail","authority":"client","description":"Triggered when this page fails to load","arguments":[{"type":"integer","name":"error_code"},{"type":"string","name":"message"}]},{"name":"Ready","authority":"client","description":"Triggered when this page is fully loaded"}]}')},72486:e=>{e.exports=JSON.parse('{"AimMode":[{"key":"None","value":"0"},{"key":"ADS","value":"1"},{"key":"ZoomedZoom","value":"2"},{"key":"Zoomed","value":"3"},{"key":"ZoomedFar","value":"4"}],"AnimationSlotType":[{"key":"FullBody","value":"0"},{"key":"UpperBody","value":"1"}],"AssetType":[{"key":"Map","value":2},{"key":"StaticMesh","value":4},{"key":"SkeletalMesh","value":8},{"key":"Sound","value":16},{"key":"Animation","value":32},{"key":"Particle","value":64},{"key":"Material","value":128},{"key":"Blueprint","value":256}],"AttachmentRule":[{"key":"KeepRelative","value":"0"},{"key":"KeepWorld","value":"1"},{"key":"SnapToTarget","value":"2"}],"AttenuationFunction":[{"key":"Linear","value":"0"},{"key":"Logarithmic","value":"1"},{"key":"Inverse","value":"2"},{"key":"LogReverse","value":"3"},{"key":"NaturalSound","value":"4"}],"BlendMode":[{"key":"Opaque","value":"0"},{"key":"Masked","value":"1"},{"key":"Translucent","value":"2"},{"key":"Additive","value":"3"},{"key":"Modulate","value":"4"},{"key":"MaskedDistanceField","value":"5"},{"key":"MaskedDistanceFieldShadowed","value":"6"},{"key":"TranslucentDistanceField","value":"7"},{"key":"TranslucentDistanceFieldShadowed","value":"8"},{"key":"AlphaComposite","value":"9"},{"key":"AlphaHoldout","value":"10"},{"key":"AlphaBlend","value":"11"},{"key":"TranslucentAlphaOnly","value":"12"},{"key":"TranslucentAlphaOnlyWriteAlpha","value":"13"}],"CameraMode":[{"key":"FPSTPS","value":"0"},{"key":"FPSOnly","value":"1"},{"key":"TPSOnly","value":"2"}],"CCDMode":[{"key":"Auto","value":"0","description":"Automatically enables/disables depending on the Object size"},{"key":"Disabled","value":"1","description":"Disables CCD"},{"key":"Enabled","value":"2","description":"Enables CCD"}],"CollisionChannel":[{"key":"WorldStatic","value":"1 << 0","description":"WorldStatic Object Types"},{"key":"WorldDynamic","value":"1 << 1","description":"WorldDynamic Object Types"},{"key":"Pawn","value":"1 << 2","description":"Capsules (usually from Characters)"},{"key":"PhysicsBody","value":"1 << 5","description":"Pickables and Props Meshes"},{"key":"Mesh","value":"1 << 17","description":"Character Mesh"},{"key":"Water","value":"1 << 19","description":"Water Body"},{"key":"Foliage","value":"1 << 20","description":"Foliage Meshes"},{"key":"Vehicle","value":"1 << 22","description":"Vehicles Meshes"}],"CollisionType":[{"key":"Normal","value":"0","description":"Blocks All"},{"key":"StaticOnly","value":"1","description":"Only Blocks Static objects"},{"key":"NoCollision","value":"2","description":"Doesn\'t Block anything"},{"key":"IgnoreOnlyPawn","value":"3","description":"Blocks everything but Pawns (Characters)"},{"key":"Auto","value":"4","description":"Automatically selects - usually will be Normal. On Props it will switch between <b>Normal</b> and <b>IgnoreOnlyPawn</b> depending on the Prop size"}],"CursorType":[{"key":"None","value":"0"},{"key":"Default","value":"1"},{"key":"TextEditBeam","value":"2"},{"key":"ResizeLeftRight","value":"3"},{"key":"ResizeUpDown","value":"4"},{"key":"ResizeSouthEast","value":"5"},{"key":"ResizeSouthWest","value":"6"},{"key":"CardinalCross","value":"7"},{"key":"Crosshairs","value":"8"},{"key":"Hand","value":"9"},{"key":"GrabHand","value":"10"},{"key":"GrabHandClosed","value":"11"},{"key":"SlashedCircle","value":"12"},{"key":"EyeDropper","value":"13"}],"ConstraintMotion":[{"key":"Free","value":"0"},{"key":"Limited","value":"1"},{"key":"Locked","value":"2"}],"DamageType":[{"key":"Shot","value":"0"},{"key":"Explosion","value":"1"},{"key":"Punch","value":"2"},{"key":"Fall","value":"3"},{"key":"RunOverProp","value":"4"},{"key":"RunOverVehicle","value":"5"},{"key":"Melee","value":"6"},{"key":"Unknown","value":"7"}],"DatabaseEngine":[{"key":"SQLite","value":"0"},{"key":"MySQL","value":"1"},{"key":"PostgreSQL","value":"2"}],"DifferentialType":[{"key":"LimitedSlip_4W","value":"0"},{"key":"LimitedSlip_FrontDrive","value":"1"},{"key":"LimitedSlip_RearDrive","value":"2"},{"key":"Open_4W","value":"3"},{"key":"Open_FrontDrive","value":"4"},{"key":"Open_RearDrive","value":"5"}],"FallingMode":[{"key":"None","value":"0"},{"key":"Jumping","value":"1"},{"key":"Climbing","value":"2"},{"key":"Vaulting","value":"3"},{"key":"Falling","value":"4"},{"key":"HighFalling","value":"5"},{"key":"Parachuting","value":"6"},{"key":"SkyDiving","value":"7"}],"FontType":[{"key":"Roboto","value":"0"},{"key":"GothicA1","value":"1"},{"key":"PoiretOne","value":"2"},{"key":"Oswald","value":"3"},{"key":"RobotoMono","value":"4"},{"key":"OpenSans","value":"5"}],"GaitMode":[{"key":"None","value":"0"},{"key":"Walking","value":"1"},{"key":"Sprinting","value":"2"}],"GrabMode":[{"key":"Disabled","value":"0","description":"Disables grabbing"},{"key":"Auto","value":"1","description":"Automatically enables/disables depending on the Prop size"},{"key":"Enabled","value":"2","description":"Enables grabbing"}],"HighlightMode":[{"key":"Always","value":"0"},{"key":"OnlyHidden","value":"1"},{"key":"OnlyVisible","value":"2"}],"HandlingMode":[{"key":"SingleHandedWeapon","value":"0"},{"key":"DoubleHandedWeapon","value":"1"},{"key":"SingleHandedMelee","value":"2"},{"key":"DoubleHandedMelee","value":"3"},{"key":"Throwable","value":"4"},{"key":"Torch","value":"5"},{"key":"Barrel","value":"6"},{"key":"Box","value":"7"}],"ImageFormat":[{"key":"JPEG","value":"0"},{"key":"PNG","value":"1"},{"key":"BMP","value":"2"}],"InputEvent":[{"key":"Pressed","value":"0"},{"key":"Released","value":"1"}],"KeyModifier":[{"key":"None","value":"0"},{"key":"LeftShiftDown","value":"1 << 0"},{"key":"RightShiftDown","value":"1 << 1"},{"key":"LeftControlDown","value":"1 << 2"},{"key":"RightControlDown","value":"1 << 3"},{"key":"LeftAltDown","value":"1 << 4"},{"key":"RightAltDown","value":"1 << 5"},{"key":"LeftCommandDown","value":"1 << 6"},{"key":"RightCommandDown","value":"1 << 7"},{"key":"CapsLocked","value":"1 << 8"}],"LightProfile":[{"key":"None","value":"0"},{"key":"Arrow_Star","value":"1"},{"key":"Arrow_Up","value":"2"},{"key":"Beam_01","value":"3"},{"key":"Beam_02","value":"4"},{"key":"Beam_03","value":"5"},{"key":"Beam_04","value":"6"},{"key":"Beam_05","value":"7"},{"key":"Beam_06","value":"8"},{"key":"Beam_07","value":"9"},{"key":"Beam_08","value":"10"},{"key":"Beam_LED_01","value":"11"},{"key":"Beam_LED_02","value":"12"},{"key":"Beam_LED_03","value":"13"},{"key":"Beam_LED_04","value":"14"},{"key":"Beam_LED_05","value":"15"},{"key":"Beam_LED_06","value":"16"},{"key":"Beam_LED_07","value":"17"},{"key":"Bow","value":"18"},{"key":"Capped_01","value":"19"},{"key":"Capped_02","value":"20"},{"key":"Shattered_01","value":"21"},{"key":"Shattered_02","value":"22"},{"key":"Shattered_03","value":"23"},{"key":"Shattered_04","value":"24"},{"key":"Shattered_05","value":"25"},{"key":"SpotLight_01","value":"26"},{"key":"SpotLight_02","value":"27"},{"key":"SpotLight_03","value":"28"},{"key":"SpotLight_04","value":"29"},{"key":"Spreadout_01","value":"30"},{"key":"Spreadout_02","value":"31"},{"key":"Spreadout_03","value":"32"},{"key":"Spreadout_04","value":"33"},{"key":"Star_Bow","value":"34"},{"key":"Star_Burst_01","value":"35"},{"key":"Star_Burst_02","value":"36"},{"key":"Star_Burst_03","value":"37"},{"key":"Star_Burst_04","value":"38"},{"key":"Star_Burst_05","value":"39"},{"key":"Star_Burst_06","value":"40"},{"key":"Star_Burst_07","value":"41"},{"key":"Star_Burst_08","value":"42"},{"key":"Star_X_01","value":"43"},{"key":"Star_X_02","value":"44"},{"key":"Wall_Boomerang","value":"45"},{"key":"Wall_Inverted_V","value":"46"},{"key":"Wall_Star_T","value":"47"},{"key":"Wing_6","value":"48"},{"key":"Wing_V_01","value":"49"},{"key":"Wing_V_02","value":"50"}],"LogType":[{"key":"Display","value":"0"},{"key":"Warning","value":"1"},{"key":"Error","value":"2"},{"key":"Debug","value":"3"},{"key":"Verbose","value":"4"},{"key":"Scripting","value":"5"},{"key":"ScriptingWarn","value":"6"},{"key":"ScriptingError","value":"7"},{"key":"Chat","value":"8"},{"key":"WebUI","value":"9"},{"key":"Success","value":"10"},{"key":"Fatal","value":"11"}],"LightType":[{"key":"Point","value":"0"},{"key":"Spot","value":"1"},{"key":"React","value":"2"}],"SoundType":[{"key":"SFX","value":"0"},{"key":"Music","value":"1"},{"key":"UI","value":"2"}],"SoundLoopMode":[{"key":"Default","value":"0","description":"Default value defined in the asset"},{"key":"Forever","value":"1","description":"Overrides it to make it loop forever"},{"key":"Never","value":"2","description":"Overrides it to make it play once"}],"StanceMode":[{"key":"None","value":"0"},{"key":"Standing","value":"1"},{"key":"Crouching","value":"2"},{"key":"Proning","value":"3"}],"SurfaceType":[{"key":"Default","value":"0"},{"key":"Carpet","value":"1"},{"key":"Concrete","value":"2"},{"key":"Grass","value":"3"},{"key":"Gravel","value":"4"},{"key":"Ground","value":"5"},{"key":"MetalLight","value":"6"},{"key":"Plastic","value":"7"},{"key":"Sand","value":"8"},{"key":"Snow","value":"9"},{"key":"Water","value":"10"},{"key":"WoodLight","value":"11"},{"key":"Flesh","value":"12"},{"key":"MetalHeavy","value":"13"},{"key":"WoodHeavy","value":"14"},{"key":"Ice","value":"15"},{"key":"Mud","value":"16"},{"key":"Rock","value":"17"},{"key":"Thump","value":"18"},{"key":"Glass","value":"19"},{"key":"Rubber","value":"20"},{"key":"Air","value":"21"}],"SwimmingMode":[{"key":"None","value":"0"},{"key":"Surface","value":"1"},{"key":"Underwater","value":"2"}],"TextRenderAlignCamera":[{"key":"Unaligned","value":"0"},{"key":"AlignCameraRotation","value":"1"},{"key":"FaceCamera","value":"2"}],"TextRenderBevelType":[{"key":"Linear","value":"0"},{"key":"HalfCircle","value":"1"},{"key":"Convex","value":"2"},{"key":"Concave","value":"3"},{"key":"OneStep","value":"4"},{"key":"TwoSteps","value":"5"},{"key":"Engraved","value":"6"}],"TextRenderHorizontalAlignment":[{"key":"Left","value":"0"},{"key":"Center","value":"1"},{"key":"Right","value":"2"}],"TextRenderVerticalAlignment":[{"key":"Top","value":"0"},{"key":"Center","value":"1"},{"key":"Bottom","value":"2"},{"key":"QuadTop","value":"3"}],"TriggerType":[{"key":"Sphere","value":"0"},{"key":"Box","value":"1"}],"TraceMode":[{"key":"DrawDebug","value":"1 << 0","description":"Whether to draw a 3D line representing the ray"},{"key":"TraceComplex","value":"1 << 1","description":"Whether should trace against complex collision"},{"key":"ReturnPhysicalMaterial","value":"1 << 2","description":"Whether want to include the physical material in the results (adds <code>SurfaceType</code> to result)"},{"key":"ReturnEntity","value":"1 << 3","description":"Whether want to return the Entity hit (adds <code>Entity</code> to result)"},{"key":"ReturnNames","value":"1 << 4","description":"Whether should return names (adds <code>ActorName</code>, <code>ComponentName</code> and <code>BoneName</code> to result)"},{"key":"ReturnUV","value":"1 << 5","description":"Whether want to trace and return UV information (adds <code>UV</code> to result)"}],"ViewMode":[{"key":"FPS","value":"0"},{"key":"TPS1","value":"1"},{"key":"TPS2","value":"2"},{"key":"TPS3","value":"3"},{"key":"TopDown","value":"4"}],"VOIPSetting":[{"key":"Local","value":"0","description":"3D Sound"},{"key":"Global","value":"1","description":"2D Sound"},{"key":"Muted","value":"2"}],"WeatherType":[{"key":"ClearSkies","value":"1"},{"key":"Cloudy","value":"2"},{"key":"Foggy","value":"3"},{"key":"Overcast","value":"4"},{"key":"PartlyCloudy","value":"5"},{"key":"Rain","value":"6"},{"key":"RainLight","value":"7"},{"key":"RainThunderstorm","value":"8"},{"key":"SandDustCalm","value":"9"},{"key":"SandDustStorm","value":"10"},{"key":"Snow","value":"11"},{"key":"SnowBlizzard","value":"12"},{"key":"SnowLight","value":"13"}],"WebUIModifier":[{"key":"None","value":"0"},{"key":"CapsLockOn","value":"1 << 0"},{"key":"ShiftDown","value":"1 << 1"},{"key":"ControlDown","value":"1 << 2"},{"key":"AltDown","value":"1 << 3"},{"key":"LeftMouseButton","value":"1 << 4"},{"key":"MiddleMouseButton","value":"1 << 5"},{"key":"RightMouseButton","value":"1 << 6"},{"key":"CommandDown","value":"1 << 7"},{"key":"NumLockOn","value":"1 << 8"},{"key":"IsKeyPad","value":"1 << 9"},{"key":"IsLeft","value":"1 << 10"},{"key":"IsRight","value":"1 << 11"},{"key":"AltgrDown","value":"1 << 12"},{"key":"IsRepeat","value":"1 << 13"}],"WebUIKeyType":[{"key":"Down","value":"0"},{"key":"Up","value":"1"},{"key":"Char","value":"2"}],"WebUIMouseType":[{"key":"Left","value":"0"},{"key":"Right","value":"1"},{"key":"Middle","value":"2"}],"WebUIVisibility":[{"key":"Hidden","value":"0"},{"key":"Visible","value":"1"},{"key":"VisibleNotHitTestable","value":"2"}]}')},8718:e=>{e.exports=JSON.parse('{"name":"Color","description":"A color composed of components (R, G, B, A) with floating point precision.","constructors":[{"description":"Default Constructor","parameters":[{"name":"R","type":"number","default":"0","description":"Red color percentage (0-1)"},{"name":"G","type":"number","default":"0","description":"Green color percentage (0-1)"},{"name":"B","type":"number","default":"0","description":"Blue color percentage (0-1)"},{"name":"A","type":"number","default":"0","description":"Alpha transparency percentage (0-1)"}]}],"operators":[{"name":"+","operator":"__add","lhs":"Color|number","rhs":"Color|number","return":"Color","description":"Adds two Colors or a number into each component"},{"name":"-","operator":"__sub","lhs":"Color","rhs":"Color|number","return":"Color","description":"Subtracts two Colors or a number from each component"},{"name":"*","operator":"__mul","lhs":"Color|number","rhs":"Color|number","return":"Color","description":"Multiplies two Colors or a number into each component"},{"name":"/","operator":"__div","lhs":"Color","rhs":"Color|number","return":"Color","description":"Divides two Colors or a number from each component"},{"name":"==","operator":"__eq","lhs":"Color","rhs":"Color","return":"boolean","description":"Checks if two Colors have the same values"},{"name":"tostring","operator":"tostring","lhs":"Color","return":"string","description":"Gets a string representation of this struct"}],"properties":[{"name":"R","type":"number","description":"Red color percentage (0-1)"},{"name":"G","type":"number","description":"Green color percentage (0-1)"},{"name":"B","type":"number","description":"Blue color percentage (0-1)"},{"name":"A","type":"number","description":"Alpha transparency percentage (0-1)"}],"functions":[{"name":"ToHex","description":"Gets the Hexadecimal representation of this Color","parameters":[{"name":"appends_transparency","type":"boolean","default":"true","description":"Appends transparency part"}],"return":[{"type":"string","description":"Hexadecimal representation of this Color"}]}],"static_functions":[{"name":"RandomPalette","description":"Returns a random color from Color Palette","parameters":[{"name":"includes_black","type":"boolean","default":"true","description":"Includes blacks in the scope"}],"return":[{"type":"Color","description":"Random color from Color Palette"}]},{"name":"Random","description":"Returns a random color from all color scope","return":[{"type":"Color","description":"Random color from all color scope"}]},{"name":"FromRGBA","description":"Returns the color from 0-255 range values","parameters":[{"name":"r","type":"number","default":"0","description":"Red"},{"name":"g","type":"number","default":"0","description":"Green"},{"name":"b","type":"number","default":"0","description":"Blue"},{"name":"a","type":"number","default":"0","description":"Alpha"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromCYMK","description":"Returns a color from the CYMK format","parameters":[{"name":"c","type":"number","default":"0","description":"Cyan"},{"name":"y","type":"number","default":"0","description":"Yellow"},{"name":"m","type":"number","default":"0","description":"Magenta"},{"name":"k","type":"number","default":"0","description":"Black"},{"name":"a","type":"number","default":"0","description":"Alpha"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHSL","description":"Returns a color from the HSL format","parameters":[{"name":"h","type":"number","default":"0","description":"Hue"},{"name":"s","type":"number","default":"0","description":"Saturation"},{"name":"l","type":"number","default":"0","description":"Lightness"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHSV","description":"Returns a color from the HSV format","parameters":[{"name":"h","type":"number","default":"0","description":"Hue"},{"name":"s","type":"number","default":"0","description":"Saturation"},{"name":"v","type":"number","default":"0","description":"Value"}],"return":[{"type":"Color","description":"Final Color"}]},{"name":"FromHEX","description":"Returns a color from the Hexadecimal format","parameters":[{"name":"hex","type":"string","description":"Hexadecimal"}],"return":[{"type":"Color","description":"Final Color"}]}]}')},65930:e=>{e.exports=JSON.parse('{"name":"Matrix","description":"A Matrix is an array of numbers this can be used for geometric and positional calculations. This is mainly used internally.","constructors":[{"description":"Default Constructor","parameters":[{"name":"rotation","type":"Rotator","description":"The rotation of the matrix"},{"name":"origin","type":"Vector","description":"The origin of the matrix"}]}],"functions":[{"name":"TransformVector","description":"Transform the vector with the matrix","return":[{"type":"Vector","description":"The new vector"}],"parameters":[{"type":"Vector","name":"vector","description":"The vector who will be transformed"}]},{"name":"GetTransposed","description":"Returns a new matrix transposed (<a href=\\"https://en.wikipedia.org/wiki/Transpose\\">Wikipedia</a>)","return":[{"type":"Matrix","description":"The matrix transpoosed"}]}]}')},8461:e=>{e.exports=JSON.parse('{"name":"Quat","description":"Floating point Quaternion that can represent a rotation about an axis in 3-D space","operators":[{"name":"+","operator":"__add","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"},{"name":"-","operator":"__sub","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"},{"name":"*","operator":"__mul","lhs":"Quat|number","rhs":"Quat|number","return":"Quat"}],"constructors":[{"description":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"The quaternion\'s X-component"},{"name":"Y","type":"number","default":"0","description":"The quaternion\'s Y-component"},{"name":"Z","type":"number","default":"0","description":"The quaternion\'s Z-component"},{"name":"W","type":"number","default":"0","description":"The quaternion\'s W-component"}]}],"properties":[{"name":"X","type":"number","description":"The quaternion\'s X-component"},{"name":"Y","type":"number","description":"The quaternion\'s Y-component"},{"name":"Z","type":"number","description":"The quaternion\'s Z-component"},{"name":"W","type":"number","description":"The quaternion\'s W-component"}],"functions":[{"name":"Normalize","description":"In place normalize this Quaternion"},{"name":"Rotator","description":"Get the Rotator representation of this Quaternion","return":[{"type":"Rotator","description":"Rotator representation of this Quaternion"}]},{"name":"Inverse","description":"Returns the inverse of this Quaternion","return":[{"type":"Quat","description":"Inverse of this Quaternion"}]}]}')},9685:e=>{e.exports=JSON.parse('{"name":"Rotator","description":"A container for rotation information (Pitch, Yaw, Ro). All rotation values are stored in degrees.","operators":[{"name":"+","operator":"__add","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"},{"name":"-","operator":"__sub","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"},{"name":"*","operator":"__mul","lhs":"Rotator|number","rhs":"Rotator|number","return":"Rotator"}],"constructors":[{"description":"Default Constructor","parameters":[{"name":"Pitch","type":"number","default":"0","description":"Pitch"},{"name":"Yaw","type":"number","default":"0","description":"Yaw"},{"name":"Roll","type":"number","default":"0","description":"Roll"}]}],"properties":[{"name":"Pitch","type":"number","description":"Rotation around the right axis (around Y axis), Looking up and down (0=Straight Ahead, +Up, -Down)"},{"name":"Yaw","type":"number","description":"Rotation around the up axis (around Z axis), Running in circles 0=East, +North, -South."},{"name":"Roll","type":"number","description":"Rotation around the forward axis (around X axis), Tilting your head, 0=Straight, +Clockwise, -CCW."}],"functions":[{"name":"GetForwardVector","description":"Get the forward (X) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the forward direction"}]},{"name":"GetRightVector","description":"Get the right (Y) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the right direction"}]},{"name":"GetUpVector","description":"Get the up (Z) unit direction vector from this component, in world space.","return":[{"type":"Vector","description":"the up direction"}]},{"name":"RotateVector","description":"Rotate a vector rotated by this rotator.","parameters":[{"type":"Vector","name":"vector","description":"the vector to rotate by the Rotator"}],"return":[{"type":"Vector","description":"the rotated vector"}]},{"name":"Normalize","description":"In-place normalize, removes all winding and creates the \u201cshortest route\u201d rotation."},{"name":"UnrotateVector","description":"Returns the vector rotated by the inverse of this rotator.","parameters":[{"type":"Vector","name":"vector","description":"The vector to rotate by the inverse of the Rotator"}],"return":[{"type":"Vector","description":"the unrotated vector"}]},{"name":"Quaternion","description":"Get Rotation as a quaternion.","return":[{"type":"Quat","description":"the rotation as a quaternion"}]},{"name":"GetNormalized","description":"Returns a new Rotator normalized.","return":[{"type":"Rotator","description":"the normalized Rotator"}]},{"name":"IsNearlyZero","description":"Checks whether rotator is near to zero within a specified tolerance","parameters":[{"type":"number","name":"tolerance","description":"Tolerance to check","default":"0.000001"}],"return":[{"type":"boolean","description":"whether the rotator is nearly zero"}]},{"name":"IsZero","description":"Checks whether all components of the rotator are exactly zero","return":[{"type":"boolean","description":"whether the rotator is exactly zero"}]}],"static_functions":[{"name":"Random","description":"Generates a random rotation, with optional random roll","parameters":[{"type":"boolean","name":"roll","description":"Whether to use a random roll in the rotator, otherwise uses 0 for roll","default":"false"}],"return":[{"type":"Rotator","description":"the random rotation"}]}]}')},45001:e=>{e.exports=JSON.parse('{"name":"Vector","description":"A Vector composed of components (X, Y, Z) with floating point precision. Used mainly for entity position.","operators":[{"name":"+","operator":"__add","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"-","operator":"__sub","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"*","operator":"__mul","lhs":"Vector|number","rhs":"Vector|number","return":"Vector"},{"name":"/","operator":"__div","lhs":"Vector","rhs":"Vector|number","return":"Vector"},{"name":"^","operator":"__pow","lhs":"Vector","rhs":"Vector|number","return":"Vector"}],"constructors":[{"description":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"X Coordinate"},{"name":"Y","type":"number","default":"0","description":"Y Coordinate"},{"name":"Z","type":"number","default":"0","description":"Z Coordinate"}]}],"properties":[{"name":"X","type":"number","description":"X Coordinate"},{"name":"Y","type":"number","description":"Y Coordinate"},{"name":"Z","type":"number","description":"Z Coordinate"}],"functions":[{"name":"Equals","description":"Check against another vector for equality, within specified error limits","description_long":"Check if the vector is equal to another vector, within specified error limits","return":[{"type":"boolean","description":"Are the vectors equal or not"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to compare to"},{"type":"number","name":"tolerance","default":"0.000001","description":"The error limits"}]},{"name":"Distance","description":"Distance between two points","description_long":"Returns the distance of 2 vectors","return":[{"type":"number","description":"The distance betweem the vectors"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to get the distance to"}]},{"name":"DistanceSquared","description":"Squared distance between two points","description_long":"Return the squared distance of 2 vectors","return":[{"type":"number","description":"The squared distance betweem the vectors"}],"parameters":[{"type":"Vector","name":"other","description":"The vector to get the squared distance to"}]},{"name":"GetUnsafeNormal","description":"Calculates normalized version of vector without checking for zero length","description_long":"Returns the normalized version of vector without checking for zero length","return":[{"type":"Vector","description":"The unsafe normal"}],"parameters":[]},{"name":"GetSafeNormal","description":"Gets a normalized copy of the vector, checking it is safe to do so based on the length","description_long":"Returns a normalized copy of the vector, checking it is safe to do so based on the length","return":[{"type":"Vector","description":"The safe normal"}],"parameters":[]},{"name":"IsNearlyZero","description":"Checks whether vector is near to zero within a specified tolerance","return":[{"type":"boolean","description":"If the bool is near to zero"}],"parameters":[{"type":"number","name":"tolerance","default":"0.000001","description":"The error limits"}]},{"name":"IsZero","description":"Checks whether all components of the vector are exactly zero","return":[{"type":"boolean","description":"If all components of the vector are exactly zero"}]},{"name":"Normalize","description":"Normalize this vector in-place if it is larger than a given tolerance. Leaves it unchanged if not","return":[{"type":"boolean","description":"If the vector has been modified"}]},{"name":"Size","description":"Get the length (magnitude) of this vector","return":[{"type":"number","description":"The lenght of the vector"}]},{"name":"SizeSquared","description":"Get the squared length of this vector","return":[{"type":"number","description":"The squared length of the vector"}]},{"name":"Rotation","description":"Returns the orientation corresponding to the direction in which the vector points","return":[{"type":"Rotator","description":"The orientation of the vector"}]}]}')},58752:e=>{e.exports=JSON.parse('{"name":"Vector2D","description":"A Vector2D composed of components (X, Y) with floating point precision. Used mainly for HUD and Drawing on screen.","operators":[{"name":"+","operator":"__add","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"-","operator":"__sub","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"*","operator":"__mul","lhs":"Vector2D|number","rhs":"Vector2D|number","return":"Vector2D"},{"name":"/","operator":"__div","lhs":"Vector2D","rhs":"Vector2D|number","return":"Vector2D"}],"constructors":[{"description":"Default Constructor","parameters":[{"name":"X","type":"number","default":"0","description":"X Coordinate"},{"name":"Y","type":"number","default":"0","description":"Y Coordinate"}]}],"properties":[{"name":"X","type":"number","description":"X Coordinate"},{"name":"Y","type":"number","description":"Y Coordinate"}]}')}}]);