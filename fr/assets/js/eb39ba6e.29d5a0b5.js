"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[8784],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return d}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=l(r),d=i,f=p["".concat(c,".").concat(d)]||p[d]||u[d]||a;return r?n.createElement(f,o(o({ref:t},m),{},{components:r})):n.createElement(f,o({ref:t},m))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},74208:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return v},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return p}});var n=r(83117),i=r(80102),a=(r(67294),r(3905)),o=r(78688),s=["components"],c={title:"\u23f1\ufe0f Timer",description:"Execute of code at specified time intervals.",tags:["static-class"]},l=void 0,m={unversionedId:"scripting-reference/static-classes/timer",id:"version-latest/scripting-reference/static-classes/timer",title:"\u23f1\ufe0f Timer",description:"Execute of code at specified time intervals.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-latest/scripting-reference/static-classes/timer.mdx",sourceDirName:"scripting-reference/static-classes",slug:"/scripting-reference/static-classes/timer",permalink:"/fr/docs/scripting-reference/static-classes/timer",draft:!1,editUrl:"https://github.com/nanos-world/docs/edit/master/versioned_docs/version-latest/scripting-reference/static-classes/timer.mdx",tags:[{label:"static-class",permalink:"/fr/docs/tags/static-class"}],version:"latest",frontMatter:{title:"\u23f1\ufe0f Timer",description:"Execute of code at specified time intervals.",tags:["static-class"]},sidebar:"version-latest/main",previous:{title:"\ud83d\udcbb Server",permalink:"/fr/docs/scripting-reference/static-classes/server"},next:{title:"\ud83c\udf0d World",permalink:"/fr/docs/scripting-reference/static-classes/world"}},u={},p=[{value:"\ud83c\udf92 Examples",id:"-examples",level:2},{value:"\ud83d\uddff Static Functions",id:"-static-functions",level:2},{value:"\ud83d\ude80 Events",id:"-events",level:2}],d=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)}},f=d("HeaderDeclaration"),h=d("StaticFunctionsDeclaration"),y=d("EventsDeclaration"),b={toc:p};function v(e){var t=e.components,r=(0,i.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(f,{class_data:o,is_static:!0,image:"/img/docs/stopwatch.webp",mdxType:"HeaderDeclaration"}),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The shortest interval possible is equal to the local Tick Rate - usually at 33ms. On the Server this can vary depending on the Config.toml setting.")),(0,a.kt)("h2",{id:"-examples"},"\ud83c\udf92 Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'-- creates a Interval to call a function at every 2 seconds\nlocal my_interval = Timer.SetInterval(function(param1, param2)\n    Package.Log("Triggered each 2 seconds! Param1: " .. param1 .. ". Param2: " .. param2)\nend, 2000, "awesome param 1", 456)\n\n-- cancels the Interval\nTimer.ClearInterval(my_interval)\n\n-- creates a Timeout to call my_function in 5 seconds, once - passing a parameter\nTimer.SetTimeout(function(my_param)\n    Package.Log("nanos " .. my_param)\nend, 5000, "world")\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local character = Character(...)\n\nlocal my_timer = Timer.SetTimeout(function(_character)\n    -- Do something with _character\n    -- Ex: Destroy the character after 10 seconds\n    _character:Destroy()\nend, 10000, character)\n\n-- Binds the Timer to the Character\n-- This will ensure it will never trigger if the character is destroyed before it\n-- With this you don't need to validate if the '_character' parameter is valid\nTimer.Bind(my_timer, character)\n")),(0,a.kt)("h2",{id:"-static-functions"},"\ud83d\uddff Static Functions"),(0,a.kt)(h,{class_data:o,mdxType:"StaticFunctionsDeclaration"}),(0,a.kt)("h2",{id:"-events"},"\ud83d\ude80 Events"),(0,a.kt)(y,{class_data:o,mdxType:"EventsDeclaration"}))}v.isMDXComponent=!0},78688:function(e){e.exports=JSON.parse('{"name":"Timer","description":"Execute code at specified time intervals.","authority":"both","static_functions":[{"name":"SetTimeout","authority":"both","description":"Executes a function, after waiting a specified number of milliseconds","parameters":[{"type":"function","name":"callback","description":"The callback that will be executed"},{"type":"number","name":"milliseconds","default":"0","description":"The time in milliseconds to wait before executing the function"},{"type":"any","name":"parameters...","default":"nil","description":"Additional parameters to pass to the function"}],"return":[{"type":"number","description":"the timeout_id"}]},{"name":"SetInterval","authority":"both","description":"Same as SetTimeout(), but repeats the execution of the function continuously","parameters":[{"type":"function","name":"callback","description":"The callback that will be executed.<br/>Return false to stop it from being called."},{"type":"number","name":"milliseconds","default":"0","description":"The time in milliseconds the timer should delay in between executions of the specified function"},{"type":"any","name":"parameters...","default":"nil","description":"Additional parameters to pass to the function"}],"return":[{"type":"number","description":"the interval_id"}]},{"name":"ClearTimeout","authority":"both","description":"Stops the execution of the function specified in SetTimeout()","parameters":[{"type":"number","name":"timeout_id","description":"The ID value returned by SetTimeout() is used as the parameter for this method"}]},{"name":"ClearInterval","authority":"both","description":"Stops the execution of the function specified in SetInterval()","parameters":[{"type":"number","name":"interval_id","description":"The ID value returned by SetInterval() is used as the parameter for this method"}]},{"name":"Bind","authority":"both","description":"Binds a Timer to any Actor. The timer will be automatically cleared when the Actor is destroyed","parameters":[{"type":"number","name":"timer_id","description":"The Timer ID"},{"type":"Actor","name":"actor","description":"Actor to be bound"}]},{"name":"IsValid","authority":"both","description":"Checks if a Timer is currently active or waiting to be triggered","parameters":[{"type":"number","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"boolean","name":"is_valid"}]},{"name":"GetElapsedTime","authority":"both","description":"Returns the time elapsed since the last tick","parameters":[{"type":"number","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"number","name":"elapsed_time"}]},{"name":"GetRemainingTime","authority":"both","description":"Returns the time remaining to the next tick","parameters":[{"type":"number","name":"timer_id","description":"The Timer ID"}],"return":[{"type":"number","name":"remaining_time"}]},{"name":"Pause","authority":"both","description":"Pauses the Timer","parameters":[{"type":"number","name":"timer_id","description":"The Timer ID"}]},{"name":"Resume","authority":"both","description":"Resumes the Timer","parameters":[{"type":"number","name":"timer_id","description":"The Timer ID"}]}]}')}}]);