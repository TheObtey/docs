"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[1184],{95170:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=s(85893),t=s(11151);const i={title:"Loading Screen",description:"Custom Loading Screen for your servers",sidebar_position:1,tags:["scripting","ui","webui","packages"],keywords:["loading","screen","package","html","webui"]},o=void 0,l={id:"core-concepts/packages/loading-screen",title:"Loading Screen",description:"Custom Loading Screen for your servers",source:"@site/versioned_docs/version-latest/core-concepts/packages/loading-screen.md",sourceDirName:"core-concepts/packages",slug:"/core-concepts/packages/loading-screen",permalink:"/fr/docs/core-concepts/packages/loading-screen",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/nanos-world-docs/fr",tags:[{label:"scripting",permalink:"/fr/docs/tags/scripting"},{label:"ui",permalink:"/fr/docs/tags/ui"},{label:"webui",permalink:"/fr/docs/tags/webui"},{label:"packages",permalink:"/fr/docs/tags/packages"}],version:"latest",lastUpdatedBy:"Gabriel T. Nardy",lastUpdatedAt:1700127464,formattedLastUpdatedAt:"16 nov. 2023",sidebarPosition:1,frontMatter:{title:"Loading Screen",description:"Custom Loading Screen for your servers",sidebar_position:1,tags:["scripting","ui","webui","packages"],keywords:["loading","screen","package","html","webui"]},sidebar:"main",previous:{title:"Packages Guide",permalink:"/fr/docs/core-concepts/packages/packages-guide"},next:{title:"Compatibility Versions",permalink:"/fr/docs/core-concepts/packages/compatibility-versions"}},a={},c=[{value:"Creating a Loading Screen",id:"creating-a-loading-screen",level:2},{value:"Getting Load/Download Progress",id:"getting-loaddownload-progress",level:3},{value:"Event <code>UpdateScreen</code>",id:"event-updatescreen",level:4},{value:"Player Information",id:"player-information",level:3},{value:"Stop Menu Music",id:"stop-menu-music",level:3},{value:"Configuring your server to use the Loading Screen",id:"configuring-your-server-to-use-the-loading-screen",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["In nanos world it is possible to add a customized and dynamic Loading Screen to your Server using ",(0,r.jsx)(n.a,{href:"/fr/docs/scripting-reference/classes/webui",children:"WebUI"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:s(64489).Z+"",width:"1919",height:"1079"})}),"\n",(0,r.jsx)(n.h2,{id:"creating-a-loading-screen",children:"Creating a Loading Screen"}),"\n",(0,r.jsxs)(n.p,{children:["For that, you will need to create a new Package of type ",(0,r.jsx)(n.a,{href:"#package-types",children:"loading-screen"}),", and add your HTML/CSS/JS files into the Package's root folder. Your primary HTML file should be called ",(0,r.jsx)(n.code,{children:"index.html"}),". It will look like that:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-folder-structure",children:"Packages/\n\u2514\u2500\u2500 my-loading-screen/\n    \u251c\u2500\u2500 Package.toml\n    \u251c\u2500\u2500 index.html\n    \u251c\u2500\u2500 style.css\n    \u2514\u2500\u2500 ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"getting-loaddownload-progress",children:"Getting Load/Download Progress"}),"\n",(0,r.jsxs)(n.p,{children:["To be able to display dynamic information in the screen, you can listen to the Event ",(0,r.jsx)(n.code,{children:"UpdateScreen"})," (which will trigger every few ms):"]}),"\n",(0,r.jsxs)(n.h4,{id:"event-updatescreen",children:["Event ",(0,r.jsx)(n.code,{children:"UpdateScreen"})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Parameter"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"message"})})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Display the current state (loading, validating, downloading...)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"message_secondary"})})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Display the current asset/file being loaded or downloaded"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"progress_small"})})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Current small progress"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"progress_small_total"})})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Max small progress"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"progress"})})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Current progress"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"progress_total"})})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"Max progress value"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"current_stage"})})}),(0,r.jsxs)(n.td,{style:{textAlign:"left"},children:["The current stage of the load (",(0,r.jsx)(n.code,{children:"loading"}),", ",(0,r.jsx)(n.code,{children:"downloading"}),")"]})]})]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="Packages/my-loading-screen/index.js"',children:'Events.Subscribe("UpdateScreen", function(message, message_secondary, progress_small, progress_small_total, progress, progress_total, current_stage) {\n    // Update your HTML here\n});\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["You can use ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"progress"})})," and ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"progress_total"})})," for filling up the main loading bar, and ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"progress_small"})})," for a small/sub loading bar."]})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Always use ",(0,r.jsx)(n.code,{children:"progress / progress_total"})," for getting the current ",(0,r.jsx)(n.code,{children:"%"})," percentage, as progress_total can represent the total amount of files being downloaded for example."]})}),"\n",(0,r.jsx)(n.h3,{id:"player-information",children:"Player Information"}),"\n",(0,r.jsx)(n.p,{children:"Also, it is possible to fetch Player\u2019s information by accessing a global variable called LoadingScreen:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"var LoadingScreen = {\n  server_ip,\n  server_name,\n  server_description,\n  server_port,\n  player_nanos_id,\n  player_nanos_username\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"stop-menu-music",children:"Stop Menu Music"}),"\n",(0,r.jsx)(n.p,{children:"It is possible to turn off the built-in menu music by calling an event from Loading Screen JS:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="Packages/my-loading-screen/index.js"',children:'Events.Call("StopMenuMusic")\n'})}),"\n",(0,r.jsx)(n.h2,{id:"configuring-your-server-to-use-the-loading-screen",children:"Configuring your server to use the Loading Screen"}),"\n",(0,r.jsxs)(n.p,{children:["After creating your loading-screen package, you will need to configure your server to load it in your ",(0,r.jsx)(n.a,{href:"/fr/docs/core-concepts/server-manual/server-configuration#server-configuration-file",children:"Config.toml"}),". Just set the setting ",(0,r.jsx)(n.code,{children:"loading_screen"})," to your Package's folder name."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'title="Server/Config.toml"',children:'# loading-screen package to load (the loading screen will be displayed when players join your server)\nloading_screen = "my-loading-screen"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Or start it with ",(0,r.jsx)(n.code,{children:'--loading_screen "my-loading-screen"'}),"."]})]})}function g(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},64489:(e,n,s)=>{s.d(n,{Z:()=>r});const r=s.p+"assets/images/loading-screen-cb28559615ffd1f2db10366c83d588a8.webp"},11151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>o});var r=s(67294);const t={},i=r.createContext(t);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);