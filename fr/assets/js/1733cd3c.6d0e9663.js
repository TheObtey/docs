"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[6129],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=l(r),m=o,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},11056:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return p}});var n=r(83117),o=r(80102),a=(r(67294),r(3905)),i=["components"],u={title:"Portes",description:"Comment cr\xe9er une porte automatique basique qui s'ouvre lorsqu'un Character s'approche",tags:["tutorial-example","scripting"]},s=void 0,l={unversionedId:"getting-started/tutorials-and-examples/doors",id:"getting-started/tutorials-and-examples/doors",title:"Portes",description:"Comment cr\xe9er une porte automatique basique qui s'ouvre lorsqu'un Character s'approche",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/getting-started/tutorials-and-examples/doors.md",sourceDirName:"getting-started/tutorials-and-examples",slug:"/getting-started/tutorials-and-examples/doors",permalink:"/fr/docs/next/getting-started/tutorials-and-examples/doors",draft:!1,editUrl:"https://github.com/nanos-world/docs/edit/master/docs/getting-started/tutorials-and-examples/doors.md",tags:[{label:"tutorial-example",permalink:"/fr/docs/next/tags/tutorial-example"},{label:"scripting",permalink:"/fr/docs/next/tags/scripting"}],version:"current",frontMatter:{title:"Portes",description:"Comment cr\xe9er une porte automatique basique qui s'ouvre lorsqu'un Character s'approche",tags:["tutorial-example","scripting"]},sidebar:"main",previous:{title:"Couleur de tchat",permalink:"/fr/docs/next/getting-started/tutorials-and-examples/chat-colors"},next:{title:"Feux d'artifice",permalink:"/fr/docs/next/getting-started/tutorials-and-examples/fireworks"}},c={},p=[{value:"Final result",id:"final-result",level:3},{value:"Code Snippet",id:"code-snippet",level:3}],d={toc:p};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Comment cr\xe9er une porte automatique basique qui s'ouvre lorsqu'un Character s'approche."),(0,a.kt)("h3",{id:"final-result"},"Final result"),(0,a.kt)("video",{controls:"true",allowfullscreen:"true"},(0,a.kt)("source",{src:"/videos/docs/tutorials/doors-01.mp4"})),(0,a.kt)("video",{controls:"true",allowfullscreen:"true"},(0,a.kt)("source",{src:"/videos/docs/tutorials/doors-02.webm"})),(0,a.kt)("h3",{id:"code-snippet"},"Code Snippet"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Server/Index.lua"',title:'"Server/Index.lua"'},'-- Faisons appara\xeetre un SM_Plane que nous utiliserons comme porte, et \xe9galement un StaticMesh vide (SM_None) correspondant \xe0 notre charni\xe8re.\n-- Le point de pivot du SM_Plane se trouvant au milieu du mesh, nous avons besoin d\'une charni\xe8re pour permettre la bonne rotation.\n-- Ceci n\'est pas n\xe9cessaire si le Mesh de votre porte \xe0 d\xe9j\xe0 son point de pivot \xe0 l\'emplacement de la charni\xe8re.\n\n-- Cr\xe9er la charni\xe8re (qui sera tourn\xe9e de 90\xba pour \xeatre debout)\nlocal door = StaticMesh(Vector(0, 0, 100), Rotator(0, 0, 90), "nanos-world::SM_None")\n\n-- Cr\xe9er le Mesh de la porte, le redimensionner pour qu\'il corresponde \xe0 la taille d\'une porte, et l\'attacher a la charni\xe8re\nlocal door_mesh = StaticMesh(Vector(), Rotator(), "nanos-world::SM_Plane")\ndoor_mesh:SetScale(Vector(1, 2, 1))\n\n-- Attacher la charni\xe8re \xe0 une position relative de 50 unit\xe9 sur l\'axe X (pour \xeatre \xe0 l\'emplacement de la charni\xe8re)\ndoor_mesh:AttachTo(door)\ndoor_mesh:SetRelativeLocation(Vector(50, 0, 0))\n\n-- Cr\xe9er notre Trigger au centre de la porte\nlocal trigger = Trigger(Vector(0, 0, 100), Rotator(), 150)\n\n-- Enregistre la fonction \xe0 executer lorsque le joueur s\'approche de la porte\ntrigger:Subscribe("BeginOverlap", function(trigger, actor)\n    if (actor:GetType() ~= "Character") then return end\n\n    -- Joue un son de porte qui s\'ouvre pour le Character\n    actor:PlayAnimation("nanos-world::AM_Mannequin_DoorOpen_01", AnimationSlotType.UpperBody)\n\n    -- Tourne la porte de 90\xb0 de mani\xe8re fluide\n    door:RotateTo(Rotator(0, -90, 90), 1)\nend)\n\n-- Enregistre la fonction \xe0 executer l\'orsque le joueur s\'\xe9loingne de la porte\ntrigger:Subscribe("EndOverlap", function(trigger, actor)\n    if (actor:GetType() ~= "Character") then return end\n\n    -- Referme la porte \xe0 sa position d\'origine de mani\xe8re fluide\n    door:RotateTo(Rotator(0, 0, 90), 1)\nend)\n')))}m.isMDXComponent=!0}}]);