"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[8129],{70302:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=r(85893),n=r(11151);const a={title:"Portes",description:"Comment cr\xe9er une porte automatique basique qui s'ouvre lorsqu'un Character s'approche",tags:["tutorial-example","scripting"]},i=void 0,s={id:"getting-started/tutorials-and-examples/doors",title:"Portes",description:"Comment cr\xe9er une porte automatique basique qui s'ouvre lorsqu'un Character s'approche",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-latest/getting-started/tutorials-and-examples/doors.md",sourceDirName:"getting-started/tutorials-and-examples",slug:"/getting-started/tutorials-and-examples/doors",permalink:"/fr/docs/getting-started/tutorials-and-examples/doors",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/nanos-world-docs/fr",tags:[{label:"tutorial-example",permalink:"/fr/docs/tags/tutorial-example"},{label:"scripting",permalink:"/fr/docs/tags/scripting"}],version:"latest",frontMatter:{title:"Portes",description:"Comment cr\xe9er une porte automatique basique qui s'ouvre lorsqu'un Character s'approche",tags:["tutorial-example","scripting"]},sidebar:"main",previous:{title:"Blueprint Communication",permalink:"/fr/docs/getting-started/tutorials-and-examples/blueprint-communication"},next:{title:"Feux d'artifice",permalink:"/fr/docs/getting-started/tutorials-and-examples/fireworks"}},l={},u=[{value:"R\xe9sultat final",id:"r\xe9sultat-final",level:3},{value:"Extrait de code",id:"extrait-de-code",level:3}];function c(e){const t={code:"code",h3:"h3",p:"p",pre:"pre",...(0,n.a)(),...e.components},{VideoExternal:r}=t;return r||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("VideoExternal",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"How to create a simple and automatic door when Characters move in."}),"\n",(0,o.jsx)(t.h3,{id:"r\xe9sultat-final",children:"R\xe9sultat final"}),"\n",(0,o.jsx)(r,{path:"/docs/tutorials/doors-01.mp4"}),"\n",(0,o.jsx)(r,{path:"/docs/tutorials/doors-02.webm"}),"\n",(0,o.jsx)(t.h3,{id:"extrait-de-code",children:"Extrait de code"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-lua",metastring:'title="Server/Index.lua"',children:'-- Faisons appara\xeetre un SM_Plane que nous utiliserons comme porte, et \xe9galement un StaticMesh vide (SM_None) correspondant \xe0 notre charni\xe8re.\n-- Le point de pivot du SM_Plane se trouvant au milieu du mesh, nous avons besoin d\'une charni\xe8re pour permettre la bonne rotation.\n-- Ceci n\'est pas n\xe9cessaire si le Mesh de votre porte \xe0 d\xe9j\xe0 son point de pivot \xe0 l\'emplacement de la charni\xe8re.\n\n-- Cr\xe9er la charni\xe8re (qui sera tourn\xe9e de 90\xba pour \xeatre debout)\nlocal door = StaticMesh(Vector(0, 0, 100), Rotator(0, 0, 90), "nanos-world::SM_None")\n\n-- Cr\xe9er le Mesh de la porte, le redimensionner pour qu\'il corresponde \xe0 la taille d\'une porte, et l\'attacher a la charni\xe8re\nlocal door_mesh = StaticMesh(Vector(), Rotator(), "nanos-world::SM_Plane")\ndoor_mesh:SetScale(Vector(1, 2, 1))\n\n-- Attacher la charni\xe8re \xe0 une position relative de 50 unit\xe9 sur l\'axe X (pour \xeatre \xe0 l\'emplacement de la charni\xe8re)\ndoor_mesh:AttachTo(door)\ndoor_mesh:SetRelativeLocation(Vector(50, 0, 0))\n\n-- Cr\xe9er notre Trigger au centre de la porte\nlocal trigger = Trigger(Vector(0, 0, 100), Rotator(), 150)\n\n-- Enregistre la fonction \xe0 executer lorsque le joueur s\'approche de la porte\ntrigger:Subscribe("BeginOverlap", function(trigger, actor)\n    if (actor:GetType() ~= "Character") then return end\n\n    -- Joue une animation d\'ouverture de porte sur le Character\n    actor:PlayAnimation("nanos-world::AM_Mannequin_DoorOpen_01", AnimationSlotType.UpperBody)\n\n    -- Tourne la porte de 90\xb0 de mani\xe8re fluide\n    door:RotateTo(Rotator(0, -90, 90), 1)\nend)\n\n-- Enregistre la fonction \xe0 executer lorsque le joueur s\'\xe9loigne de la porte\ntrigger:Subscribe("EndOverlap", function(trigger, actor)\n    if (actor:GetType() ~= "Character") then return end\n\n    -- Referme la porte \xe0 sa position d\'origine de mani\xe8re fluide\n    door:RotateTo(Rotator(0, 0, 90), 1)\nend)\n'})})]})}function d(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},11151:(e,t,r)=>{r.d(t,{Z:()=>s,a:()=>i});var o=r(67294);const n={},a=o.createContext(n);function i(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);