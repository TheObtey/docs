"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[3433],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(a),g=r,k=m["".concat(l,".").concat(g)]||m[g]||c[g]||i;return a?n.createElement(k,o(o({ref:t},d),{},{components:a})):n.createElement(k,o({ref:t},d))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},79065:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={title:"Guide sur les Packages",description:"Tout ce que vous devez savoir sur les Packages",sidebar_position:0,tags:["scripting","packages"],keywords:["packages","scripting","lua"]},o=void 0,s={unversionedId:"core-concepts/packages/packages-guide",id:"core-concepts/packages/packages-guide",title:"Guide sur les Packages",description:"Tout ce que vous devez savoir sur les Packages",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/core-concepts/packages/packages-guide.md",sourceDirName:"core-concepts/packages",slug:"/core-concepts/packages/packages-guide",permalink:"/fr/docs/next/core-concepts/packages/packages-guide",draft:!1,editUrl:"https://crowdin.com/project/nanos-world-docs/fr",tags:[{label:"scripting",permalink:"/fr/docs/next/tags/scripting"},{label:"packages",permalink:"/fr/docs/next/tags/packages"}],version:"current",sidebarPosition:0,frontMatter:{title:"Guide sur les Packages",description:"Tout ce que vous devez savoir sur les Packages",sidebar_position:0,tags:["scripting","packages"],keywords:["packages","scripting","lua"]},sidebar:"main",previous:{title:"Linux & ARM Server installation",permalink:"/fr/docs/next/core-concepts/server-manual/server-linux-arm"},next:{title:"\xc9cran de chargement",permalink:"/fr/docs/next/core-concepts/packages/loading-screen"}},l={},p=[{value:"Structure des dossiers",id:"structure-des-dossiers",level:2},{value:"Configuration des Packages",id:"configuration-des-packages",level:2},{value:"Types de Package",id:"types-de-package",level:2},{value:"<code>script</code>",id:"script",level:3},{value:"<code>game-mode</code>",id:"game-mode",level:3},{value:"<code>loading-screen</code>",id:"loading-screen",level:3},{value:"Param\xe8tres d\xe9taill\xe9s",id:"param\xe8tres-d\xe9taill\xe9s",level:2},{value:"Compatibility Version",id:"compatibility-version",level:3},{value:"Custom Settings",id:"custom-settings",level:3},{value:"List of Types",id:"list-of-types",level:4},{value:"Ignoring Client Folders",id:"ignoring-client-folders",level:2},{value:"Logo Image",id:"logo-image",level:2}],d={toc:p};function c(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Les ",(0,r.kt)("strong",{parentName:"p"},"Packages")," sont des composants de votre serveur qui vont ex\xe9cuter des scripts Lua pour int\xe9ragir avec le jeu."),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(55583).Z,width:"628",height:"170"})),(0,r.kt)("h2",{id:"structure-des-dossiers"},"Structure des dossiers"),(0,r.kt)("p",null,"All Packages must go under ",(0,r.kt)("inlineCode",{parentName:"p"},"Server/Packages/")," folder. Each Package is a folder under that."),(0,r.kt)("p",null,"Ils peuvent contenir les dossiers suivants : ",(0,r.kt)("inlineCode",{parentName:"p"},"Server"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Client")," et ",(0,r.kt)("inlineCode",{parentName:"p"},"Shared"),". Seul les dossiers ",(0,r.kt)("strong",{parentName:"p"},"Client")," and ",(0,r.kt)("strong",{parentName:"p"},"Shared")," seront envoy\xe9s et charg\xe9s par les clients quand ils se connecteront."),(0,r.kt)("p",null,"Chaque ",(0,r.kt)("strong",{parentName:"p"},"Package")," doit avoir un fichier nomm\xe9 ",(0,r.kt)("inlineCode",{parentName:"p"},"Index.lua")," \xe0 l'int\xe9rieur des dossiers ",(0,r.kt)("strong",{parentName:"p"},"Server"),", ",(0,r.kt)("strong",{parentName:"p"},"Client")," ou ",(0,r.kt)("strong",{parentName:"p"},"Shared"),", il s'agit du seul fichier qui sera lu lorsque le Package sera charg\xe9, par cons\xe9quent ce fichier se doit d'inclure les autres fichiers du Package et ainsi les d\xe9marrer."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Server Folder"',title:'"Server','Folder"':!0},"NanosWorldServer.exe\nPackages/\n\u251c\u2500\u2500 my-package-01/\n\u2502   \u251c\u2500\u2500 Server/\n\u2502   \u2502   \u251c\u2500\u2500 Index.lua\n\u2502   \u2502   \u2514\u2500\u2500 *.lua\n\u2502   \u251c\u2500\u2500 Client/\n\u2502   \u2502   \u2514\u2500\u2500 *.lua\n\u2502   \u251c\u2500\u2500 Shared/\n\u2502   \u2502   \u2514\u2500\u2500 *.lua\n\u2502   \u2514\u2500\u2500 Package.toml\n\u251c\u2500\u2500 my-package-02/\n\u2502   \u251c\u2500\u2500 Package.toml\n\u2502   \u2514\u2500\u2500 ...\nAssets/\nConfig.toml\n")),(0,r.kt)("h2",{id:"configuration-des-packages"},"Configuration des Packages"),(0,r.kt)("p",null,"Packages have a configuration file in the root of the package folder, called ",(0,r.kt)("inlineCode",{parentName:"p"},"Package.toml"),", in this file we can setup all pertinent settings related to the Package. Each ",(0,r.kt)("a",{parentName:"p",href:"#package-types"},"Package Type")," has it's own configuration file format."),(0,r.kt)("p",null,"They all share the same header ",(0,r.kt)("inlineCode",{parentName:"p"},"[meta]"),", which contains the following settings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:"reference",reference:!0},"https://github.com/nanos-world/nanos-world-server/blob/main/_meta.toml\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"title"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Friendly name")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"author"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Contributor(s)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"version"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Version - in the ",(0,r.kt)("a",{parentName:"td",href:"https://semver.org/"},"SemVer")," format ",(0,r.kt)("inlineCode",{parentName:"td"},"X.Y.Z"))))),(0,r.kt)("h2",{id:"types-de-package"},"Types de Package"),(0,r.kt)("p",null,"We have 3 types of packages: ",(0,r.kt)("a",{parentName:"p",href:"#script"},"script"),", ",(0,r.kt)("a",{parentName:"p",href:"#game-mode"},"game-mode")," and ",(0,r.kt)("a",{parentName:"p",href:"#loading-screen"},"loading-screen"),", each one with with a specific functionality and an unique purpose:"),(0,r.kt)("h3",{id:"script"},(0,r.kt)("inlineCode",{parentName:"h3"},"script")),(0,r.kt)("p",null,"Script is a normal Package, you can load as many as you want."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="Package.toml" reference',title:'"Package.toml"',reference:!0},"https://github.com/nanos-world/nanos-world-server/blob/main/_script.toml\n")),(0,r.kt)("h3",{id:"game-mode"},(0,r.kt)("inlineCode",{parentName:"h3"},"game-mode")),(0,r.kt)("p",null,"GameModes are Like ",(0,r.kt)("inlineCode",{parentName:"p"},"script")," but you can only load one ",(0,r.kt)("inlineCode",{parentName:"p"},"game-mode")," package at once."),(0,r.kt)("p",null,"They are used when you are creating full games which cannot be loaded with other full games packages."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="Package.toml" reference',title:'"Package.toml"',reference:!0},"https://github.com/nanos-world/nanos-world-server/blob/main/_game_mode.toml\n")),(0,r.kt)("h3",{id:"loading-screen"},(0,r.kt)("inlineCode",{parentName:"h3"},"loading-screen")),(0,r.kt)("p",null,"Loading Screen is a special Package which will be loaded during player's loading screen."),(0,r.kt)("p",null,"It must have an ",(0,r.kt)("inlineCode",{parentName:"p"},"index.html")," in the root. Please refer to ",(0,r.kt)("a",{parentName:"p",href:"/fr/docs/next/core-concepts/packages/loading-screen"},"Loading Screen")," for more information."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="Package.toml" reference',title:'"Package.toml"',reference:!0},"https://github.com/nanos-world/nanos-world-server/blob/main/_loading_screen.toml\n")),(0,r.kt)("h2",{id:"param\xe8tres-d\xe9taill\xe9s"},"Param\xe8tres d\xe9taill\xe9s"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Package\xa0Types"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"force_no_map_package"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"script"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"game-mode")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Enabling this will force the map package (if any) to do NOT load")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"auto_cleanup"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"script"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"game-mode")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Activer cela d\xe9truira toutes les entit\xe9s cr\xe9ees par ce Package lors de sa d\xe9sactivation")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"compatibility_version"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"script"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"game-mode")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The game version (",(0,r.kt)("inlineCode",{parentName:"td"},"major.minor"),") at the time this package was created, for granting backwards compatibility between breaking changes. See more ",(0,r.kt)("a",{parentName:"td",href:"#compatibility-version"},"here"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"packages_requirements"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"script"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"game-mode")),(0,r.kt)("td",{parentName:"tr",align:"left"},"List of Packages dependencies used by this Package which need to be loaded first")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"assets_requirements"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"script"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"game-mode")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Liste des packs d'assets \xe0 charger avant que ce package se charge")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"compatible_maps"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"game-mode")),(0,r.kt)("td",{parentName:"tr",align:"left"},"List of Maps compatible/recommended to work with this Game Mode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"custom_settings"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"game-mode")),(0,r.kt)("td",{parentName:"tr",align:"left"},"List of Custom Settings which can be set when starting a new game or passed through command line to the server. See more ",(0,r.kt)("a",{parentName:"td",href:"#custom-settings"},"here"))))),(0,r.kt)("h3",{id:"compatibility-version"},"Compatibility Version"),(0,r.kt)("p",null,"This setting deserves a special attention. It is meant to assure your packages will not break in future breaking changes updates."),(0,r.kt)("p",null,"It works by forcing that package to run code in a compatibility mode, meaning that breaking changes will keep working as the way it was before. Exemple :"),(0,r.kt)("p",null,"Let's say you have this code running right now:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'-- Make an asynchronous HTTP request\nHTTP.Request("https://api.nanos.world/", "store/v1/packages/halloween", "GET", "", "application/json", false, {}, function(status, data)\n    -- Do something with my data\nend)\n')),(0,r.kt)("p",null,"And then, in the hypothetical update 9.99 the API changes and make ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP.RequestSync")," to become ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP.Request")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP.Request")," to become ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP.RequestAsync"),". I.e. you need to update your code to use ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP.RequestAsync")," now, this is a breaking change as the new functions uses the same name as before."),(0,r.kt)("p",null,"With compatibility version, your code can keep working as it was before this update, for that, in your Package.toml you just need to make sure it's ",(0,r.kt)("inlineCode",{parentName:"p"},"compatibility_version")," is set to a version lower than ",(0,r.kt)("inlineCode",{parentName:"p"},"9.99")," (i.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"9.98"),")."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"The Compatibility Mode is a feature that aims to keep old and unmaintained packages/game-modes to keep working for a longer time. But from time to time all the deprecated compatibility modes will be removed from the codebase. So always keep your packages up-to-date!")),(0,r.kt)("h3",{id:"custom-settings"},"Custom Settings"),(0,r.kt)("p",null,"GameModes can define Custom Settings in the ",(0,r.kt)("inlineCode",{parentName:"p"},"[custom_settings]")," section to be set when creating a new game through main menu, or set when starting the server with the command ",(0,r.kt)("inlineCode",{parentName:"p"},'--custom_settings "var1 = value1, var2 = value2, ..."')),(0,r.kt)("p",null,"The values defined can be accessed through the method ",(0,r.kt)("a",{parentName:"p",href:"https://docs.nanos.world/docs/next/scripting-reference/static-classes/server#getcustomsettings"},"Server.GetCustomSettings()"),"."),(0,r.kt)("h4",{id:"list-of-types"},"List of Types"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A toggleable checkbox")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Integer numeric values")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"floating")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Floating numeric values")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"text")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Text Box")))),(0,r.kt)("h2",{id:"ignoring-client-folders"},"Ignoring Client Folders"),(0,r.kt)("p",null,"Sometimes you want to ignore some folders from being sent to the clients (e.g. auto generated folders from Node.js HTML ones)."),(0,r.kt)("p",null,"So, to make the server ignore it you just need to add an ",(0,r.kt)("inlineCode",{parentName:"p"},".ignore")," file in the root of that folder. Simple as that \ud83d\ude09."),(0,r.kt)("h2",{id:"logo-image"},"Logo Image"),(0,r.kt)("p",null,"It is possible to have a custom image to be displayed in the Vault. For that, add a file called ",(0,r.kt)("inlineCode",{parentName:"p"},"Package.jpg")," besides the Package.toml with the image you wish. The recommended size is ",(0,r.kt)("inlineCode",{parentName:"p"},"300x150"),"."))}c.isMDXComponent=!0},55583:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/packages-01-e5ca40b3250f77522f7e280d3a183cf9.jpg"}}]);