"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[7111],{88453:function(e,t,a){a.d(t,{p2:function(){return te},aj:function(){return K},rt:function(){return Q},YS:function(){return q},PZ:function(){return ee},Yb:function(){return Z},SM:function(){return I},Ut:function(){return $}});a(83117),a(80102);var n,r=a(67294),i=a(3905),o=a(80143),l=a(73727),s=a(30860),p=(a(72963),a(18846),a(72486)),c=JSON.parse('{"name":"Actor","description":"Base class for all Actor entities.","authority":"both","static_functions":[],"events":[]}'),d=JSON.parse('{"name":"Pickable","description":"Base class for all Pickable entities.","authority":"both","static_functions":[],"events":[]}'),m=JSON.parse('{"name":"Paintable","description":"Base class for all Paintable entities.","authority":"both","static_functions":[],"events":[]}'),u=a(68088),h=a(22551),k=a(2627),y=JSON.parse('{"name":"Canvas","description":"Canvas is an entity which you can draw onto it.","authority":"client","constructor":[],"functions":[]}'),g=a(60080),f=JSON.parse('{"name":"Database","description":"The Database entity provides programmers a way to access SQL databases easily through scripting.","authority":"server","functions":[]}'),N=a(16736),b=a(3898),v=JSON.parse('{"name":"Grenade","description":"Chad Grenade","authority":"server","inheritance":["Actor","Paintable","Pickable"],"constructor":[],"functions":[]}'),A=JSON.parse('{"name":"Light","description":"A Light represents a Lighting source.","authority":"both","inheritance":["Actor"],"constructor":[],"functions":[]}'),C=JSON.parse('{"name":"Melee","description":"A Melee represents an Entity which can be Pickable by a Character and can be used to melee attack, Charactes can hold it with hands with pre-defined handling modes.","authority":"server","inheritance":["Actor","Paintable","Pickable"],"constructor":[],"functions":[]}'),S=JSON.parse('{"name":"Particle","description":"Particle Entity.","authority":"both","inheritance":["Actor"],"constructor":[],"functions":[]}'),w=JSON.parse('{"name":"Player","description":"Players are Entities that represents the individual behind the mouse and keyboard. Players are spawned automatically when connected to the server.","authority":"server","functions":[]}'),T=JSON.parse('{"name":"Prop","description":"A Prop represents a Dynamic Mesh which can be spawned in the world, can be grabbed around by characters and have physics.","authority":"both","inheritance":["Actor","Paintable"],"constructor":[],"functions":[]}'),_=a(39526),M=a(75938),R=JSON.parse('{"name":"Sound","description":"Class for playing in-game 2D and 3D sounds","authority":"client","inheritance":["Actor"],"constructor":[],"functions":[]}'),P=a(18259),B=JSON.parse('{"name":"Trigger","description":"A Trigger class is a utility class to trigger events when any Entity enters an Area.","authority":"server","inheritance":["Actor"],"constructor":[],"functions":[]}'),G=JSON.parse('{"name":"Vehicle","description":"Vehicles are wheeled entities which Characters can possesses and drive.","authority":"server","inheritance":["Actor","Paintable"],"constructor":[],"functions":[]}'),D=JSON.parse('{"name":"Weapon","description":"Weapons are fully customizable, all pieces of the weapon can be changed with immense possibility of creation","authority":"server","inheritance":["Actor","Paintable","Pickable"],"constructor":[],"functions":[]}'),x=JSON.parse('{"name":"WebUI","description":"Class for spawning a dynamic Web Browser","authority":"client","constructor":[],"functions":[]}'),V={"Base Actor":c,"Base Pickable":d,"Base Paintable":m,Billboard:u,Blueprint:h,Cable:k,Canvas:y,Character:g,Database:f,Decal:N,File:b,Grenade:v,Light:A,Melee:C,Particle:S,Player:w,Prop:T,SceneCapture:_,StaticMesh:M,Sound:R,TextRender:P,Trigger:B,Vehicle:G,Weapon:D,WebUI:x},O=function(){return(0,o.zu)().path},q=function(e){var t=e.title,a=e.description,n=e.href,r=e.image_src;return(0,i.kt)("a",{class:"card-link",href:n.startsWith("http")?n:O()+"/"+n},(0,i.kt)("img",{src:r||"/img/docs/nanos-world-background.jpg"}),(0,i.kt)("h4",null,t),(0,i.kt)("p",null,a))},I=function(e){var t=e.children,a=e.href;return(0,i.kt)("a",{class:"reference-link",href:a.startsWith("http")?a:O()+"/"+a},t,(0,i.kt)("span",null,a))},L=function(e){var t=e.img,a=e.title,n=e.description;return(0,i.kt)(r.Fragment,null,(0,i.kt)("h3",null,(0,i.kt)("img",{src:t,title:a,style:{width:"24px","vertical-align":"middle","margin-right":"5px"}})," ",a),n)},F=function(e){var t=e.label,a=e.description;return(0,i.kt)(r.Fragment,null,(0,i.kt)("h3",null,t),(0,i.kt)("span",{dangerouslySetInnerHTML:{__html:a}}))},j=function(e){var t=e.class_name,a=e.description;return(0,i.kt)(r.Fragment,null,(0,i.kt)("h3",null,t," Class"),(0,i.kt)("span",{dangerouslySetInnerHTML:{__html:a}}))},W=function(e){var t=e.struct_name,a=e.description;return(0,i.kt)(r.Fragment,null,(0,i.kt)("h3",null,t," Struct"),(0,i.kt)("span",{dangerouslySetInnerHTML:{__html:a}}))},E=function(e){var t=e.enum_name;return(0,i.kt)(ae,{enum_name:t,enum_data:p[t],is_tooltip:!0,mdxType:"EnumDeclaration"})},H=function(e,t,a){return(0,i.kt)(s.ZP,{interactive:!0,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,i.kt)(L,{img:e,title:t,description:a,mdxType:"AuthorityTooltip"}),mdxType:"Tippy"},(0,i.kt)(l.rU,{class:"authority-availability",to:O()+"/core-concepts/scripting/authority-concepts#methods-and-events-availability",mdxType:"Link"},(0,i.kt)("img",{src:e,title:t})))},U=function(e){return(0,i.kt)("a",{href:O()+"/scripting-reference/glossary/basic-types#"+e.toLowerCase()},e)},z=function(e,t,a){return(0,i.kt)(s.ZP,{interactive:!0,maxWidth:300,animation:"scale-subtle",placement:"left",content:(0,i.kt)(W,{struct_name:e,description:a,mdxType:"StructToolTip"}),mdxType:"Tippy"},(0,i.kt)(l.rU,{to:O()+"/scripting-reference/utility-classes/"+(t||e.toLowerCase()),mdxType:"Link"},e))},J=function(e,t,a){return(0,i.kt)(s.ZP,{interactive:!0,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,i.kt)(j,{class_name:t+" "+e,description:V[e]?V[e].description:"Class not found. Soon\u2122.",mdxType:"ClassToolTip"}),mdxType:"Tippy"},(0,i.kt)(l.rU,{to:O()+"/scripting-reference/classes/"+(a||e.toLowerCase()),mdxType:"Link"},e))},Z=function(e){var t=e.children;return(0,i.kt)(s.ZP,{interactive:!0,maxWidth:600,animation:"scale-subtle",placement:"left",content:(0,i.kt)(E,{enum_name:t,mdxType:"EnumToolTip"}),mdxType:"Tippy"},(0,i.kt)(l.rU,{to:O()+"/scripting-reference/glossary/enums#"+t.toLowerCase(),mdxType:"Link"},t))},X=function(e,t,a){return(0,i.kt)(s.ZP,{interactive:!0,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,i.kt)(F,{label:t,description:a,mdxType:"AssetPathToolTip"}),mdxType:"Tippy"},(0,i.kt)(l.rU,{to:O()+"/core-concepts/assets#referencing-assets-in-scripting",mdxType:"Link"},t))},Y=function(e,t,a){return(0,i.kt)(s.ZP,{interactive:!0,maxWidth:400,animation:"scale-subtle",placement:"left",content:(0,i.kt)(F,{label:t,description:a,mdxType:"AssetPathToolTip"}),mdxType:"Tippy"},(0,i.kt)(l.rU,{to:O()+"/scripting-reference/glossary/basic-types#specialpath",mdxType:"Link"},t))},K={AuthorityOnly:function(){return H("/img/scripting/authority-only.svg","Authority Only","This can be called only on the side which spawned it!")},ServerOnly:function(){return H("/img/scripting/server-only.svg","Server Only","This can be called only on server side!")},ClientOnly:function(){return H("/img/scripting/client-only.svg","Client Only","This can be called only on client side!")},Both:function(){return H("/img/scripting/both.png","Both Sides","This can be called on any side!")}},Q={Number:function(){return U("number")},String:function(){return U("string")},Boolean:function(){return U("boolean")},Table:function(){return U("table")},Iterator:function(){return U("iterator")},Any:function(){return U("any")},Function:function(){return U("function")},Nil:function(){return U("nil")}},$={Vector:function(){return z("Vector","","A vector composed of components (X, Y, Z) with floating point precision.")},Rotator:function(){return z("Rotator","","A container for rotation information (Pitch, Yaw, Roll). All rotation values are stored in degrees.")},Color:function(){return z("Color","","A color composed of components (R, G, B, A) with floating point precision.")},Quat:function(){return z("Quat","quaternion","Floating point Quaternion (X, Y, Z, W) that can represent a rotation about an axis in 3-D space.")},Vector2D:function(){return z("Vector2D","vectortwod","A Vector2D composed of components (X, Y) with floating point precision. Used mainly for HUD and Drawing on screen.")}},ee={Actor:function(){return J("Base Actor","\ud83c\udfad","base-classes/actor")},Paintable:function(){return J("Base Paintable","\ud83c\udfa8","base-classes/paintable")},Pickable:function(){return J("Base Pickable","\u2694\ufe0f","base-classes/pickable")},Billboard:function(){return J("Billboard","\ud83e\udea7")},Blueprint:function(){return J("Blueprint","\ud83d\udd23")},Canvas:function(){return J("Canvas","\ud83d\uddbc\ufe0f")},Cable:function(){return J("Cable","\u26d3\ufe0f")},Character:function(){return J("Character","\ud83e\uddd1")},Database:function(){return J("Database","\ud83d\udcbe")},Decal:function(){return J("Decal","\ud83d\udd8c\ufe0f")},File:function(){return J("File","\ud83d\udcc1")},Grenade:function(){return J("Grenade","\ud83d\udca3")},Light:function(){return J("Light","\ud83d\udca1")},Melee:function(){return J("Melee","\ud83d\udd2a")},Particle:function(){return J("Particle","\u2728")},Player:function(){return J("Player","\ud83d\udc69\u200d\ud83d\udcbb")},Prop:function(){return J("Prop","\ud83d\udce6")},SceneCapture:function(){return J("SceneCapture","\ud83d\udcfd\ufe0f","scene-capture")},Sound:function(){return J("Sound","\ud83d\udd0a")},StaticMesh:function(){return J("StaticMesh","\ud83c\udfe0","static-mesh")},TextRender:function(){return J("TextRender","\ud83c\udd92","text-render")},Trigger:function(){return J("Trigger","\ud83e\udea4")},Vehicle:function(){return J("Vehicle","\ud83d\ude99")},Weapon:function(){return J("Weapon","\ud83d\udd2b")},WebUI:function(){return J("WebUI","\ud83d\udda5\ufe0f")}},te={StaticMesh:function(){return X(0,"StaticMesh Reference","StaticMesh Asset Reference in the format: <code>asset-pack::SM_MyAsset</code>.")},SkeletalMesh:function(){return X(0,"SkeletalMesh Reference","SkeletalMesh Asset Reference in the format: <code>asset-pack::SM_MyAsset</code>.")},Animation:function(){return X(0,"Animation Reference","Animation Asset Reference in the format: <code>asset-pack::SM_MyAsset</code>.")},Particle:function(){return X(0,"Particle Reference","Particle Asset Reference in the format: <code>asset-pack::SM_MyAsset</code>.")},Material:function(){return X(0,"Material Reference","Material Asset Reference in the format: <code>asset-pack::SM_MyAsset</code>.")},Map:function(){return X(0,"Map Reference","Map Asset Reference in the format: <code>asset-pack::SM_MyAsset</code>.")},Blueprint:function(){return X(0,"Blueprint Reference","Blueprint Asset Reference in the format: <code>asset-pack::SM_MyAsset</code>.")},Sound:function(){return Y(0,"Sound Reference","Sound Asset Reference in the format:<br/><code>asset-pack::SM_MyAsset</code><br/><br/>Or as Special Path:<br/><code>package://my-package/Client/sound.ogg</code>.")},Image:function(){return Y(0,"Image Path","Image Path as Special Path:<br/><code>package://my-package/Client/sound.ogg</code>.")},HTML:function(){return Y(0,"HTML Path","HTML Path as Special Path:<br/><code>package://my-package/Client/file.html</code>.")}},ae=(n="EnumDeclaration",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)})},11029:function(e,t,a){a.d(t,{ZP:function(){return p}});var n=a(83117),r=a(80102),i=(a(67294),a(3905)),o=a(88453),l=["components"],s={toc:[]};function p(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",null,a.hidden_reference?(0,i.kt)("div",null):(0,i.kt)(o.SM,{href:"scripting-reference/classes/base-classes/actor",mdxType:"ReferenceLink"},"Base Actor")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"}),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"th"},"Name")),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"th"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#destroy"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"Destroy")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Triggered when an Actor is destroyed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#spawn"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"Spawn")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Triggered when an Actor is spawned/created")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#valuechange"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"ValueChange")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Triggered when an Actor has a value changed with ",(0,i.kt)("inlineCode",{parentName:"td"},":SetValue()"))))))}p.isMDXComponent=!0},68758:function(e,t,a){a.d(t,{ZP:function(){return p}});var n=a(83117),r=a(80102),i=(a(67294),a(3905)),o=a(88453),l=["components"],s={toc:[]};function p(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",null,a.hidden_reference?(0,i.kt)("div",null):(0,i.kt)(o.SM,{href:"scripting-reference/classes/base-classes/actor",mdxType:"ReferenceLink"},"Base Actor")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"}),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"th"},"Returns")),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"th"},"Name")),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"th"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#addimpulse"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"AddImpulse")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Applies a Force in world space to this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#attachto"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"AttachTo")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Attaches this Actor to another Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#destroy"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"Destroy")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Destroys this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#detach"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"Detach")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Detaches this Actor if attached")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setcollision"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetCollision")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets this Actor's collision type")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setforce"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetForce")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Adds a permanent force to this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setgravityenabled"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetGravityEnabled")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets whether gravity is enabled on this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setvisibility"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetVisibility")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets the Actor visibility")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.ClientOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#sethighlightenabled"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetHighlightEnabled")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets whether the highlight is enabled on this Actor, and which highlight index to use")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.ClientOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setoutlineenabled"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetOutlineEnabled")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets whether the outline is enabled on this Actor, and which outline index to use")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setlifespan"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetLifeSpan")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets the time (in seconds) before this Actor is destroyed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setlocation"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetLocation")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets this Actor's location in the game world")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.ServerOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setnetworkauthority"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetNetworkAuthority")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets the Player this Actor will have its physics calculated on ",(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/core-concepts/scripting/authority-concepts#network-authority"},"Network Authority"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setrelativelocation"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetRelativeLocation")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets this Actor's relative location in local space")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setrelativerotation"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetRelativeRotation")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets this Actor's relative rotation in local space")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setrotation"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetRotation")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets this Actor's rotation in the game world")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setscale"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetScale")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets this Actor's scale")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#setvalue"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"SetValue")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Sets a value in this Actor, which can be accessed by any package")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#translateto"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"TranslateTo")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Smoothly moves this Actor to the specified location")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.AuthorityOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#rotateto"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"RotateTo")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Smoothly rotates this Actor to the specified angle")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.ClientOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#hasnetworkauthority"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"HasNetworkAuthority")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets if the LocalPlayer is currently the Network Authority of this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.ClientOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#hasauthority"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"HasAuthority")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets if this Actor was spawned by the client side")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#isbeingdestroyed"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"IsBeingDestroyed")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets if this Actor is being destroyed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#isgravityenabled"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"IsGravityEnabled")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets whether gravity is enabled on this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#isvisible"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"IsVisible")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets whether this actor is Visible or not")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#isinwater"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"IsInWater")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets if this Actor is in water")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#isnetworkdistributed"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"IsNetworkDistributed")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets if this Actor is currently ",(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/core-concepts/scripting/authority-concepts#overriding-the-current-network-authority"},"Network Distributed"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#isvalid"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"IsValid")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Returns if this Actor is valid (i.e. not destroyed)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Table,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getattachedentities"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetAttachedEntities")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets all Actors attached to this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Any,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getattachedto"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetAttachedTo")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets the Actor this Actor is attached to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.ClientOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Table,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getbounds"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetBounds")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets this Actor's bounds")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getcollision"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetCollision")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets this Actor's collision type")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getid"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetID")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets the universal network ID of this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Vector,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getlocation"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetLocation")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets this Actor's location in the game world")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Rotator,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getrotation"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetRotation")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets this Actor's angle in the game world")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Vector,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getforce"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetForce")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets this Actor's scale")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Vector,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getscale"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetScale")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets this Actor's scale")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.String,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#gettype"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetType")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets the type of this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Any,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getvalue"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetValue")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets a value stored on this Actor at the given key")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Vector,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getvelocity"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetVelocity")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Returns this Actor's current velocity")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.ClientOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.String,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#addactortag"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"AddActorTag")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Adds an Unreal Actor Tag to this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.ClientOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.String,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#removeactortag"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"RemoveActorTag")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Remove an Unreal Actor Tag from this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.ClientOnly,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Table,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#getactortags"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetActorTags")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Gets all Unreal Actor Tags from this Actor")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Function,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#subscribe"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"Subscribe")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Subscribes to an Event")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)(o.aj.Both,null)),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/pt-BR/docs/next/scripting-reference/classes/base-classes/actor#unsubscribe"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"Unsubscribe")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Unsubscribes from an Event")))))}p.isMDXComponent=!0},50186:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return y},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return h}});var n=a(83117),r=a(80102),i=(a(67294),a(3905)),o=a(88453),l=a(68758),s=a(11029),p=["components"],c={title:"Base Actor",description:"Base class for all Actor entities",tags:["base-class"]},d=void 0,m={unversionedId:"scripting-reference/classes/base-classes/actor",id:"version-latest/scripting-reference/classes/base-classes/actor",title:"Base Actor",description:"Base class for all Actor entities",source:"@site/i18n/pt-BR/docusaurus-plugin-content-docs/version-latest/scripting-reference/classes/base-classes/actor.mdx",sourceDirName:"scripting-reference/classes/base-classes",slug:"/scripting-reference/classes/base-classes/actor",permalink:"/pt-BR/docs/scripting-reference/classes/base-classes/actor",draft:!1,editUrl:"https://github.com/nanos-world/docs/edit/master/versioned_docs/version-latest/scripting-reference/classes/base-classes/actor.mdx",tags:[{label:"base-class",permalink:"/pt-BR/docs/tags/base-class"}],version:"latest",frontMatter:{title:"Base Actor",description:"Base class for all Actor entities",tags:["base-class"]},sidebar:"version-latest/main",previous:{title:"\ud83d\udda5\ufe0f WebUI",permalink:"/pt-BR/docs/scripting-reference/classes/webui"},next:{title:"Base Paintable",permalink:"/pt-BR/docs/scripting-reference/classes/base-classes/paintable"}},u={},h=[{value:"Static Functions",id:"static-functions",level:2},{value:"Functions",id:"functions",level:2},{value:"Events",id:"events",level:2},{value:"Static Functions Detailed",id:"static-functions-detailed",level:2},{value:"<code>GetAll</code>",id:"getall",level:3},{value:"<code>GetByIndex</code>",id:"getbyindex",level:3},{value:"<code>GetCount</code>",id:"getcount",level:3},{value:"<code>GetPairs</code>",id:"getpairs",level:3},{value:"Functions Detailed",id:"functions-detailed",level:2},{value:"<AuthorityType.AuthorityOnly /><code>AddImpulse</code>",id:"addimpulse",level:3},{value:"<AuthorityType.AuthorityOnly /><code>AttachTo</code>",id:"attachto",level:3},{value:"<AuthorityType.AuthorityOnly /><code>Destroy</code>",id:"destroy",level:3},{value:"<AuthorityType.AuthorityOnly /><code>Detach</code>",id:"detach",level:3},{value:"<AuthorityType.AuthorityOnly /><code>SetCollision</code>",id:"setcollision",level:3},{value:"<AuthorityType.AuthorityOnly /><code>SetForce</code>",id:"setforce",level:3},{value:"<AuthorityType.AuthorityOnly /><code>SetGravityEnabled</code>",id:"setgravityenabled",level:3},{value:"<AuthorityType.Both /><code>SetVisibility</code>",id:"setvisibility",level:3},{value:"<AuthorityType.ClientOnly /><code>SetHighlightEnabled</code>",id:"sethighlightenabled",level:3},{value:"<AuthorityType.ClientOnly /><code>SetOutlineEnabled</code>",id:"setoutlineenabled",level:3},{value:"<AuthorityType.AuthorityOnly /><code>SetLifeSpan</code>",id:"setlifespan",level:3},{value:"<AuthorityType.AuthorityOnly /><code>SetLocation</code>",id:"setlocation",level:3},{value:"<AuthorityType.ServerOnly /><code>SetNetworkAuthority</code>",id:"setnetworkauthority",level:3},{value:"<AuthorityType.AuthorityOnly /><code>SetRotation</code>",id:"setrotation",level:3},{value:"<AuthorityType.AuthorityOnly /><code>SetRelativeLocation</code>",id:"setrelativelocation",level:3},{value:"<AuthorityType.AuthorityOnly /><code>SetRelativeRotation</code>",id:"setrelativerotation",level:3},{value:"<AuthorityType.AuthorityOnly /><code>SetScale</code>",id:"setscale",level:3},{value:"<AuthorityType.Both /><code>SetValue</code>",id:"setvalue",level:3},{value:"<AuthorityType.AuthorityOnly /><code>TranslateTo</code>",id:"translateto",level:3},{value:"<AuthorityType.AuthorityOnly /><code>RotateTo</code>",id:"rotateto",level:3},{value:"<AuthorityType.Both /><code>IsBeingDestroyed</code>",id:"isbeingdestroyed",level:3},{value:"<AuthorityType.Both /><code>IsVisible</code>",id:"isvisible",level:3},{value:"<AuthorityType.Both /><code>IsGravityEnabled</code>",id:"isgravityenabled",level:3},{value:"<code>IsInWater</code>",id:"isinwater",level:3},{value:"<AuthorityType.Both /><code>IsNetworkDistributed</code>",id:"isnetworkdistributed",level:3},{value:"<AuthorityType.Both /><code>IsValid</code>",id:"isvalid",level:3},{value:"<AuthorityType.Both /><code>GetAttachedEntities</code>",id:"getattachedentities",level:3},{value:"<AuthorityType.Both /><code>GetAttachedTo</code>",id:"getattachedto",level:3},{value:"<AuthorityType.ClientOnly /><code>GetBounds</code>",id:"getbounds",level:3},{value:"<AuthorityType.Both /><code>GetCollision</code>",id:"getcollision",level:3},{value:"<AuthorityType.Both /><code>GetID</code>",id:"getid",level:3},{value:"<AuthorityType.Both /><code>GetLocation</code>",id:"getlocation",level:3},{value:"<AuthorityType.Both /><code>GetRotation</code>",id:"getrotation",level:3},{value:"<AuthorityType.Both /><code>GetForce</code>",id:"getforce",level:3},{value:"<AuthorityType.ClientOnly /><code>HasNetworkAuthority</code>",id:"hasnetworkauthority",level:3},{value:"<AuthorityType.ClientOnly /><code>HasAuthority</code>",id:"hasauthority",level:3},{value:"<AuthorityType.Both /><code>GetScale</code>",id:"getscale",level:3},{value:"<AuthorityType.Both /><code>GetType</code>",id:"gettype",level:3},{value:"<AuthorityType.Both /><code>GetValue</code>",id:"getvalue",level:3},{value:"<AuthorityType.Both /><code>GetVelocity</code>",id:"getvelocity",level:3},{value:"<AuthorityType.ClientOnly /><code>AddActorTag</code>",id:"addactortag",level:3},{value:"<AuthorityType.ClientOnly /><code>RemoveActorTag</code>",id:"removeactortag",level:3},{value:"<AuthorityType.ClientOnly /><code>GetActorTags</code>",id:"getactortags",level:3},{value:"<AuthorityType.Both /><code>Subscribe</code>",id:"subscribe",level:3},{value:"<AuthorityType.Both /><code>Unsubscribe</code>",id:"unsubscribe",level:3},{value:"Events Detailed",id:"events-detailed",level:2},{value:"<code>Destroy</code>",id:"destroy-1",level:3},{value:"<code>Spawn</code>",id:"spawn",level:3},{value:"<code>ValueChange</code>",id:"valuechange",level:3}],k={toc:h};function y(e){var t=e.components,a=(0,r.Z)(e,p);return(0,i.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Base class for all Actor entities"),(0,i.kt)("p",null,"An ",(0,i.kt)("strong",{parentName:"p"},"Actor")," is an object which can be spawned and destroyed through Lua. Actors support 3D transformations such as translation (location), rotation, and scale."),(0,i.kt)("p",null,"In nanos world, ",(0,i.kt)("strong",{parentName:"p"},"Actor")," is the base for several entities, and all those entities share the same ",(0,i.kt)("strong",{parentName:"p"},"Methods")," and ",(0,i.kt)("strong",{parentName:"p"},"Events")," described in this page."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This is the base class for all Actors we have. You cannot spawn it directly.")),(0,i.kt)("h2",{id:"static-functions"},"Static Functions"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"Note:")," The following functions are accessed statically using the specific ",(0,i.kt)("strong",{parentName:"p"},"class")," with a ",(0,i.kt)("strong",{parentName:"p"},"dot"),". Example: ",(0,i.kt)("inlineCode",{parentName:"p"},"Character.GetAll()"),".")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"th"},"Returns")),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"th"},"Name")),(0,i.kt)("th",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"th"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Table,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"actor#getall"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetAll")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Returns a table containing all Actors of the class this is called on ",(0,i.kt)("em",{parentName:"td"},"(copy)"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"actor"},"Actor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"actor#getbyindex"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetByIndex")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Returns a specific Actor of this class at an index ",(0,i.kt)("em",{parentName:"td"},"(direct)"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"actor#getcount"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetCount")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Returns how many Actors of this class exist ",(0,i.kt)("em",{parentName:"td"},"(direct)"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Iterator,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"actor#getall"},(0,i.kt)("strong",{parentName:"a"},(0,i.kt)("inlineCode",{parentName:"strong"},"GetPairs")))),(0,i.kt)("td",{parentName:"tr",align:"left"},"Returns an iterator with all Actors of this class ",(0,i.kt)("em",{parentName:"td"},"(direct)"))))),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"Note:")," Some of the following methods don't work with certain Actor classes.")),(0,i.kt)(l.ZP,{hidden_reference:!0,mdxType:"BaseActorFunctions"}),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)(s.ZP,{hidden_reference:!0,mdxType:"BaseActorEvents"}),(0,i.kt)("h2",{id:"static-functions-detailed"},"Static Functions Detailed"),(0,i.kt)("h3",{id:"getall"},(0,i.kt)("inlineCode",{parentName:"h3"},"GetAll")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Returns a table containing all Actors of the class this is called on")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local entities_copy = Player.GetAll()\nentities_copy[1] -- Player 1\nentities_copy[5] -- Player 5\n")),(0,i.kt)("h3",{id:"getbyindex"},(0,i.kt)("inlineCode",{parentName:"h3"},"GetByIndex")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Returns a specific ",(0,i.kt)("a",{parentName:"p",href:"actor"},"Actor")," of this class at an index")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local first_character = Character.GetByIndex(1)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"index"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the Actor")))),(0,i.kt)("h3",{id:"getcount"},(0,i.kt)("inlineCode",{parentName:"h3"},"GetCount")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Returns how many Actors of this class exist")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local player_count = Player.GetCount()\n")),(0,i.kt)("h3",{id:"getpairs"},(0,i.kt)("inlineCode",{parentName:"h3"},"GetPairs")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Returns an iterator with all Actors of this class to be used with ",(0,i.kt)("inlineCode",{parentName:"p"},"pairs()"),". This is a more performant method than ",(0,i.kt)("inlineCode",{parentName:"p"},"GetAll()"),", as it will return the iterator to access the Actors directly instead of creating and returning a copy of the Actors table."),(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note:")," Destroying Actors from inside a GetPairs() loop will cause the iterable to change size during the process. If you want to loop-and-destroy, please use ",(0,i.kt)("inlineCode",{parentName:"p"},"GetAll()"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'for k, player in pairs(Player.GetPairs()) do\n    Package.Log(player:GetName() .. " is connected!")\nend\n')),(0,i.kt)("h2",{id:"functions-detailed"},"Functions Detailed"),(0,i.kt)("h3",{id:"addimpulse"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"AddImpulse")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Applies a force in world world to this Actor (the force is applied client side, by, in most cases, the player closest to this Actor)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:AddImpulse(force, velocity_change)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Vector,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"force"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Force to apply")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"velocity_change"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to ignore mass")))),(0,i.kt)("h3",{id:"attachto"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"AttachTo")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Attaches this Actor to any other Actor, optionally at a specific bone"),(0,i.kt)("ul",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"AttachmentRule.KeepRelative"))," will keep the current relative position/rotation if already attached."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"AttachmentRule.KeepWorld"))," will calculate the new relative position/rotation so the Actor stays at the same position after being attached."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"AttachmentRule.SnapToTarget"))," will set the Actor to the same position/rotation as ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"other_actor"))," (or at the bone location) and reset its relative position/rotation to ",(0,i.kt)("strong",{parentName:"li"},"zero"),".")),(0,i.kt)("p",{parentName:"blockquote"},"Setting ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"lifespan_when_detached"))," to ",(0,i.kt)("inlineCode",{parentName:"p"},"0")," will automatically destroy this actor when detached, setting it to ",(0,i.kt)("inlineCode",{parentName:"p"},"10")," will destroy this after 10 seconds when detached.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:AttachTo(other_actor, attachment_rule, bone_name, lifespan_when_detached, use_absolute_rotation)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"actor"},"Actor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"other"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Other actor to attach")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Yb,{mdxType:"Enums"},"AttachmentRule")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"attachment_rule"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"SnapToTarget")),(0,i.kt)("td",{parentName:"tr",align:"left"},"How to attach")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.String,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"bone_name"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},'""')),(0,i.kt)("td",{parentName:"tr",align:"left"},"Which bone to attach to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"lifespan_when_detached"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"-1")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Seconds before destroying this Actor when detached")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"use_absolute_rotation"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to force attached object to use absolute rotation (will not follow parent)")))),(0,i.kt)("h3",{id:"destroy"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"Destroy")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Destroys this Actor")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:Destroy()\n")),(0,i.kt)("h3",{id:"detach"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"Detach")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Detaches this Actor from AttachedTo Actor")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:Detach()\n")),(0,i.kt)("h3",{id:"setcollision"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetCollision")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets this Actor's collision type")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetCollision(collision_type)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Yb,{mdxType:"Enums"},"CollisionType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"collision_type"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Collision Type")))),(0,i.kt)("h3",{id:"setforce"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetForce")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Adds a permanent force to this Actor, set to Vector(0, 0, 0) to cancel")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetForce(force, is_local)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Vector,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"force"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Force to apply")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"is_local"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether to apply the force at local space")))),(0,i.kt)("h3",{id:"setgravityenabled"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetGravityEnabled")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets whether gravity is enabled on this Actor")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetGravityEnabled(is_enabled)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"is_enabled"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"})))),(0,i.kt)("h3",{id:"setvisibility"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetVisibility")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets whether the actor is visible or not")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetVisibility(is_visible)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"is_visible"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"})))),(0,i.kt)("h3",{id:"sethighlightenabled"},(0,i.kt)(o.aj.ClientOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetHighlightEnabled")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets whether the highlight is enabled on this Actor, and which highlight index to use")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetHighlightEnabled(is_enabled, index)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"is_enabled"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether the highlight should be enabled")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"index"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Index to use (should be ",(0,i.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),")")))),(0,i.kt)("h3",{id:"setoutlineenabled"},(0,i.kt)(o.aj.ClientOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetOutlineEnabled")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets whether the outline is enabled on this Actor, and which outline index to use")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetOutlineEnabled(is_enabled, index)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"is_enabled"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether the outline should be enabled")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"index"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Index to use (should be ",(0,i.kt)("inlineCode",{parentName:"td"},"0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),")")))),(0,i.kt)("h3",{id:"setlifespan"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetLifeSpan")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets the time (in seconds) before this Actor is destroyed. After this time has passed, the actor will be automatically destroyed.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetLifeSpan(seconds)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"seconds"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Seconds before being destroyed")))),(0,i.kt)("h3",{id:"setlocation"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetLocation")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets this Actor's location in the game world")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetLocation(vector)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Vector,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"location"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"New location")))),(0,i.kt)("h3",{id:"setnetworkauthority"},(0,i.kt)(o.aj.ServerOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetNetworkAuthority")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets the Player to have network authority over this Actor. This Player will be manually assigned to handle this Actor's physics and share its location with other clients. The authority assignment will still be overridden by the game automatically"),(0,i.kt)("p",{parentName:"blockquote"},"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"/pt-BR/docs/core-concepts/scripting/authority-concepts#network-authority"},"Network Authority")," for more information")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetNetworkAuthority(player)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"Player"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"player"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nil")),(0,i.kt)("td",{parentName:"tr",align:"left"},"New player which will assume the Network Authority of this Actor")))),(0,i.kt)("h3",{id:"setrotation"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetRotation")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets this Actor's rotation in the game world")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetRotation(rotator)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Rotator,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"rotation"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"New rotation")))),(0,i.kt)("h3",{id:"setrelativelocation"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetRelativeLocation")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets this Actor's relative location in local space (only if this actor is attached)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetRelativeLocation(relative_location)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Vector,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"relative_location"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"New relative location")))),(0,i.kt)("h3",{id:"setrelativerotation"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetRelativeRotation")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets this Actor's relative rotation in local space (only if this actor is attached)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetRelativeRotation(relative_rotation)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Rotator,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"relative_rotation"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"New relative rotation")))),(0,i.kt)("h3",{id:"setscale"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetScale")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets this Actor's scale")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetScale(vector)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Vector,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"scale"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"New scale")))),(0,i.kt)("h3",{id:"setvalue"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"SetValue")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Sets a value in this Actor, which can be accessed by any package (optionally sync on clients if called from server)"),(0,i.kt)("p",{parentName:"blockquote"},"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"/pt-BR/docs/core-concepts/scripting/entity-values"},"Entity Values")," for more information")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:SetValue(key, value, sync_on_clients)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.String,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"key"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Key")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Any,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"value"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Value")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Boolean,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"sync_on_clients"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"false")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Server side parameter, if enabled will sync this value with all clients")))),(0,i.kt)("h3",{id:"translateto"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"TranslateTo")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Smoothly moves this actor to a location during a certain time")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:TranslateTo(location, time, exp)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Vector,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"location"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Location to translate to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"time"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Time to interp from current location to target location")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"exp"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Exponential used to smooth interp, use ",(0,i.kt)("inlineCode",{parentName:"td"},"0")," for linear movement")))),(0,i.kt)("h3",{id:"rotateto"},(0,i.kt)(o.aj.AuthorityOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"RotateTo")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Smoothly rotates this Actor to an angle during a certain time")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:RotateTo(rotation, time, exp)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.Ut.Rotator,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"rotation"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Angle to rotate to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"time"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Time to interp from current rotation to target rotation")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Number,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"exp"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"0")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Exponential used to smooth interp, use ",(0,i.kt)("inlineCode",{parentName:"td"},"0")," for linear movement")))),(0,i.kt)("h3",{id:"isbeingdestroyed"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"IsBeingDestroyed")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets if this Actor is being destroyed (you can check this inside events like ",(0,i.kt)("inlineCode",{parentName:"p"},"Drop")," to see if a Pickable is being dropped because it's going to be destroyed)"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Boolean,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:IsBeingDestroyed()\n")),(0,i.kt)("h3",{id:"isvisible"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"IsVisible")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets whether this actor is visible"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Boolean,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:IsVisible()\n")),(0,i.kt)("h3",{id:"isgravityenabled"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"IsGravityEnabled")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets whether gravity is enabled on this Actor"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Boolean,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:IsGravityEnabled()\n")),(0,i.kt)("h3",{id:"isinwater"},(0,i.kt)("inlineCode",{parentName:"h3"},"IsInWater")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets if this Actor is in water"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Boolean,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:IsInWater()\n")),(0,i.kt)("h3",{id:"isnetworkdistributed"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"IsNetworkDistributed")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets if this Actor is currently network distributed. Only actors being network distributed can have their network authority set Entities have NetworkDistributed automatically disabled when: Attached, Possessed, Grabbed, Picked Up or Driving"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Boolean,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:IsNetworkDistributed()\n")),(0,i.kt)("h3",{id:"isvalid"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"IsValid")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets if this Actor is valid (i.e. wasn't destroyed and points to a valid Actor)"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Boolean,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:IsValid()\n")),(0,i.kt)("h3",{id:"getattachedentities"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetAttachedEntities")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets all Actors attached to this Actor"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Table,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetAttachedEntities()\n")),(0,i.kt)("h3",{id:"getattachedto"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetAttachedTo")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets the Actor this Actor is attached to"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Any,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetAttachedTo()\n")),(0,i.kt)("h3",{id:"getbounds"},(0,i.kt)(o.aj.ClientOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetBounds")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets this Actor's bounds"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Table,null)," in the format ",(0,i.kt)("inlineCode",{parentName:"p"},'{"Origin", "BoxExtent", "SphereRadius"}'))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetBounds()\n")),(0,i.kt)("h3",{id:"getcollision"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetCollision")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets this Actor's collision type"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Number,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetCollision()\n")),(0,i.kt)("h3",{id:"getid"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetID")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets the universal network ID of this Actor (same on both client and server)"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Number,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetID()\n")),(0,i.kt)("h3",{id:"getlocation"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetLocation")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets this Actor's location in the game world"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.Ut.Vector,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetLocation()\n")),(0,i.kt)("h3",{id:"getrotation"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetRotation")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets this Actor's angle in the game world"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.Ut.Rotator,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetRotation()\n")),(0,i.kt)("h3",{id:"getforce"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetForce")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets this Actor's force (set by SetForce)"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.Ut.Vector,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetForce()\n")),(0,i.kt)("h3",{id:"hasnetworkauthority"},(0,i.kt)(o.aj.ClientOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"HasNetworkAuthority")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets if the LocalPlayer is currently the Network Authority of this Actor"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Boolean,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:HasNetworkAuthority()\n")),(0,i.kt)("h3",{id:"hasauthority"},(0,i.kt)(o.aj.ClientOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"HasAuthority")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets if this Actor was spawned by the client side. Returns false if it was spawned by the Server or true if it was spawned by the client"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Boolean,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:HasAuthority()\n")),(0,i.kt)("h3",{id:"getscale"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetScale")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets this Actor's scale"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.Ut.Vector,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetScale()\n")),(0,i.kt)("h3",{id:"gettype"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetType")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets the type of this Actor"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.String,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetType()\n")),(0,i.kt)("h3",{id:"getvalue"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetValue")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets a value stored on this Actor at the given key. Please refer to ",(0,i.kt)("a",{parentName:"p",href:"/pt-BR/docs/core-concepts/scripting/entity-values"},"Entity Values")," for more information"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Any,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetValue(key, fallback)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.String,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"key"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Key")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Any,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"fallback"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Fallback value if key doesn't exist")))),(0,i.kt)("h3",{id:"getvelocity"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetVelocity")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Returns this Actor's current velocity"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.Ut.Vector,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetVelocity()\n")),(0,i.kt)("h3",{id:"addactortag"},(0,i.kt)(o.aj.ClientOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"AddActorTag")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Adds an Unreal Actor Tag to this Actor")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:AddActorTag(tag)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.String,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"tag"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"})))),(0,i.kt)("h3",{id:"removeactortag"},(0,i.kt)(o.aj.ClientOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"RemoveActorTag")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Remove an Unreal Actor Tag from this Actor")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:RemoveActorTag(tag)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.String,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"tag"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"})))),(0,i.kt)("h3",{id:"getactortags"},(0,i.kt)(o.aj.ClientOnly,null),(0,i.kt)("inlineCode",{parentName:"h3"},"GetActorTags")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gets all Unreal Actor Tags from this Actor"),(0,i.kt)("p",{parentName:"blockquote"},"Returns ",(0,i.kt)(o.rt.Table,null))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:GetActorTags()\n")),(0,i.kt)("h3",{id:"subscribe"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"Subscribe")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Subscribes to an Event")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:Subscribe(event_name, callback)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.String,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"event_name"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Name of the event to subscribe to")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Function,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"function"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Event callback")))),(0,i.kt)("h3",{id:"unsubscribe"},(0,i.kt)(o.aj.Both,null),(0,i.kt)("inlineCode",{parentName:"h3"},"Unsubscribe")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Unsubscribes all callbacks from this Event in this Actor within this Package, optionally passing the function to unsubscribe only that callback")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"entity:Unsubscribe(event_name, callback)\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default Value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.String,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"event_name"))),(0,i.kt)("td",{parentName:"tr",align:"left"}),(0,i.kt)("td",{parentName:"tr",align:"left"},"Name of the event to unsubscribe from")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Function,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("strong",{parentName:"td"},(0,i.kt)("inlineCode",{parentName:"strong"},"function"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"nil")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Optional callback to unsubscribe")))),(0,i.kt)("h2",{id:"events-detailed"},"Events Detailed"),(0,i.kt)("h3",{id:"destroy-1"},(0,i.kt)("inlineCode",{parentName:"h3"},"Destroy")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Triggered when an Actor is destroyed")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'Vehicle.Subscribe("Destroy", function(self)\n    -- called when any vehicle is destroyed\nend)\n')),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"actor"},"Actor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"self")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Actor which has been destroyed")))),(0,i.kt)("h3",{id:"spawn"},(0,i.kt)("inlineCode",{parentName:"h3"},"Spawn")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Triggered when an Actor is spawned/created")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'Vehicle.Subscribe("Spawn", function(self)\n    -- called when a vehicle is spawned\nend)\n')),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"actor"},"Actor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"self")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Actor which has been spawned")))),(0,i.kt)("h3",{id:"valuechange"},(0,i.kt)("inlineCode",{parentName:"h3"},"ValueChange")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Triggered when an Actor has a value changed with ",(0,i.kt)("inlineCode",{parentName:"p"},":SetValue()"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'Vehicle.Subscribe("ValueChange", function(self, key, value)\n    -- called when any Vehicle had it\'s value changed with :SetValue()\nend)\n')),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"actor"},"Actor")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"self")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The Actor that just had a value changed")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.String,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"key")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The key used")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)(o.rt.Any,null)),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The value changed")))))}y.isMDXComponent=!0},68088:function(e){e.exports=JSON.parse('{"name":"Billboard","description":"A Billboard is a 2D Material that will be rendered always facing the camera.","authority":"client","inheritance":["Actor","Paintable"],"constructor":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"MaterialPath","name":"material_asset","default":""}]}')},22551:function(e){e.exports=JSON.parse('{"name":"Blueprint","description":"A Blueprint Class allows spawning any Unreal Blueprint Actor in nanos world.","authority":"both","inheritance":["Actor","Paintable"],"constructor":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"BlueprintPath","name":"blueprint_asset","default":""}],"functions":[{"name":"CallBlueprintEvent","description":"Calls a Blueprint Event or Function","authority":"both","parameters":[{"type":"string","name":"event_name","description":"Event or Function name"},{"type":"any","name":"arguments...","default":"nil","description":"Sequence of arguments to pass to the event"}]}]}')},2627:function(e){e.exports=JSON.parse('{"name":"Cable","description":"A Cable represents a Physics Constraint which joins two Actors with a rope-like visual representation between them.","authority":"server","inheritance":["Actor","Paintable"],"constructor":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"boolean","name":"enable_visuals","default":"true","description":"Toggles the cable visuals"}],"functions":[{"authority":"server","name":"AttachStartTo","description":"Attached the beginning of this cable to another Actor at a specific bone or relative location","parameters":[{"type":"Actor","name":"other","description":""},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)","description":""},{"type":"string","name":"bone_name","default":"","description":""}]},{"authority":"server","name":"AttachEndTo","description":"Attached the end of this cable to another Actor at a specific bone or relative location","parameters":[{"type":"Actor","name":"other","description":""},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)","description":""},{"type":"string","name":"bone_name","default":"","description":""}]},{"authority":"server","name":"DetachEnd","description":"Detaches the End of this Cable"},{"authority":"server","name":"DetachStart","description":"Detaches the Start of this Cable"},{"authority":"both","name":"SetCableSettings","description":"Set the overall settings for this cable (visuals only)","parameters":[{"type":"number","name":"length","description":"Rest length of the cable. Default is 100"},{"type":"number","name":"num_segments","description":"How many segments the cable has. Default is 10"},{"type":"number","name":"solver_iterations","description":"The number of solver iterations controls how \'stiff\' the cable is. Default is 0"}]},{"authority":"both","name":"SetForces","description":"Set the forces the cable has applied (visuals only)","parameters":[{"type":"Vector","name":"force","description":"Force vector (world space) applied to all particles in cable. Default is Vector(0, 0, 0)"},{"type":"number","name":"gravity_scale","default":"1","description":"Scaling applied to world gravity affecting this cable. Default is 1"}]},{"authority":"server","name":"SetAngularLimits","description":"Sets the Physics Angular Limits of this cable","parameters":[{"type":"ConstraintMotion","name":"swing_1_motion","description":"Indicates whether the Swing1 limit is used"},{"type":"ConstraintMotion","name":"swing_2_motion","description":"Indicates whether the Swing2 limit is used"},{"type":"ConstraintMotion","name":"twist_motion","description":"Indicates whether the Twist limit is used"},{"type":"number","name":"swing_1_limit","default":"0","description":"Angle of movement along the XY plane. This defines the first symmetric angle of the cone"},{"type":"number","name":"swing_2_limit","default":"0","description":"Angle of movement along the XZ plane. This defines the second symmetric angle of the cone"},{"type":"number","name":"twist_limit","default":"0","description":"Symmetric angle of roll along the X-axis"}]},{"authority":"server","name":"SetLinearLimits","description":"Sets the Physics Linear Limits of this cable","description_long":"Sets the Physics Linear Limits of this cable. If use_soft_constraint is enabled, then stiffness and damping will be used, otherwise restitution will be used.","parameters":[{"type":"ConstraintMotion","name":"x_motion","description":"Indicates the linear constraint applied along the X-axis. Free implies no constraint at all. Locked implies no movement along X is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"ConstraintMotion","name":"y_motion","description":"Indicates the linear constraint applied along the Y-axis. Free implies no constraint at all. Locked implies no movement along Y is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"ConstraintMotion","name":"z_motion","description":"Indicates the linear constraint applied along theZX-axis. Free implies no constraint at all. Locked implies no movement along Z is allowed. Limited implies the distance in the joint along all active axes must be less than the Distance provided"},{"type":"number","name":"limit","default":"0","description":"The distance allowed between between the two joint reference frames. Distance applies on all axes enabled (one axis means line, two axes implies circle, three axes implies sphere)"},{"type":"number","name":"restitution","default":"0","description":"Controls the amount of bounce when the constraint is violated. A restitution value of 1 will bounce back with the same velocity the limit was hit. A value of 0 will stop dead"},{"type":"boolean","name":"use_soft_constraint","default":"false","description":"Whether we want to use a soft constraint (spring)"},{"type":"number","name":"stiffness","default":"0","description":"Stiffness of the soft constraint. Only used when Soft Constraint is on"},{"type":"number","name":"damping","default":"0","description":"Damping of the soft constraint. Only used when Soft Constraint is on"}]},{"authority":"both","name":"SetRenderingSettings","description":"Set the rendering settings of this cable (visuals only)","parameters":[{"type":"number","name":"width","description":"How wide the cable geometry is. Default is 6"},{"type":"number","name":"num_sides","description":"Number of sides of the cable geometry. Default is 4"},{"type":"number","name":"tile_material","description":"How many times to repeat the material along the length of the cable. Default is 1"}]},{"authority":"both","name":"GetAttachedStartTo","description":"Gets the Actor attached to Start","return":{"type":"Actor","description":"the Actor or nil"}},{"authority":"both","name":"GetAttachedEndTo","description":"Gets the Actor attached to End","return":{"type":"Actor","description":"the Actor or nil"}}]}')},60080:function(e){e.exports=JSON.parse('{"name":"Character","description":"Characters represents Actors which can be possessed, can move and interact with world. They are the default Skeletal Mesh Character built for nanos world.","authority":"server","inheritance":["Actor","Paintable"],"constructor":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"SkeletalMeshPath","name":"skeletal_mesh","default":"nanos-world::SK_Mannequin"},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"},{"type":"boolean","name":"gravity_enabled","default":"true"},{"type":"number","name":"health/max_health","default":"100","description":"Current and Max Health"},{"type":"SoundPath","name":"death_sound","default":"nanos-world::A_Male_01_Death","description":"Played when Character dies"},{"type":"SoundPath","name":"pain_sound","default":"nanos-world::A_Male_01_Pain","description":"Played when Character takes damage"}],"functions":[{"authority":"server","name":"ApplyDamage","return":{"type":"number","description":"the damage applied"},"description":"Do damage to a character","description_long":"Do damage to a character, will trigger all related events and apply modified damage based on bone. Also will apply impulse if it\'s a heavy explosion","parameters":[{"type":"number","name":"damage","description":""},{"type":"string","name":"bone_name","default":"","description":""},{"type":"DamageType","name":"damage_type","default":"DamageType.Shot","description":""},{"type":"Vector","name":"from_direction","default":"Vector(0, 0, 0)","description":""},{"type":"Player","name":"instigator","default":"nil","description":"The player which caused the damage"},{"type":"any","name":"causer","default":"nil","description":"The object which caused the damage"}]},{"authority":"both","name":"AddSkeletalMeshAttached","description":"Spawns and Attaches a SkeletalMesh into this Character","description_long":"Spawns and Attaches a SkeletalMesh into this Character, the SkeletalMesh must have the same Skeletal used by the Character Mesh, and will follow all animations from it. Uses a custom ID to be used for removing it further.<br/><br/>For customizing the Materials specific of a SkeletalMeshAttached, please use the following syntax in the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset","default":"","description":""}]},{"authority":"both","name":"AddStaticMeshAttached","description":"Spawns and Attaches a StaticMesh into this Character","description_long":"Spawns and Attaches a StaticMesh into this Character in a Socket with relative Location and Rotation. Uses a custom ID to be used for removing it further<br/><br/>For customizing the Materials specific of a StaticMeshAttached, please use the following syntax as the <code>parameter_name</codein the Paintable methods: <code>attachable///[ATTACHABLE_ID]/[PARAMETER_NAME]</code>, where [ATTACHABLE_ID] is the ID of the Attachable, and [PARAMETER_NAME] is the name of the parameter you want to change.","parameters":[{"type":"string","name":"id","description":"Used further for removing or applying material settings on it"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":"","description":""},{"type":"string","name":"socket","default":"","description":""},{"type":"Vector","name":"relative_location","default":"Vector(0, 0, 0)","description":""},{"type":"Rotator","name":"relative_rotation","default":"Rotator(0, 0, 0)","description":""}]},{"authority":"server","name":"Drop","description":"Drops any Pickable the Character is holding","parameters":[]},{"authority":"server","name":"EnterVehicle","description":"Enters the Vehicle at Seat (0 - Driver)","parameters":[{"type":"Vehicle","name":"vehicle","description":""},{"type":"number","name":"seat","default":"0","description":""}]},{"authority":"server","name":"GrabProp","description":"Gives a Prop to the Character","parameters":[{"type":"Prop","name":"prop","description":""}]},{"authority":"both","name":"HideBone","description":"Hides a bone of this Character","description_long":"Hides a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","default":"","description":"Bone to hide"}]},{"authority":"both","name":"UnHideBone","description":"UnHide a bone of this Character","description_long":"UnHide a bone of this Character.<br/><br/>Check <a href=\'character.mdx#characters-skeleton-bone-names\'>Bone Names List</a>","parameters":[{"type":"string","name":"bone_name","description":"Bone to unhide"}]},{"authority":"both","name":"IsBoneHidden","return":{"type":"boolean","description":"if the bone is hidden"},"description":"Gets if a bone is hidden","parameters":[{"type":"string","name":"bone_name","description":"Bone to check"}]},{"authority":"server","name":"Jump","description":"Triggers this Character to jump"},{"authority":"server","name":"LeaveVehicle","description":"Leaves the current Vehicle"},{"authority":"server","name":"LookAt","description":"AI: Tries to make this Character to look at Location","parameters":[{"type":"Vector","name":"location","description":"World location to look"}]},{"authority":"server","name":"MoveTo","description":"AI: Makes this Character to walk to the Location","description_long":"AI: Makes this Character to walk to the Location<br/><br/>Triggers event <a href=\'character#movecompleted\'>MoveCompleted</a>","parameters":[{"type":"Vector","name":"location","description":""},{"type":"number","name":"acceptance_radius","default":"50","description":""}]},{"authority":"server","name":"Follow","description":"AI: Makes this Character to follow another actor","description_long":"AI: Makes this Character to follow another actor<br/><br/>Triggers event <a href=\'character#movecompleted\'>MoveCompleted</a>","parameters":[{"type":"Actor","name":"actor","description":"Actor to follow"},{"type":"number","name":"acceptance_radius","default":"50","description":"Radius to consider success"},{"type":"boolean","name":"stop_on_succeed","default":"false","description":"Whether to stop when reaching the target"},{"type":"boolean","name":"stop_on_fail","default":"false","description":"Whether to stop when failed to reach the target"},{"type":"number","name":"update_rate","default":"0.25","description":"How often to recalculate the AI path"}]},{"authority":"server","name":"StopMovement","description":"AI: Stops the movement","description_long":"AI: Stops the movement<br/><br/>Triggers event [MoveCompleted](character#movecompleted)"},{"authority":"server","name":"PickUp","description":"Gives a Melee/Grenade/Weapon (Pickable) to the Character","parameters":[{"type":"Pickable","name":"pickable","description":""}]},{"authority":"server","name":"PlayAnimation","description":"Plays an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_path","description":""},{"type":"AnimationSlotType","name":"slot_type","default":"AnimationSlotType.FullBody","description":""},{"type":"boolean","name":"loop_indefinitely","default":"false","description":""},{"type":"number","name":"blend_in_time","default":"0.25","description":""},{"type":"number","name":"blend_out_time","default":"0.25","description":""},{"type":"number","name":"play_rate","default":"1.0","description":""},{"type":"boolean","name":"stop_all_montages","default":"false","description":"Stops all running Montages from the same Group"}]},{"authority":"both","name":"RemoveSkeletalMeshAttached","description":"Removes, if existing, a SkeletalMesh from this Character given it\'s custom ID","parameters":[{"type":"string","name":"id","description":""}]},{"authority":"both","name":"RemoveStaticMeshAttached","description":"Removes, if existing, a StaticMesh from this Character given it\'s custom ID","parameters":[{"type":"string","name":"id","description":""}]},{"authority":"both","name":"RemoveAllStaticMeshesAttached","description":"Removes all StaticMeshes attached"},{"authority":"both","name":"RemoveAllSkeletalMeshesAttached","description":"Removes all SkeletalMeshes attached"},{"authority":"server","name":"Respawn","description":"Respawns the Character, fullying it\'s Health and moving it to it\'s Initial Location","parameters":[{"type":"Vector","name":"location","default":"initial location","description":"If not passed will use the initial location passed when the Character spawned"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)","description":""}]},{"authority":"server","name":"SetAccelerationSettings","description":"Sets the Movement Max Acceleration of this Character","parameters":[{"type":"number","name":"walking","default":"768","description":""},{"type":"number","name":"parachuting","default":"512","description":""},{"type":"number","name":"skydiving","default":"768","description":""},{"type":"number","name":"falling","default":"128","description":""},{"type":"number","name":"swimming","default":"256","description":""},{"type":"number","name":"swimming_surface","default":"256","description":""},{"type":"number","name":"flying","default":"1024","description":""}]},{"authority":"server","name":"SetBrakingSettings","description":"Sets the Movement Braking Settings of this Character","parameters":[{"type":"number","name":"ground_friction","default":"2","description":""},{"type":"number","name":"braking_friction_factor","default":"2","description":""},{"type":"number","name":"braking_walking","default":"96","description":""},{"type":"number","name":"braking_flying","default":"3000","description":""},{"type":"number","name":"braking_swimming","default":"10","description":""},{"type":"number","name":"braking_falling","default":"0","description":""}]},{"authority":"server","name":"SetCameraMode","description":"Sets the Camera Mode","description_long":"Sets the Camera Mode (i.e. Only TPS, FPS or if allow both)<br/><br/>Using FPSOnly CameraMode on AI will lock his body rotation (when using LookAt)","parameters":[{"type":"CameraMode","name":"camera_mode","description":""}]},{"authority":"client","name":"SetCameraOffset","description":"Sets the Camera Offset (only affects TPS)","parameters":[{"type":"Vector","name":"camera_offset","description":""}]},{"authority":"server","name":"SetCanCrouch","description":"Sets if this Character is allowed to Crouch and to Prone","parameters":[{"type":"boolean","name":"can_crouch","description":""}]},{"authority":"server","name":"SetCanAim","description":"Sets if this Character is allowed to Aim","parameters":[{"type":"boolean","name":"can_aim","description":""}]},{"authority":"server","name":"SetCanDrop","description":"Sets if this Character is allowed to Drop the Picked up item","parameters":[{"type":"boolean","name":"can_drop","description":""}]},{"authority":"server","name":"SetCanSprint","description":"Sets if this Character is allowed to Sprint","parameters":[{"type":"boolean","name":"can_sprint","description":""}]},{"authority":"server","name":"SetCanGrabProps","description":"Sets if this Character is allowed to Grab any Prop","parameters":[{"type":"boolean","name":"can_grab_props","description":""}]},{"authority":"server","name":"SetCanPickupPickables","description":"Sets if this Character is allowed to Pick up any Pickable (Weapon, Grenade, Melee...)","parameters":[{"type":"boolean","name":"can_pickup","description":""}]},{"authority":"server","name":"SetCanPunch","description":"Sets if this Character is allowed to Punch","parameters":[{"type":"boolean","name":"can_punch","description":""}]},{"authority":"server","name":"SetCanDeployParachute","description":"Sets if this Character is allowed to deploy the Parachute","parameters":[{"type":"boolean","name":"can_deploy_parachute","description":""}]},{"authority":"server","name":"SetCapsuleSize","description":"Sets this Character\'s Capsule size","description_long":"Sets this Character\'s Capsule size (will affect Camera location and Character\'s collision)","parameters":[{"type":"boolean","name":"radius","description":"Default is 42"},{"type":"boolean","name":"half_height","description":"Default is 96"}]},{"authority":"server","name":"SetDamageMultiplier","description":"Changes how much damage this character takes on specific bones","parameters":[{"type":"string","name":"bone_name","description":""},{"type":"number","name":"multiplier","description":""}]},{"authority":"server","name":"SetDeathSound","description":"Changes the Death sound when Character dies","parameters":[{"type":"string","name":"sound_asset","description":""}]},{"authority":"server","name":"SetFallDamageTaken","description":"Set the Fall Damage multiplier taken when falling from High places","description_long":"Set the Fall Damage multiplier taken when falling from High places.<br/><br/>Setting to 0 will make the Character to do not take damage or enter ragdoll mode","parameters":[{"type":"number","name":"damage","description":"Default is 10"}]},{"authority":"server","name":"SetFlyingMode","description":"Sets the Flying Mode","parameters":[{"type":"boolean","name":"flying_mode","description":""}]},{"authority":"server","name":"SetFOVMultiplier","description":"Sets the Field of View multiplier","parameters":[{"type":"number","name":"multiplier","description":""}]},{"authority":"server","name":"SetHighFallingTime","description":"Sets time to transition to HighFalling state","description_long":"Sets time elapsed until automatically transition to HighFalling state (from SmallFalling) in seconds","parameters":[{"type":"number","name":"time","description":"Default is 1 second"}]},{"authority":"server","name":"SetGaitMode","description":"Sets the Gait Mode","parameters":[{"type":"GaitMode","name":"mode","description":""}]},{"authority":"server","name":"SetGravityScale","description":"Changes the Gravity Scale","description_long":"Changes the Gravity Scale of this Character (can be negative)","parameters":[{"type":"number","name":"scale","description":""}]},{"authority":"server","name":"SetHealth","description":"Sets the Health of this Character","description_long":"Sets the Health of this Character. You can only call it on alive characters (call Respawn first)","parameters":[{"type":"number","name":"new_health","description":""}]},{"authority":"server","name":"SetImpactDamageTaken","description":"Set the Impact Damage taken when being roamed by things","description_long":"Set the Impact Damage taken when being roamed by things.<br/><brq>Setting to 0 will make the Character to do not take damage or enter ragdoll mode","parameters":[{"type":"number","name":"damage","description":"Default is 10"}]},{"authority":"server","name":"SetInvulnerable","description":"Sets if the Character can receive any damage","parameters":[{"type":"boolean","name":"is_invulnerable","description":""}]},{"authority":"server","name":"SetJumpZVelocity","description":"Sets the velocity of the jump","parameters":[{"type":"number","name":"velocity","description":"Default is 450"}]},{"authority":"server","name":"SetMaxHealth","description":"Sets the MaxHealth of this Character","parameters":[{"type":"number","name":"new_max_health","description":""}]},{"authority":"server","name":"SetMesh","description":"Changes the Character Mesh on the fly","parameters":[{"type":"SkeletalMeshPath","name":"skeletal_mesh_asset","description":""}]},{"authority":"both","name":"SetMorphTarget","description":"Set Morph Target with Name and Value","parameters":[{"type":"string","name":"name","description":"Morph Target Name"},{"type":"number","name":"value","description":""}]},{"authority":"both","name":"GetMorphTarget","description":"Returns the value of a Morph Target","return":{"type":"number","description":"value of the Morph Target"},"parameters":[{"type":"string","name":"name","description":"Morph Target Name"}]},{"authority":"both","name":"ClearMorphTargets","description":"Clear all Morph Target that are set to this Mesh"},{"authority":"client","name":"GetAllMorphTargetNames","description":"Returns a table with all morph targets available","return":{"type":"table","description":"table with all morph targets available"}},{"authority":"both","name":"SetPhysicalAnimationSettings","description":"Applies the physical animation settings to the body given","parameters":[{"type":"string","name":"bone","description":"The body we will be driving"},{"type":"boolean","name":"include_self","description":"Whether to modify the given body"},{"type":"boolean","name":"is_local_simulation","description":"Whether the drive targets are in world space or local"},{"type":"boolean","name":"orientation_strength","default":"0","description":"The strength used to correct orientation error"},{"type":"boolean","name":"angular_velocity_strength","default":"0","description":"The strength used to correct angular velocity error"},{"type":"boolean","name":"position_strength","default":"0","description":"The strength used to correct linear position error. Only used for non-local simulation"},{"type":"boolean","name":"velocity_strength","default":"0","description":"The strength used to correct linear velocity error. Only used for non-local simulation"},{"type":"boolean","name":"max_linear_force","default":"0","description":"The max force used to correct linear errors"},{"type":"boolean","name":"max_angular_force","default":"0","description":"The max force used to correct angular errors"}]},{"authority":"both","name":"ResetPhysicalAnimationSettings","description":"Resets all Physical Animation settings"},{"authority":"server","name":"SetMovementEnabled","description":"Enables/Disables Character\'s Movement","parameters":[{"type":"boolean","name":"is_movement_enabled","description":""}]},{"authority":"server","name":"SetParachuteTexture","description":"Changes the Parachute Texture","parameters":[{"type":"ImagePath","name":"texture","description":""}]},{"authority":"server","name":"SetPainSound","description":"Changes the Pain sound when Character takes damage","parameters":[{"type":"SoundPath","name":"sound_asset","description":""}]},{"authority":"server","name":"SetPunchDamage","description":"Set the Punch Damage this Character will apply on others","parameters":[{"type":"number","name":"damage","description":"Default is 15"}]},{"authority":"server","name":"SetRagdollMode","description":"Sets Character Ragdoll Mode","parameters":[{"type":"boolean","name":"ragdoll_enabled","description":""}]},{"authority":"server","name":"SetSpeedMultiplier","description":"Sets all speed multiplier","parameters":[{"type":"number","name":"multiplier","description":"1 is normal"}]},{"authority":"server","name":"SetStanceMode","description":"Sets the Stance Mode","parameters":[{"type":"StanceMode","name":"mode","description":""}]},{"authority":"server","name":"SetTeam","description":"Sets a Team which will disable damaging same Team Members","parameters":[{"type":"number","name":"team","description":"0 is neutral and default"}]},{"authority":"server","name":"SetViewMode","description":"Sets the View Mode","parameters":[{"type":"ViewMode","name":"view_mode","description":""}]},{"authority":"server","name":"SetWeaponAimMode","description":"Sets the Weapon\'s Aim Mode","parameters":[{"type":"AimMode","name":"aim_mode","description":""}]},{"authority":"server","name":"StopAnimation","description":"Stops an Animation Montage on this character","parameters":[{"type":"AnimationPath","name":"animation_asset","description":""}]},{"authority":"server","name":"UnGrabProp","description":"UnGrabs/Drops the Prop the Character is holding"},{"authority":"both","name":"IsInRagdollMode","description":"Gets if Character is in ragdoll mode","return":{"type":"boolean","description":"if it\'s in ragdoll mode"}},{"authority":"both","name":"IsInvulnerable","description":"Gets if is invulnerable","return":{"type":"boolean","description":"if is invulnerable"}},{"authority":"both","name":"IsMovementEnabled","description":"Gets if has movement enabled","return":{"type":"boolean","description":"if has movement enabled"}},{"authority":"both","name":"GetCameraMode","description":"Gets the camera mode","return":{"type":"CameraMode","description":"the camera mode"}},{"authority":"both","name":"GetCanDrop","description":"Gets if can drop","return":{"type":"boolean","description":"if can drop"}},{"authority":"both","name":"GetCanPunch","description":"Gets if can punch","return":{"type":"boolean","description":"if can punch"}},{"authority":"both","name":"GetCanAim","description":"Gets if can aim","return":{"type":"boolean","description":"if can aim"}},{"authority":"both","name":"GetCanCrouch","description":"Gets if can crouch","return":{"type":"boolean","description":"if can crouch"}},{"authority":"both","name":"GetCanSprint","description":"Gets if can sprint","return":{"type":"boolean","description":"if can sprint"}},{"authority":"both","name":"GetCanGrabProps","description":"Gets if can grab props","return":{"type":"boolean","description":"if can grab props"}},{"authority":"both","name":"GetCanPickupPickables","description":"Gets if can pickup Pickables (Weapons, Melee, Grenade...)","return":{"type":"boolean","description":"if can pickup Pickables"}},{"authority":"both","name":"GetCapsuleSize","description":"Gets the Capsule Size","return":{"type":"table","description":"table in the format <code>{ Radius, HalfHeight }</code>"}},{"authority":"client","name":"GetBoneTransform","description":"Gets a Bone Transform in world space given a bone name","return":{"type":"table","description":"table in the format <code>{ Location, Rotation }</code>"},"parameters":[{"name":"bone_name","type":"string"}]},{"authority":"both","name":"GetControlRotation","description":"Gets the Control Rotation","return":{"type":"Rotator","description":"the control rotation"}},{"authority":"both","name":"GetDamageMultiplier","description":"Gets the Damage Multiplier of a bone","return":{"type":"number","description":"the damage multiplier of the bone"},"parameters":[{"name":"bone_name","type":"string"}]},{"authority":"both","name":"GetFallDamageTaken","description":"Gets the Fall Damage","return":{"type":"number","description":"the fall damage"}},{"authority":"both","name":"GetFallingMode","description":"Gets the FallingMode","return":{"type":"FallingMode","description":"the FallingMode"}},{"authority":"both","name":"GetFlyingMode","description":"Gets the FlyingMode","return":{"type":"FlyingMode","description":"the FlyingMode"}},{"authority":"both","name":"GetGaitMode","description":"Gets the GaitMode","return":{"type":"GaitMode","description":"the GaitMode"}},{"authority":"both","name":"GetGrabbedProp","description":"Gets the Grabbed Prop","return":{"type":"Prop","description":"the grabbed Prop or nil"}},{"authority":"both","name":"GetGravityScale","description":"Gets the gravity scale","return":{"type":"number","description":"the gravity scale"}},{"authority":"both","name":"GetHealth","description":"Gets the current health","return":{"type":"number","description":"the health"}},{"authority":"both","name":"GetImpactDamageTaken","description":"Gets the impact damage taken","return":{"type":"number","description":"the impact damage taken"}},{"authority":"both","name":"GetJumpZVelocity","description":"Gets the Jump Z Velocity","return":{"type":"number","description":"the Jump Z Velocity"}},{"authority":"both","name":"GetMaxHealth","description":"Gets the Max Health","return":{"type":"number","description":"the max health"}},{"authority":"both","name":"GetMesh","description":"Gets the Skeletal Mesh Asset","return":{"type":"SkeletalMeshPath","description":"the Skeletal Mesh Asset"}},{"authority":"both","name":"GetMovingTo","description":"Gets the Moving To location","return":{"type":"Vector","description":"the moving to location or Vector(0, 0, 0) if not moving"}},{"authority":"both","name":"GetPicked","description":"Gets the Pickable if picking up","return":{"type":"Pickable","description":"the Pickable entity or nil"}},{"authority":"both","name":"GetPlayer","description":"Gets the possessing Player","return":{"type":"Player","description":"the Player entity or nil"}},{"authority":"both","name":"GetPunchDamage","description":"Gets the punch damage","return":{"type":"number","description":"the punch damage"}},{"authority":"both","name":"GetSpeedMultiplier","description":"Gets the speed multiplier","return":{"type":"number","description":"the speed multiplier"}},{"authority":"both","name":"GetStanceMode","description":"Gets the Stance Mode","return":{"type":"StanceMode","description":"the StanceMode"}},{"authority":"both","name":"GetSwimmingMode","description":"Gets the Swimming Mode","return":{"type":"SwimmingMode","description":"the SwimmingMode"}},{"authority":"both","name":"GetTeam","description":"Gets the Team","return":{"type":"number","description":"the team"}},{"authority":"both","name":"GetVehicle","description":"Gets the entered Vehicle","return":{"type":"Vehicle","description":"the Vehicle entity or nil"}},{"authority":"both","name":"GetViewMode","description":"Gets the View Mode","return":{"type":"ViewMode","description":"the ViewMode"}},{"authority":"both","name":"GetWeaponAimMode","description":"Gets the Weapon Aim Mode","return":{"type":"AimMode","description":"the AimMode"}}],"events":[{"authority":"client","name":"AnimationBeginNotify","description":"When an Animation Montage Notify begins","arguments":[{"type":"Character","name":"self","description":""},{"type":"string","name":"notify_name","description":""}]},{"authority":"client","name":"AnimationEndNotify","description":"When an Animation Montage Notify ends","arguments":[{"type":"Character","name":"self","description":""},{"type":"string","name":"notify_name","description":""}]},{"authority":"both","name":"Death","description":"When Character Dies","arguments":[{"type":"Character","name":"self","description":""},{"type":"number","name":"last_damage_taken","description":""},{"type":"string","name":"last_bone_damaged","description":""},{"type":"DamageType","name":"damage_type_reason","description":""},{"type":"Vector","name":"hit_from_direction","description":""},{"type":"Player","name":"instigator","description":""},{"type":"any","name":"causer","description":"The object which caused the damage"}]},{"authority":"both","name":"Drop","description":"When Character drops the currently picked up Pickable","arguments":[{"type":"Character","name":"self","description":""},{"type":"Pickable","name":"object","description":""},{"type":"boolean","name":"triggered_by_player","description":""}]},{"authority":"both","name":"EnterVehicle","description":"When Character enters a vehicle","arguments":[{"type":"Character","name":"self","description":""},{"type":"Vehicle","name":"vehicle","description":""},{"type":"number","name":"seat_index","description":""}]},{"authority":"server","name":"AttemptEnterVehicle","description":"Return false to prevent it","arguments":[{"type":"Character","name":"self","description":""},{"type":"Vehicle","name":"vehicle","description":""},{"type":"number","name":"seat_index","description":""}]},{"authority":"both","name":"FallingModeChanged","description":"Called when FallingMode changes","arguments":[{"type":"Character","name":"self","description":""},{"type":"FallingMode","name":"old_state","description":""},{"type":"FallingMode","name":"new_state","description":""}]},{"authority":"both","name":"Fire","description":"When Character fires a Weapon","arguments":[{"type":"Character","name":"self","description":""},{"type":"Weapon","name":"weapon","description":""}]},{"authority":"both","name":"GaitModeChanged","description":"Called when GaitMode changes","arguments":[{"type":"Character","name":"self","description":""},{"type":"GaitMode","name":"old_state","description":""},{"type":"GaitMode","name":"new_state","description":""}]},{"authority":"both","name":"GrabProp","description":"When Character grabs up a Prop","arguments":[{"type":"Character","name":"self","description":""},{"type":"Prop","name":"prop","description":""}]},{"authority":"both","name":"HealthChanged","description":"When Character has it\'s Health changed, or because took damage or manually set through scripting or respawning","arguments":[{"type":"Character","name":"self","description":""},{"type":"number","name":"old_health","description":""},{"type":"number","name":"new_health","description":""}]},{"authority":"both","name":"Highlight","description":"When Character highlights/looks at a Prop or a Pickable","arguments":[{"type":"Character","name":"self","description":""},{"type":"boolean","name":"is_highlighted","description":"Whether the object is being highlighted or not"},{"type":"Prop or Pickable","name":"object","description":""}]},{"authority":"server","name":"Interact","description":"Return false to prevent it","arguments":[{"type":"Character","name":"self","description":""},{"type":"Pickable or Prop","name":"object","description":""}]},{"authority":"both","name":"LeaveVehicle","description":"When Character leaves a vehicle","arguments":[{"type":"Character","name":"self","description":""},{"type":"Vehicle","name":"vehicle","description":""}]},{"authority":"server","name":"AttemptLeaveVehicle","description":"Return false to prevent it","arguments":[{"type":"Character","name":"self","description":""},{"type":"Vehicle","name":"vehicle","description":""}]},{"authority":"both","name":"MoveCompleted","description":"Called when AI reaches it\'s destination, or when it fails","arguments":[{"type":"Character","name":"self","description":""},{"type":"boolean","name":"succeeded","description":""}]},{"authority":"both","name":"PickUp","description":"When Character picks up anything","arguments":[{"type":"Character","name":"self","description":""},{"type":"Pickable","name":"object","description":""}]},{"authority":"both","name":"Possessed","description":"When Character is possessed","arguments":[{"type":"Character","name":"self","description":""},{"type":"Player","name":"possesser","description":""}]},{"authority":"both","name":"Punch","description":"When Character punches","arguments":[{"type":"Character","name":"self","description":""}]},{"authority":"both","name":"RagdollModeChanged","description":"When Character enters or leaves ragdoll","arguments":[{"type":"Character","name":"self","description":""},{"type":"boolean","name":"old_state","description":""},{"type":"boolean","name":"new_state","description":""}]},{"authority":"both","name":"AttemptReload","description":"Return false to prevent it","arguments":[{"type":"Character","name":"self","description":""},{"type":"Weapon","name":"weapon","description":""}]},{"authority":"both","name":"Reload","description":"When Character reloads a weapon","arguments":[{"type":"Character","name":"self","description":""},{"type":"Weapon","name":"weapon","description":""},{"type":"number","name":"ammo_to_reload","description":""}]},{"authority":"both","name":"Respawn","description":"When Character Respawns","arguments":[{"type":"Character","name":"self","description":""}]},{"authority":"both","name":"StanceModeChanged","description":"Called when StanceMode changes","arguments":[{"type":"Character","name":"self","description":""},{"type":"StanceMode","name":"old_state","description":""},{"type":"StanceMode","name":"new_state","description":""}]},{"authority":"both","name":"SwimmingModeChanged","description":"Called when Swimming Mode changes","arguments":[{"type":"Character","name":"self","description":""},{"type":"SwimmingMode","name":"old_state","description":""},{"type":"SwimmingMode","name":"new_state","description":""}]},{"authority":"both","name":"TakeDamage","description":"Return false to cancel the damage (will still display animations, particles and apply impact forces)","arguments":[{"type":"Character","name":"self","description":""},{"type":"number","name":"damage","description":""},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player","name":"instigator","description":"The player which caused the damage"},{"type":"any","name":"causer","description":"The object which caused the damage"}]},{"authority":"both","name":"UnGrabProp","description":"When Character drops a Prop","arguments":[{"type":"Character","name":"self","description":""},{"type":"Prop","name":"prop","description":""}]},{"authority":"both","name":"UnPossessed","description":"When Character is unpossessed","arguments":[{"type":"Character","name":"self","description":""},{"type":"Player","name":"old_possesser","description":""}]},{"authority":"both","name":"ViewModeChanged","description":"When Character changes it\'s View Mode","arguments":[{"type":"Character","name":"self","description":""},{"type":"ViewMode","name":"old_state","description":""},{"type":"ViewMode","name":"new_state","description":""}]},{"authority":"both","name":"WeaponAimModeChanged","description":"Called when Weapon Aim Mode changes","arguments":[{"type":"Character","name":"self","description":""},{"type":"AimMode","name":"old_state","description":""},{"type":"AimMode","name":"new_state","description":""}]}]}')},16736:function(e){e.exports=JSON.parse('{"name":"Decal","description":"Decals are Materials that are projected onto meshes in your level, including Static Meshes and Skeletal Meshes.","authority":"client","inheritance":["Actor","Paintable"],"constructor":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"MaterialPath","name":"material_asset","default":"","description":"Material Asset"},{"type":"Vector","name":"size","default":"Vector(128, 256, 256)","description":"Size of the Decal"},{"type":"number","name":"lifespan","default":"60","description":"Time until automatically destroyed in seconds"},{"type":"number","name":"fade_screen_size","default":"0.01","description":"Size percentage in screen to fade out"}]}')},3898:function(e){e.exports=JSON.parse('{"name":"File","description":"A File represents an entry to a system file.","authority":"server","constructor":[{"type":"string","name":"file_path","description":"Path relative to server executable"},{"type":"boolean","name":"truncate","default":"false","description":"Whether or not to clear the file upon opening it"}],"functions":[{"name":"Close","authority":"server","description":"Closes the file and destroys the entity"},{"name":"Flush","authority":"server","description":"Flushes content to the file"},{"return":{"type":"boolean","description":"if is EOF"},"authority":"server","name":"IsEOF","description":"Checks if the file status is End of File"},{"return":{"type":"boolean","description":"if status is Bad"},"authority":"server","name":"IsBad","description":"Checks if the file status is Bad"},{"return":{"type":"boolean","description":"if status is Good"},"authority":"server","name":"IsGood","description":"Checks if the file status is Good"},{"return":{"type":"boolean","description":"if last operation failed"},"authority":"server","name":"HasFailed","description":"Checks if the last operation has Failed"},{"return":{"type":"string","description":"file data"},"authority":"server","name":"Read","description":"Reads characters from the File and returns it. Also moves the file pointer to the latest read position. Pass 0 to read the whole file","parameters":[{"type":"number","name":"length","default":"0","description":"Length to be read from file"}]},{"authority":"server","name":"ReadAsync","description":"Reads characters from the File asynchronously.","parameters":[{"type":"number","name":"length","description":"Length to be read from file"},{"type":"function","name":"callback","description":"Callback with the file read"}]},{"return":{"type":"string","description":"file line data"},"authority":"server","name":"ReadLine","description":"Reads and returns the next file line"},{"name":"Seek","authority":"server","description":"Sets the file pointer to a specific position","parameters":[{"type":"number","name":"position","description":"Position to offset the file pointer"}]},{"return":{"type":"number","description":"file size"},"authority":"server","name":"Size","description":"Returns the size of the file"},{"name":"Skip","authority":"server","description":"Skips n (amount) positions from the current file pointer position","parameters":[{"type":"number","name":"amount","description":"Amount to offset the file pointer"}]},{"return":{"type":"number","description":"current file pointer position"},"authority":"server","name":"Tell","description":"Returns the current file pointer position"},{"name":"Write","authority":"server","description":"Writes the Data at the current position of the file","parameters":[{"type":"string","name":"data","description":"Data to write to the file"}]}],"static_functions":[{"type":"number","name":"Time","return":{"type":"number","description":"the last update time in unix time"},"description":"Returns when a file was last modified in Unix time","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to file"}]},{"type":"boolean","name":"CreateDirectory","return":{"type":"boolean","description":"if succeeded"},"description":"Creates a Directory (for every folder passed)","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to folder"}]},{"name":"Remove","return":{"type":"number","description":"amount of files deleted"},"description":"Deletes a folder or file","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to file or folder"}]},{"name":"Exists","return":{"type":"boolean","description":"if exists"},"description":"Verifies if a entry exists in the file system","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to file or folder"}]},{"name":"IsDirectory","return":{"type":"boolean","description":"if is a directory"},"description":"Checks if a path is a directory","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to folder"}]},{"name":"IsRegularFile","return":{"type":"boolean","description":"if is a regular file"},"description":"Checks if a path is a file","authority":"server","parameters":[{"type":"string","name":"path","description":"Path to filey"}]}]}')},39526:function(e){e.exports=JSON.parse('{"name":"SceneCapture","description":"Scene Capture is an Actor which captures a fully dynamic image of the scene into a Texture. It captures the scene from its view frustum, stores that view as an image, which is then used within a Material.","authority":"client","inheritance":["Actor"],"constructor":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)","description":"Location"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)","description":"Rotation"},{"type":"number","name":"width","default":"128","description":"Width of the generated Texture"},{"type":"number","name":"height","default":"128","description":"Height of the generated Texture"},{"type":"number","name":"render_rate","default":"0.033","description":"Render Rate (how frequent is the capture)"},{"type":"number","name":"view_distance","default":"5000","description":"Maximum distance of capturing"},{"type":"number","name":"fov_angle","default":"90","description":"FOV"}],"functions":[{"name":"SetFreeze","description":"Stops or Restore Capturing","authority":"client","parameters":[{"type":"boolean","name":"freeze"}]},{"name":"SetFOVAngle","description":"Sets the FOV","authority":"client","parameters":[{"type":"number","name":"angle"}]},{"name":"Resize","description":"Change the output Texture size\\nNote: too high texture will make the capture slower and will affect game performance","authority":"client","parameters":[{"type":"number","name":"width"},{"type":"number","name":"height"}]},{"name":"SetRenderRate","description":"Set how frequent is the capture\\nNote: Setting to 0 will make it capture every frame","authority":"client","parameters":[{"type":"number","name":"render_rate"}]}]}')},75938:function(e){e.exports=JSON.parse('{"name":"StaticMesh","description":"A StaticMesh entity represents a Mesh which can be spawned in the world, can\'t move and is more optimized for using in decorating the world.","authority":"both","inheritance":["Actor","Paintable"],"constructor":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"StaticMeshPath","name":"static_mesh_asset","default":""},{"type":"CollisionType","name":"collision_type","default":"CollisionType.Normal"}],"functions":[{"name":"GetMesh","description":"Gets the Asset path mesh used","return":{"type":"StaticMeshPath","description":"asset path"},"authority":"both"},{"name":"IsFromLevel","description":"Gets if this StaticMesh is from the Level","return":{"type":"boolean","description":"if this StaticMesh is from the level"},"authority":"client"}],"events":[{"name":"TakeDamage","description":"Called when a StaticMesh takes Damage","arguments":[{"type":"StaticMesh","name":"self","description":"The entity which triggered"},{"type":"number","name":"damage","description":"Damage amount"},{"type":"string","name":"bone","description":"Damaged bone"},{"type":"DamageType","name":"type","description":"Damage Type"},{"type":"Vector","name":"from_direction","description":"Direction of the damage relative to the damaged actor"},{"type":"Player","name":"instigator","description":"The player which caused the damage"},{"type":"any","name":"causer","description":"The object which caused the damage"}]}]}')},18259:function(e){e.exports=JSON.parse('{"name":"TextRender","description":"A Text Render class is useful for spawning Texts in 3D world, you can even attach it to other entities.","authority":"both","inheritance":["Actor","Paintable"],"constructor":[{"type":"Vector","name":"location","default":"Vector(0, 0, 0)"},{"type":"Rotator","name":"rotation","default":"Rotator(0, 0, 0)"},{"type":"string","name":"text","default":""},{"type":"Vector","name":"scale","default":"Vector(1, 1, 1)"},{"type":"Color","name":"color","default":"Color(1, 1, 1, 1)"},{"type":"FontType","name":"font_type","default":"FontType.Roboto"},{"type":"TextRenderAlignCamera","name":"align_camera","default":"TextRenderAlignCamera.Unaligned"}],"functions":[{"name":"SetColor","authority":"both","description":"Sets the Color","description_long":"Sets the Color (Internally this will call the <code>SetMaterialColorParameter(\\"Tint\\", color)</code> method)","parameters":[{"name":"color","type":"Color"}]},{"name":"SetFont","authority":"both","description":"Sets the Font","parameters":[{"name":"font_type","type":"FontType"}]},{"name":"SetFreeze","authority":"both","description":"Freeze mesh rebuild, to avoid unnecessary mesh rebuilds when setting a few properties together","parameters":[{"name":"freeze","type":"boolean"}]},{"name":"SetGlyphSettings","authority":"both","description":"Sets the Glyph representation settings to generate the 3D Mesh for this text render","parameters":[{"type":"number","name":"extrude","default":"0"},{"type":"number","name":"level","default":"0"},{"type":"TextRenderBevelType","name":"bevel_type","default":"TextRenderBevelType.Convex"},{"type":"number","name":"bevel_segments","default":"8"},{"type":"boolean","name":"outline","default":"false"}]},{"name":"SetMaxSize","authority":"both","description":"Sets the Max Size of the TextRender, optionally scaling it proportionally","parameters":[{"type":"number","name":"max_width","default":"0"},{"type":"number","name":"max_height","default":"0"},{"type":"boolean","name":"scale_proportionally","default":"true"}]},{"name":"SetText","authority":"both","description":"Sets the Text","parameters":[{"name":"text","type":"string"}]},{"name":"SetTextSettings","authority":"both","description":"Sets the Text & Font settings for this text render","parameters":[{"type":"number","name":"kerning","default":"0"},{"type":"number","name":"line_spacing","default":"0"},{"type":"number","name":"word_spacing","default":"0"},{"type":"TextRenderHorizontalAlignment","name":"horizontal_alignment","default":"TextRenderHorizontalAlignment.Center"},{"type":"TextRenderVerticalAlignment","name":"vertical_alignment","default":"0TextRenderVerticalAlignment.Center"}]}]}')},72486:function(e){e.exports=JSON.parse('{"AimMode":[{"key":"None","value":"0"},{"key":"ADS","value":"1"},{"key":"ZoomedZoom","value":"2"},{"key":"Zoomed","value":"3"},{"key":"ZoomedFar","value":"4"}],"AnimationSlotType":[{"key":"FullBody","value":"0"},{"key":"UpperBody","value":"1"}],"AttachmentRule":[{"key":"KeepRelative","value":"0"},{"key":"KeepWorld","value":"1"},{"key":"SnapToTarget","value":"2"}],"AttenuationFunction":[{"key":"Linear","value":"0"},{"key":"Logarithmic","value":"1"},{"key":"Inverse","value":"2"},{"key":"LogReverse","value":"3"},{"key":"NaturalSound","value":"4"}],"BlendMode":[{"key":"Opaque","value":"0"},{"key":"Masked","value":"1"},{"key":"Translucent","value":"2"},{"key":"Additive","value":"3"},{"key":"Modulate","value":"4"},{"key":"AlphaComposite","value":"5"},{"key":"AlphaHoldout","value":"6"}],"CameraMode":[{"key":"FPSTPS","value":"0"},{"key":"FPSOnly","value":"1"},{"key":"TPSOnly","value":"2"}],"CollisionChannel":[{"key":"WorldStatic","value":"1 << 0","description":"WorldStatic Object Types"},{"key":"WorldDynamic","value":"1 << 1","description":"WorldDynamic Object Types"},{"key":"Pawn","value":"1 << 2","description":"Capsules (usually from Characters)"},{"key":"PhysicsBody","value":"1 << 5","description":"Pickables and Props Meshes"},{"key":"Vehicle","value":"1 << 22","description":"Vehicles Meshes"},{"key":"TracePrimitive","value":"1 << 16","description":"Interactable Spheres, Damage Primitives (mainly internal use)"},{"key":"Mesh","value":"1 << 17","description":"Character Mesh"},{"key":"Foliage","value":"1 << 20","description":"Foliage Meshes"}],"CollisionType":[{"key":"Normal","value":"0","description":"Blocks All"},{"key":"StaticOnly","value":"1","description":"Only Blocks Static objects"},{"key":"NoCollision","value":"2","description":"Doesn\'t Block anything"},{"key":"IgnoreOnlyPawn","value":"3","description":"Blocks everything but Pawns (Characters)"},{"key":"Auto","value":"4","description":"Automatically selects - usually will be Normal. On Props it will switch between <b>Normal</b> and <b>IgnoreOnlyPawn</b> depending on the Prop size"}],"CursorType":[{"key":"None","value":"0"},{"key":"Default","value":"1"},{"key":"TextEditBeam","value":"2"},{"key":"ResizeLeftRight","value":"3"},{"key":"ResizeUpDown","value":"4"},{"key":"ResizeSouthEast","value":"5"},{"key":"ResizeSouthWest","value":"6"},{"key":"CardinalCross","value":"7"},{"key":"Crosshairs","value":"8"},{"key":"Hand","value":"9"},{"key":"GrabHand","value":"10"},{"key":"GrabHandClosed","value":"11"},{"key":"SlashedCircle","value":"12"},{"key":"EyeDropper","value":"13"}],"ConstraintMotion":[{"key":"Free","value":"0"},{"key":"Limited","value":"1"},{"key":"Locked","value":"2"}],"DamageType":[{"key":"Shot","value":"0"},{"key":"Explosion","value":"1"},{"key":"Punch","value":"2"},{"key":"Fall","value":"3"},{"key":"RunOverProp","value":"4"},{"key":"RunOverVehicle","value":"5"},{"key":"Unknown","value":"6"}],"DatabaseEngine":[{"key":"SQLite","value":"0"},{"key":"MySQL","value":"1"},{"key":"PostgreSQL","value":"2"}],"DifferentialType":[{"key":"LimitedSlip_4W","value":"0"},{"key":"LimitedSlip_FrontDrive","value":"1"},{"key":"LimitedSlip_RearDrive","value":"2"},{"key":"Open_4W","value":"3"},{"key":"Open_FrontDrive","value":"4"},{"key":"Open_RearDrive","value":"5"}],"FallingMode":[{"key":"None","value":"0"},{"key":"Jumping","value":"1"},{"key":"Climbing","value":"2"},{"key":"Vaulting","value":"3"},{"key":"Falling","value":"4"},{"key":"HighFalling","value":"5"},{"key":"Parachuting","value":"6"},{"key":"SkyDiving","value":"7"}],"FontType":[{"key":"Roboto","value":"0"},{"key":"GothicA1","value":"1"},{"key":"PoiretOne","value":"2"},{"key":"Oswald","value":"3"},{"key":"RobotoMono","value":"4"},{"key":"OpenSans","value":"5"}],"GaitMode":[{"key":"None","value":"0"},{"key":"Walking","value":"1"},{"key":"Sprinting","value":"2"}],"HighlightMode":[{"key":"Always","value":"0"},{"key":"OnlyHidden","value":"1"},{"key":"OnlyVisible","value":"2"}],"HandlingMode":[{"key":"SingleHandedWeapon","value":"0"},{"key":"DoubleHandedWeapon","value":"1"},{"key":"SingleHandedMelee","value":"2"},{"key":"DoubleHandedMelee","value":"3"},{"key":"Throwable","value":"4"},{"key":"Torch","value":"5"},{"key":"Barrel","value":"6"},{"key":"Box","value":"7"}],"InputEvent":[{"key":"Pressed","value":"0"},{"key":"Released","value":"1"}],"LightProfile":[{"key":"None","value":"0"},{"key":"Arrow_Star","value":"1"},{"key":"Arrow_Up","value":"2"},{"key":"Beam_01","value":"3"},{"key":"Beam_02","value":"4"},{"key":"Beam_03","value":"5"},{"key":"Beam_04","value":"6"},{"key":"Beam_05","value":"7"},{"key":"Beam_06","value":"8"},{"key":"Beam_07","value":"9"},{"key":"Beam_08","value":"10"},{"key":"Beam_LED_01","value":"11"},{"key":"Beam_LED_02","value":"12"},{"key":"Beam_LED_03","value":"13"},{"key":"Beam_LED_04","value":"14"},{"key":"Beam_LED_05","value":"15"},{"key":"Beam_LED_06","value":"16"},{"key":"Beam_LED_07","value":"17"},{"key":"Bow","value":"18"},{"key":"Capped_01","value":"19"},{"key":"Capped_02","value":"20"},{"key":"Shattered_01","value":"21"},{"key":"Shattered_02","value":"22"},{"key":"Shattered_03","value":"23"},{"key":"Shattered_04","value":"24"},{"key":"Shattered_05","value":"25"},{"key":"SpotLight_01","value":"26"},{"key":"SpotLight_02","value":"27"},{"key":"SpotLight_03","value":"28"},{"key":"SpotLight_04","value":"29"},{"key":"Spreadout_01","value":"30"},{"key":"Spreadout_02","value":"31"},{"key":"Spreadout_03","value":"32"},{"key":"Spreadout_04","value":"33"},{"key":"Star_Bow","value":"34"},{"key":"Star_Burst_01","value":"35"},{"key":"Star_Burst_02","value":"36"},{"key":"Star_Burst_03","value":"37"},{"key":"Star_Burst_04","value":"38"},{"key":"Star_Burst_05","value":"39"},{"key":"Star_Burst_06","value":"40"},{"key":"Star_Burst_07","value":"41"},{"key":"Star_Burst_08","value":"42"},{"key":"Star_X_01","value":"43"},{"key":"Star_X_02","value":"44"},{"key":"Wall_Boomerang","value":"45"},{"key":"Wall_Inverted_V","value":"46"},{"key":"Wall_Star_T","value":"47"},{"key":"Wing_6","value":"48"},{"key":"Wing_V_01","value":"49"},{"key":"Wing_V_02","value":"50"}],"LogType":[{"key":"Display","value":"0"},{"key":"Warning","value":"1"},{"key":"Error","value":"2"},{"key":"Debug","value":"3"},{"key":"Verbose","value":"4"},{"key":"Scripting","value":"5"},{"key":"ScriptingWarn","value":"6"},{"key":"ScriptingError","value":"7"},{"key":"Chat","value":"8"},{"key":"WebUI","value":"9"},{"key":"Success","value":"10"},{"key":"Fatal","value":"11"}],"LightType":[{"key":"Point","value":"0"},{"key":"Spot","value":"1"},{"key":"React","value":"2"}],"SoundType":[{"key":"SFX","value":"0"},{"key":"Music","value":"1"}],"SoundLoopMode":[{"key":"Default","value":"0"},{"key":"Forever","value":"1"},{"key":"Never","value":"2"}],"StanceMode":[{"key":"None","value":"0"},{"key":"Standing","value":"1"},{"key":"Crouching","value":"2"},{"key":"Proning","value":"3"}],"SurfaceType":[{"key":"Default","value":"0"},{"key":"Carpet","value":"1"},{"key":"Concrete","value":"2"},{"key":"Grass","value":"3"},{"key":"Gravel","value":"4"},{"key":"Ground","value":"5"},{"key":"MetalLight","value":"6"},{"key":"Plastic","value":"7"},{"key":"Sand","value":"8"},{"key":"Snow","value":"9"},{"key":"Water","value":"10"},{"key":"WoodLight","value":"11"},{"key":"Flesh","value":"12"},{"key":"MetalHeavy","value":"13"},{"key":"WoodHeavy","value":"14"},{"key":"Ice","value":"15"},{"key":"Mud","value":"16"},{"key":"Rock","value":"17"},{"key":"Thump","value":"18"},{"key":"Glass","value":"19"}],"SwimmingMode":[{"key":"None","value":"0"},{"key":"Surface","value":"1"},{"key":"Underwater","value":"2"}],"TextRenderAlignCamera":[{"key":"Unaligned","value":"0"},{"key":"AlignCameraRotation","value":"1"},{"key":"FaceCamera","value":"2"}],"TextRenderBevelType":[{"key":"Linear","value":"0"},{"key":"HalfCircle","value":"1"},{"key":"Convex","value":"2"},{"key":"Concave","value":"3"},{"key":"OneStep","value":"4"},{"key":"TwoSteps","value":"5"},{"key":"Engraved","value":"6"}],"TextRenderHorizontalAlignment":[{"key":"Left","value":"0"},{"key":"Center","value":"1"},{"key":"Right","value":"2"}],"TextRenderVerticalAlignment":[{"key":"Top","value":"0"},{"key":"Center","value":"1"},{"key":"Bottom","value":"2"},{"key":"QuadTop","value":"3"}],"TriggerType":[{"key":"Sphere","value":"0"},{"key":"Box","value":"1"}],"ViewMode":[{"key":"FPS","value":"0"},{"key":"TPS1","value":"1"},{"key":"TPS2","value":"2"},{"key":"TPS3","value":"3"},{"key":"TopDown","value":"4"}],"VOIPSetting":[{"key":"Local","value":"0"},{"key":"Global","value":"1"},{"key":"Muted","value":"2"}],"WeatherType":[{"key":"Clear","value":"0"},{"key":"Rain","value":"1"},{"key":"Cloudy","value":"2"},{"key":"Thunderstorm","value":"3"}],"WebUIModifier":[{"key":"None","value":"0"},{"key":"CapsLockOn","value":"1 << 0"},{"key":"ShiftDown","value":"1 << 1"},{"key":"ControlDown","value":"1 << 2"},{"key":"AltDown","value":"1 << 3"},{"key":"LeftMouseButton","value":"1 << 4"},{"key":"MiddleMouseButton","value":"1 << 5"},{"key":"RightMouseButton","value":"1 << 6"},{"key":"CommandDown","value":"1 << 7"},{"key":"NumLockOn","value":"1 << 8"},{"key":"IsKeyPad","value":"1 << 9"},{"key":"IsLeft","value":"1 << 10"},{"key":"IsRight","value":"1 << 11"},{"key":"AltgrDown","value":"1 << 12"},{"key":"IsRepeat","value":"1 << 13"}],"WebUIKeyType":[{"key":"Down","value":"0"},{"key":"Up","value":"1"},{"key":"Char","value":"2"}],"WebUIMouseType":[{"key":"Left","value":"0"},{"key":"Right","value":"1"},{"key":"Middle","value":"2"}]}')}}]);