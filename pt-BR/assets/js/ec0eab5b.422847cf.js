"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[5273],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>f});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(o),f=n,h=d["".concat(l,".").concat(f)]||d[f]||u[f]||a;return o?r.createElement(h,s(s({ref:t},p),{},{components:o})):r.createElement(h,s({ref:t},p))}));function f(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<a;c++)s[c]=o[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},65002:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=o(87462),n=(o(67294),o(3905));const a={title:"Fogo de Artif\xedcio",description:"How to create a Firework-shooter weapon using the Fireworks Particle Effects Asset Pack from our Vault!",tags:["tutorial-example","script","assets"]},s=void 0,i={unversionedId:"getting-started/tutorials-and-examples/fireworks",id:"version-latest/getting-started/tutorials-and-examples/fireworks",title:"Fogo de Artif\xedcio",description:"How to create a Firework-shooter weapon using the Fireworks Particle Effects Asset Pack from our Vault!",source:"@site/i18n/pt-BR/docusaurus-plugin-content-docs/version-latest/getting-started/tutorials-and-examples/fireworks.md",sourceDirName:"getting-started/tutorials-and-examples",slug:"/getting-started/tutorials-and-examples/fireworks",permalink:"/pt-BR/docs/getting-started/tutorials-and-examples/fireworks",draft:!1,editUrl:"https://github.com/nanos-world/docs/edit/master/versioned_docs/version-latest/getting-started/tutorials-and-examples/fireworks.md",tags:[{label:"tutorial-example",permalink:"/pt-BR/docs/tags/tutorial-example"},{label:"script",permalink:"/pt-BR/docs/tags/script"},{label:"assets",permalink:"/pt-BR/docs/tags/assets"}],version:"latest",frontMatter:{title:"Fogo de Artif\xedcio",description:"How to create a Firework-shooter weapon using the Fireworks Particle Effects Asset Pack from our Vault!",tags:["tutorial-example","script","assets"]},sidebar:"version-latest/main",previous:{title:"Portas",permalink:"/pt-BR/docs/getting-started/tutorials-and-examples/doors"},next:{title:"Arma de Gravidade",permalink:"/pt-BR/docs/getting-started/tutorials-and-examples/gravity-gun"}},l={},c=[{value:"Configuring the Asset Pack",id:"configuring-the-asset-pack",level:3},{value:"Code Snippet",id:"code-snippet",level:3}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"How to create a Firework-shooter weapon using the Fireworks Particle Effects Asset Pack from our Vault!"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"We now have a ",(0,n.kt)("strong",{parentName:"p"},"Fireworks Tools")," Package available to download in the Vault which does exactly what this snippet do!")),(0,n.kt)("p",null,"First you will need to download the Asset Pack ",(0,n.kt)("strong",{parentName:"p"},"Fireworks Particle Effects")," from our Vault!"),(0,n.kt)("p",null,(0,n.kt)("img",{src:o(59048).Z,width:"573",height:"438"})),(0,n.kt)("h3",{id:"configuring-the-asset-pack"},"Configuring the Asset Pack"),(0,n.kt)("p",null,"After that you will need to add the requirement of this ",(0,n.kt)("strong",{parentName:"p"},"Asset Pack")," into your Package ",(0,n.kt)("inlineCode",{parentName:"p"},"Config.toml"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="Config.toml"',title:'"Config.toml"'},'# Package Configurations\n[package]\n    # Package Name\n    name =                  "My Awesome Firework Package"\n    # Contributors\n    author =                "SyedMuhammad"\n    # Version\n    version =               "1.0.0"\n    # Image URL\n    image =                 "https://i.imgur.com/tQXi0xt.jpg"\n    # Package Type: \'executable\' (normal package) | \'library\' (doesn\'t run - useful for code library)\n    type =                  "executable"\n    # Whether to force the Custom Map Script to do NOT load\n    force_no_map_script =   false\n    # Auto Destroy all entities spawned by this package when it unloads\n    auto_cleanup =          true\n    # Asset Packs Requirements\n    assets_requirements = [\n        "ts-fireworks",\n    ]\n')),(0,n.kt)("h3",{id:"code-snippet"},"Code Snippet"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Server/Index.lua"',title:'"Server/Index.lua"'},"-- For convenience, we will use the default weapons of the NanosWorldWeapons library to be our Firework-shooter weapon\nPackage.RequirePackage(\"nanos-world-weapons\")\n\n-- Let's spawn a Glock and set it to give no damage, this also avoids it from spawning a trail particle\nlocal weapon = NanosWorldWeapons.Glock()\nweapon:SetDamage(0)\n\n-- Let's subscribe for 'Fire' event from this weapon, this will be triggered for every fire it shoots\nweapon:Subscribe(\"Fire\", function(weap, shooter)\n    -- We get the position at the front of the weapon\n    local control_rotation = shooter:GetControlRotation()\n    local forward_vector = control_rotation:GetForwardVector()\n    local spawn_location = shooter:GetLocation() + Vector(0, 0, 40) + forward_vector * Vector(400)\n\n    -- We will spawn an empty/invisible Prop, to be our projectile - using our Invisible mesh 'SM_None'\n    local prop = Prop(spawn_location, control_rotation, \"nanos-world::SM_None\")\n\n    -- Spawns the trail/shell particle, this particle is not auto destroyed as it should follow the projectile,\n    -- this way we must destroy it manually after all\n    -- The Asset Pack which we are using to get the particles contains two Shells: 'PS_TS_FireworksShell' and 'PS_TS_FireworksShell_Palm'\n    -- You can use the another one to get more cool effects!\n    local particle = Particle(Vector(), Rotator(), \"ts-fireworks::PS_TS_FireworksShell\", false, true)\n\n    -- Attaches the particle to the projectile prop\n    particle:AttachTo(prop)\n\n    -- Impulses the Projectile forward\n    prop:AddImpulse(forward_vector * Vector(50000), true)\n\n    -- Sets the shooter to be the Network Authority of this Projectile\n    -- This way only the shooter will be reponsible to handle the physics of this object\n    prop:SetNetworkAuthority(shooter:GetPlayer())\n\n    -- Calls the client to spawn the 'Launch' sound\n    Events.BroadcastRemote(\"SpawnFireworkSound\", particle)\n\n    -- After 500 miliseconds, explode the firework\n    Timer.SetTimeout(function(pr)\n        -- Calls the client to spawn the 'Explosion' sound at the projectile location\n        Events.BroadcastRemote(\"ExplodeFireworkSound\", pr:GetLocation())\n\n        -- Spawns the Particle Explosion.\n        -- This Asset Pack also contains the following Particles, feel free to try them!\n        -- 'PS_TS_Fireworks_Burst_Chrys', 'PS_TS_Fireworks_Burst_Circle', 'PS_TS_Fireworks_Burst_Palm',\n        -- 'PS_TS_Fireworks_Burst_Shaped' and 'PS_TS_Fireworks_Burst_ShellsWithinShells'\n        local particle_burst = Particle(pr:GetLocation(), Rotator(), \"ts-fireworks::PS_TS_Fireworks_Burst_Palm\", true, true)\n\n        -- Those particles make it available to tweak some of their properties, let's set the BlastColor to red\n        particle_burst:SetParameterColor(\"BlastColor\", Color(1, 0, 0))\n\n        -- Those particles exposes the following parameters:\n        --  Color: 'BurstColor', 'SparkleColor', 'FlareColor', 'TailColor'\n        --  bool: 'BlastSmoke', 'TailSmoke'\n        --  float: 'BurstMulti', 'SparkleMulti'\n    end, 500, prop)\n\n    -- After 1 second, destroy the particle and the projectile\n    prop:SetLifeSpan(1)\n    particle:SetLifeSpan(1)\nend)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Client/Index.lua"',title:'"Client/Index.lua"'},'-- Subscribes to spawn and attach the Firework launch sound\nEvents.Subscribe("SpawnFireworkSound", function(firework)\n    local sound = Sound(Vector(), "ts-fireworks::A_Firework_Launch", false, true, SoundType.SFX, 1, 1, 400, 100000)\n    sound:AttachTo(firework)\nend)\n\n-- Subscribes to spawn the Firework explosion sound\nEvents.Subscribe("ExplodeFireworkSound", function(location)\n    Sound(location, "ts-fireworks::A_Firework_Explosion_Fizz", false, true, SoundType.SFX, 3, 1, 400, 100000)\nend)\n')))}u.isMDXComponent=!0},59048:(e,t,o)=>{o.d(t,{Z:()=>r});const r=o.p+"assets/images/fireworks-01-b03ee1dd1e60597feb1b94f257daf609.jpg"}}]);