"use strict";(self.webpackChunkdocs_docusaurus=self.webpackChunkdocs_docusaurus||[]).push([[9541],{5707:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>c});var s=o(85893),d=o(11151);const l={title:"M\xf3dulos",description:"Estendendo as funcionalidades da Scripting API do nanos world"},i=void 0,t={id:"core-concepts/modules",title:"M\xf3dulos",description:"Estendendo as funcionalidades da Scripting API do nanos world",source:"@site/i18n/pt-BR/docusaurus-plugin-content-docs/current/core-concepts/modules.md",sourceDirName:"core-concepts",slug:"/core-concepts/modules",permalink:"/pt-BR/docs/next/core-concepts/modules",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/nanos-world-docs/pt-BR",tags:[],version:"current",frontMatter:{title:"M\xf3dulos",description:"Estendendo as funcionalidades da Scripting API do nanos world"},sidebar:"main",previous:{title:"Assets Guide",permalink:"/pt-BR/docs/next/core-concepts/assets"},next:{title:"Ciclo de Vida do Server & Client",permalink:"/pt-BR/docs/next/core-concepts/server-and-client-lifecycle"}},r={},c=[{value:"Creating your own C module",id:"creating-your-own-c-module",level:2},{value:"First Steps",id:"first-steps",level:4},{value:"Understanding the example",id:"understanding-the-example",level:3},{value:"Compiling your C module",id:"compiling-your-c-module",level:3},{value:"Using your C module",id:"using-your-c-module",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Estendendo as funcionalidades da Scripting API do nanos world"}),"\n",(0,s.jsx)(n.p,{children:"M\xf3dulos permitem que voc\xea estenda a funcionalidade da API de script do nanos world no lado do servidor. Atualmente apenas m\xf3dulos C s\xe3o suportados."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"Esteja ciente de que esta parte da API de script \xe9 atualmente um 'trabalho em progresso' e pode mudar a qualquer momento."})}),"\n",(0,s.jsx)(n.h2,{id:"creating-your-own-c-module",children:"Creating your own C module"}),"\n",(0,s.jsx)(n.p,{children:"It is also possible to you create your own C/C++ module and call it's functions from nanos world."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"This is an advanced procedure so instabilities and even crashes may occur."})}),"\n",(0,s.jsxs)(n.p,{children:["To create your own module, fist make sure you have ",(0,s.jsx)(n.strong,{children:"Visual Studio"})," installed with ",(0,s.jsx)(n.strong,{children:"Desktop development with C++"})," (and ",(0,s.jsx)(n.strong,{children:"CMake"}),") or any other C compiler on Linux."]}),"\n",(0,s.jsx)(n.h4,{id:"first-steps",children:"First Steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Then, clone our ",(0,s.jsx)(n.a,{href:"https://github.com/nanos-world-modules/module-example",children:"example module"})," in your computer to get start with it."]}),"\n",(0,s.jsxs)(n.li,{children:["After cloning, you will need to download it's submodules with ",(0,s.jsx)(n.code,{children:"git submodule update --init --recursive"})," - this will download the ",(0,s.jsx)(n.a,{href:"https://github.com/nanos-world/module-sdk/",children:"module-sdk"})," as a git submodule into deps/ folder automatically."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"understanding-the-example",children:"Understanding the example"}),"\n",(0,s.jsxs)(n.p,{children:["The important file is under ",(0,s.jsx)(n.code,{children:"src/example.cpp"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",metastring:"reference",children:"https://github.com/nanos-world-modules/module-example/blob/main/src/example.cpp\n"})}),"\n",(0,s.jsx)(n.h3,{id:"compiling-your-c-module",children:"Compiling your C module"}),"\n",(0,s.jsx)(n.p,{children:"To compile the example, follow the steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create a folder called ",(0,s.jsx)(n.code,{children:"build/"}),": ",(0,s.jsx)(n.code,{children:"mkdir build"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Enter the build folder: ",(0,s.jsx)(n.code,{children:"cd build"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"cmake .."}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Build it with ",(0,s.jsx)(n.code,{children:"cmake --build . --config Release"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["And now you will have the dlls/libs in ",(0,s.jsx)(n.code,{children:"build/Release"})," folder."]}),"\n",(0,s.jsx)(n.h3,{id:"using-your-c-module",children:"Using your C module"}),"\n",(0,s.jsxs)(n.p,{children:["Now copy the ",(0,s.jsx)(n.code,{children:".dll"})," file into your nanos world ",(0,s.jsx)(n.code,{children:"Server/Modules"})," folder."]}),"\n",(0,s.jsx)(n.p,{children:"And in your Package, you can load and use it like:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"-- Loads the module 'example'\nlocal example = require('example')\n\n-- Calls the module function 'test'\n-- Will print 'Hello World' on console\nConsole.Log(example.test())\n"})})]})}function u(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},11151:(e,n,o)=>{o.d(n,{Z:()=>t,a:()=>i});var s=o(67294);const d={},l=s.createContext(d);function i(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);